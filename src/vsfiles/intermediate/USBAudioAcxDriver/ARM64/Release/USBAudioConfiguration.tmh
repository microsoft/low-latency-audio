// 6bd0f76b30d235e2c67b8b5d205d8dea Generated file. Do not edit.
// File created by WPP compiler version 10.0.26100
// from template km-default.tpl

#pragma once

// template km-header.tpl

#ifdef  WPP_THIS_FILE
// included twice
#       define  WPP_ALREADY_INCLUDED
#       undef   WPP_THIS_FILE
#endif  // #ifdef WPP_THIS_FILE

#define WPP_THIS_FILE USBAudioConfiguration_cpp

#ifndef WPP_ALREADY_INCLUDED

#define WPP_KERNEL_MODE 

#include <evntrace.h>
#include <stddef.h>
#include <stdarg.h>
#include <wmistr.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef
LONG
(*PFN_WPPQUERYTRACEINFORMATION) (
    IN  TRACE_INFORMATION_CLASS TraceInformationClass,
    OUT PVOID  TraceInformation,
    IN  ULONG  TraceInformationLength,
    OUT PULONG RequiredLength OPTIONAL,
    IN  PVOID  Buffer OPTIONAL
    );

typedef
LONG
(*PFN_WPPTRACEMESSAGE)(
    IN ULONG64  LoggerHandle,
    IN ULONG   MessageFlags,
    IN LPCGUID MessageGuid,
    IN USHORT  MessageNumber,
    IN ...
    );

typedef enum _WPP_TRACE_API_SUITE {
    WppTraceDisabledSuite,
    WppTraceWin2K,
    WppTraceWinXP,
    WppTraceTraceLH,
    WppTraceServer08,
    WppTraceMaxSuite
} WPP_TRACE_API_SUITE;

_IRQL_requires_same_
typedef
VOID
(NTAPI *PETW_CLASSIC_CALLBACK)(
    _In_ LPCGUID Guid,
    _In_ UCHAR ControlCode,
    _In_ PVOID EnableContext,
    _In_opt_ PVOID CallbackContext
    );

_IRQL_requires_same_
typedef
NTSTATUS
NTKERNELAPI
(FN_ETWREGISTERCLASSICPROVIDER)(
    _In_ LPCGUID ProviderGuid,
    _In_ ULONG Type,
    _In_ PETW_CLASSIC_CALLBACK EnableCallback,
    _In_opt_ PVOID CallbackContext,
    _Out_ PREGHANDLE RegHandle
    );

typedef FN_ETWREGISTERCLASSICPROVIDER *PFN_ETWREGISTERCLASSICPROVIDER;

typedef
BOOLEAN
NTKERNELAPI
(FN_WPPGETVERSION)(
    _Out_opt_ PULONG MajorVersion,
    _Out_opt_ PULONG MinorVersion,
    _Out_opt_ PULONG BuildNumber,
    _Out_opt_ PUNICODE_STRING CSDVersion
    );

typedef FN_WPPGETVERSION *PFN_WPPGETVERSION;

typedef
NTSTATUS
NTKERNELAPI
(FN_ETWUNREGISTER)(
    _In_ REGHANDLE RegHandle
    );

typedef FN_ETWUNREGISTER *PFN_ETWUNREGISTER;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPQUERYTRACEINFORMATION   pfnWppQueryTraceInformation = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPTRACEMESSAGE            pfnWppTraceMessage = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWUNREGISTER              pfnEtwUnregister = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWREGISTERCLASSICPROVIDER pfnEtwRegisterClassicProvider = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPGETVERSION              pfnWppGetVersion = NULL;


__declspec(selectany) WPP_TRACE_API_SUITE            WPPTraceSuite = WppTraceDisabledSuite;

#if !defined(_NTRTL_)
#if !defined(_NTHAL_)
// fake RTL_TIME_ZONE_INFORMATION //
typedef int RTL_TIME_ZONE_INFORMATION;
#endif
#define _WMIKM_
#endif

#ifndef WPP_TRACE
#define WPP_TRACE pfnWppTraceMessage
#endif

#if ENABLE_WPP_RECORDER

#define _ENABLE_WPP_RECORDER TRUE

#ifndef WPP_RECORDER
#define WPP_RECORDER WppAutoLogTrace
#endif

//
// This setting is only applicable when IFR is enabled.
// Setting this to 1 will allow a WPP trace session to 
// capture trace messages as usual i.e it will require the
// user to provide WPP trace ENABLED and LOGGER macro. If 
// this is set to 0 by default the IFR trace filter also
// affects which trace messages land in the WPP trace session.
//
#if !defined(ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER)
#define ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER 0
#endif

#if !defined(WPP_RECORDER_LEVEL_FLAGS_ARGS)
#define WPP_RECORDER_LEVEL_FLAGS_ARGS(lvl, flags) WPP_CONTROL(WPP_BIT_ ## flags).AutoLogContext, lvl, WPP_BIT_ ## flags
#define WPP_RECORDER_LEVEL_FLAGS_FILTER(lvl,flags) (lvl < TRACE_LEVEL_VERBOSE || WPP_CONTROL(WPP_BIT_ ## flags).AutoLogVerboseEnabled)
#endif


#if !defined(WPP_RECORDER_LEVEL_ARGS)
#define WPP_RECORDER_LEVEL_ARGS(lvl) WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogContext, 0, WPP_BIT_ ## lvl
#define WPP_RECORDER_LEVEL_FILTER(lvl) (WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogVerboseEnabled)
#endif

NTSTATUS
WppAutoLogTrace(
    IN PVOID              AutoLogContext,
    IN UCHAR              MessageLevel,
    IN ULONG              MessageFlags,
    IN LPGUID             MessageGuid,
    IN USHORT             MessageNumber,
    IN ...
    );

#else
#define _ENABLE_WPP_RECORDER FALSE
#endif

VOID
WppLoadTracingSupport(
    VOID
    );

NTSTATUS
WppTraceCallback(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _Inout_ PVOID Context,
    _Out_ PULONG Size
    );

#if !defined(WPP_TRACE_CONTROL_NULL_GUID)
DEFINE_GUID(WPP_TRACE_CONTROL_NULL_GUID, 0x00000000L, 0x0000, 0x0000, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
#endif

#define WPP_TRACE_CONTROL(Function,Buffer,BufferSize,ReturnSize) WppTraceCallback(Function,NULL,BufferSize,Buffer,&WPP_CB[0],&ReturnSize);

__inline ULONG64 WppQueryLogger(_In_opt_ PCWSTR LoggerName)
{
    if (WppTraceWinXP != WPPTraceSuite) {
        return (ULONG64)0;
    }

    ULONG ReturnLength;
    LONG Status;
    ULONG64 TraceHandle;
    UNICODE_STRING Buffer;

    RtlInitUnicodeString(&Buffer, LoggerName ? LoggerName : L"stdout");

    Status = pfnWppQueryTraceInformation(TraceHandleByNameClass,
                                         (PVOID)&TraceHandle,
                                         sizeof(TraceHandle),
                                         &ReturnLength,
                                         (PVOID)&Buffer
                                         );
    if (Status != STATUS_SUCCESS) {
        return (ULONG64)0;
    }

    return TraceHandle;
}

typedef LONG (*WMIENTRY_NEW)(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _In_ PVOID Context,
    _Out_ PULONG Size
    );

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
    WMIENTRY_NEW                        Callback;
    LPCGUID                             ControlGuid;
    struct _WPP_TRACE_CONTROL_BLOCK    *Next;
    __int64                             Logger;
    PUNICODE_STRING                     RegistryPath;
    UCHAR                               FlagsLen;
    UCHAR                               Level;
    USHORT                              Reserved;
    ULONG                               Flags[1];
    ULONG                               ReservedFlags;
    REGHANDLE                           RegHandle;
#if ENABLE_WPP_RECORDER
    PVOID                               AutoLogContext;
    USHORT                              AutoLogVerboseEnabled;
    USHORT                              AutoLogAttachToMiniDump;
#endif
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK;

VOID WppCleanupKm(_When_(_ENABLE_WPP_RECORDER, _In_) _When_(!_ENABLE_WPP_RECORDER, _In_opt_) PDRIVER_OBJECT DriverObject);

#define WPP_CLEANUP(DriverObject) WppCleanupKm((PDRIVER_OBJECT)DriverObject)

#define WPP_IsValidSid RtlValidSid
#define WPP_GetLengthSid RtlLengthSid

//
// Callback routine to be defined by the driver, which will be called from WPP callback
// WPP will pass current valued of : GUID, Logger, Enable, Flags, and Level
//
// To activate driver must define WPP_PRIVATE_ENABLE_CALLBACK in their code, sample below
// #define WPP_PRIVATE_ENABLE_CALLBACK MyPrivateCallback;
//
typedef
VOID
(*PFN_WPP_PRIVATE_ENABLE_CALLBACK)(
    _In_ LPCGUID Guid,
    _In_ __int64 Logger,
    _In_ BOOLEAN Enable,
    _In_ ULONG Flags,
    _In_ UCHAR Level);

#ifdef __cplusplus
} // extern "C"
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED

// template control.tpl

//
//     Defines a set of macro that expand control model specified
//     with WPP_CONTROL_GUIDS (example shown below)
//     into an enum of trace levels and required structures that
//     contain the mask of levels, logger handle and some information
//     required for registration.
//

#ifndef WPP_ALREADY_INCLUDED

#define WPP_EVAL(x) x
#define WPP_STR(x)  #x
#define WPP_STRINGIZE(x) WPP_STR(x)
#define WPP_GLUE(a, b)  a ## b
#define WPP_GLUE3(a, b, c)  a ## b ## c
#define WPP_GLUE4(a, b, c, d)  a ## b ## c ## d
#define WPP_XGLUE(a, b) WPP_GLUE(a, b)
#define WPP_XGLUE3(a, b, c) WPP_GLUE3(a, b, c)
#define WPP_XGLUE4(a, b, c, d) WPP_GLUE4(a, b, c, d)

///////////////////////////////////////////////////////////////////////////////////
//
// #define WPP_CONTROL_GUIDS \
//     WPP_DEFINE_CONTROL_GUID(Regular,(81b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Error)      \
//       WPP_DEFINE_BIT(Unusual)    \
//       WPP_DEFINE_BIT(Noise)      \
//    )        \
//    WPP_DEFINE_CONTROL_GUID(HiFreq,(91b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Entry)      \
//       WPP_DEFINE_BIT(Exit)       \
//       WPP_DEFINE_BIT(ApiCalls)   \
//       WPP_DEFINE_BIT(RandomJunk) \
//       WPP_DEFINE_BIT(LovePoem)   \
//    )

#ifdef __cplusplus
extern "C" {
#endif

#ifndef WPP_NO_CONTROL_GUIDS

#ifdef WPP_DEFAULT_CONTROL_GUID
#  ifdef WPP_CONTROL_GUIDS
#     error WPP_DEFAULT_CONTROL_GUID cannot be used together with WPP_CONTROL_GUIDS.
#  else // WPP_CONTROL_GUIDS
#     define WPP_CONTROL_GUIDS \
         WPP_DEFINE_CONTROL_GUID(Default,(WPP_DEFAULT_CONTROL_GUID), \
         WPP_DEFINE_BIT(Error)   \
         WPP_DEFINE_BIT(Unusual) \
         WPP_DEFINE_BIT(Noise)   \
      )
#  endif // WPP_CONTROL_GUIDS
#endif // WPP_DEFAULT_CONTROL_GUID

#ifndef WPP_CONTROL_GUIDS
#  pragma message(__FILE__ " : error : Please define control model via WPP_CONTROL_GUIDS or WPP_DEFAULT_CONTROL_GUID macros")
#  pragma message(__FILE__ " : error : don't forget to call WPP_INIT_TRACING and WPP_CLEANUP in your main, DriverEntry or DllInit")
#  pragma message(__FILE__ " : error : see tracewpp.doc for further information")
#  error WPP_CONTROL_GUIDS not defined.
#endif // WPP_CONTROL_GUIDS
// a set of macro to convert a guid in a form x(81b20fea,73a8,4b62,95bc,354477c97a6f)
// into either a a struct or text string

#define _WPPW(x) WPP_GLUE(L, x)

#define WPP_GUID_NORM(l,w1,w2,w3,ll) l ## w1 ## w2 ## w3 ## ll
#define WPP_GUID_TEXT(l,w1,w2,w3,ll) #l "-" #w1 "-" #w2 "-" #w3 "-" #ll
#define WPP_GUID_WTEXT(l,w1,w2,w3,ll) _WPPW(#l) L"-" _WPPW(#w1) L"-" _WPPW(#w2) L"-" _WPPW(#w3) L"-" _WPPW(#ll)
#define WPP_EXTRACT_BYTE(val,n) (((ULONGLONG)(0x ## val) >> (8 * n)) & 0xFF)
#define WPP_GUID_STRUCT(l,w1,w2,w3,ll) {0x ## l, 0x ## w1, 0x ## w2,\
     {WPP_EXTRACT_BYTE(w3, 1), WPP_EXTRACT_BYTE(w3, 0),\
      WPP_EXTRACT_BYTE(ll, 5), WPP_EXTRACT_BYTE(ll, 4),\
      WPP_EXTRACT_BYTE(ll, 3), WPP_EXTRACT_BYTE(ll, 2),\
      WPP_EXTRACT_BYTE(ll, 1), WPP_EXTRACT_BYTE(ll, 0)} }

#ifndef WPP_FORCEINLINE
#define WPP_FORCEINLINE __forceinline
#endif

// define an enum of control block names
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)),
enum WPP_CTL_NAMES { WPP_CONTROL_GUIDS WPP_LAST_CTL};
#undef WPP_DEFINE_CONTROL_GUID

// define control guids
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
extern __declspec(selectany) const GUID WPP_XGLUE4(WPP_, ThisDir, _CTLGUID_, WPP_EVAL(Name)) = WPP_GUID_STRUCT Guid;
WPP_CONTROL_GUIDS
#undef WPP_DEFINE_CONTROL_GUID

// define enums of individual bits
/////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
    WPP_XGLUE(WPP_BLOCK_START_, WPP_EVAL(Name)) = WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)) * 0x10000, Bits WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name)),
# define WPP_DEFINE_BIT(Name) WPP_BIT_ ## Name,
enum WPP_DEFINE_BIT_NAMES { WPP_CONTROL_GUIDS };
# undef WPP_DEFINE_BIT
#undef WPP_DEFINE_CONTROL_GUID

#define WPP_MASK(CTL)    (1 << ( ((CTL)-1) & 31 ))
#define WPP_FLAG_NO(CTL) ( (0xFFFF & ((CTL)-1) ) / 32)
#define WPP_CTRL_NO(CTL) ((CTL) >> 16)

// calculate how many DWORDs we need to get the required number of bits
// upper estimate. Sometimes will be off by one
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) | WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name))
enum _WPP_FLAG_LEN_ENUM { WPP_FLAG_LEN = 1 | ((0 WPP_CONTROL_GUIDS) & 0xFFFF) / 32 };
#undef WPP_DEFINE_CONTROL_GUID

//
// Check that maximum number of flags does not exceed 32
//
#ifndef C_ASSERT
#define C_ASSERT(e) typedef char __C_ASSERT__[(e)?1:-1]
#endif

#define MAX_NUMBER_OF_ETW_FLAGS 34 // 32 flags plus 2 separators
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) && ((WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name) & 0xFFFF)) < MAX_NUMBER_OF_ETW_FLAGS)
enum _WPP_FLAG_LEN_ENUM_MAX { WPP_MAX_FLAG_LEN_CHECK = (1 WPP_CONTROL_GUIDS) };
#undef WPP_DEFINE_CONTROL_GUID

#ifndef WPP_CB
#define WPP_CB      WPP_GLOBAL_Control
#endif
#ifndef WPP_CB_TYPE
#define WPP_CB_TYPE WPP_PROJECT_CONTROL_BLOCK
#endif

#ifndef WPP_CHECK_INIT
#define WPP_CHECK_INIT (WPP_CB != (WPP_CB_TYPE*)&WPP_CB) &&
#endif

typedef union {
    WPP_TRACE_CONTROL_BLOCK Control;
    UCHAR ReserveSpace[ sizeof(WPP_TRACE_CONTROL_BLOCK) + sizeof(ULONG) * (WPP_FLAG_LEN - 1) ];
} WPP_CB_TYPE ;


extern __declspec(selectany) WPP_CB_TYPE *WPP_CB = (WPP_CB_TYPE*)&WPP_CB;

#if ENABLE_WPP_RECORDER
#ifndef WPP_RECORDER_CHECK_INIT
#define WPP_RECORDER_CHECK_INIT (WPP_RECORDER_INITIALIZED != (WPP_CB_TYPE*)&WPP_RECORDER_INITIALIZED) &&
#endif
// Global varaible used to track if WPP_RECORDER was initialized.
// It will be initialized on calling WPP_INIT_TRACING macro.
extern __declspec(selectany) WPP_CB_TYPE *WPP_RECORDER_INITIALIZED = (WPP_CB_TYPE*)&WPP_RECORDER_INITIALIZED;
#endif

#define WPP_CONTROL(CTL) (WPP_CB[WPP_CTRL_NO(CTL)].Control)

// Define the default WPP_LEVEL_LOGGER/WPP_LEVEL_ENABLED macros for the
// predefined DoTraceMessage(LEVEL) function.
#ifdef WPP_USE_TRACE_LEVELS

#ifndef WPP_LEVEL_LOGGER
#define WPP_LEVEL_LOGGER(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Logger),
#endif
#ifndef WPP_LEVEL_ENABLED
#define WPP_LEVEL_ENABLED(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Level >= lvl)
#endif

#else // WPP_USE_TRACE_LEVELS

// For historical reasons, the use of LEVEL means flags by default.
// This was a bad choice but very difficult to undo.
#ifndef WPP_LEVEL_LOGGER
#  define WPP_LEVEL_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger),
#endif
#ifndef WPP_LEVEL_ENABLED
#  define WPP_LEVEL_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL))
#endif

#endif // WPP_USE_TRACE_LEVELS

// Define default WPP_FLAG_LOGGER/WPP_FLAG_ENABLED macros for convenience in
// defining a function that takes a FLAG parameter e.g. DoTrace(FLAG).
#ifndef WPP_FLAG_LOGGER
#  define WPP_FLAG_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger),
#endif
#ifndef WPP_FLAG_ENABLED
#  define WPP_FLAG_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL))
#endif

#ifndef WPP_ENABLED
#  define WPP_ENABLED() 1
#endif
#ifndef WPP_LOGGER
#  define WPP_LOGGER() (WPP_CB[0].Control.Logger),
#endif

#endif // WPP_NO_CONTROL_GUIDS

#ifndef WPP_GET_LOGGER
#  define WPP_GET_LOGGER Logger
#endif

#ifndef WPP_LOGGER_ARG
#  define WPP_LOGGER_ARG TRACEHANDLE Logger,
#endif

#ifdef __cplusplus
} // extern "C"
#endif

#endif // WPP_ALREADY_INCLUDED

// template tracemacro.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#ifdef __cplusplus
extern "C" {
#endif

#ifdef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids
#undef WPP_INVOKE_WPP_DEBUG

#else // WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING
#endif
#endif // NO_CHECK_FOR_NULL_STRING

#define WPP_FLATTEN(...) __VA_ARGS__
#define WPP_GLUE5(a, b, c, d, e)  a ## b ## c ## d ## e
#define WPP_XGLUE5(a, b, c, d, e)  WPP_GLUE5(a, b, c, d, e)
#define WPP_(Id) WPP_XGLUE5(WPP_, Id, _, WPP_THIS_FILE, __LINE__)

#ifndef WPP_INLINE
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#ifndef WPP_FORCEINLINE
#define WPP_FORCEINLINE __forceinline
#endif

#endif // WPP_ALREADY_INCLUDED

#ifdef WPP_NO_ANNOTATIONS

#define WPP_ANNOTATE(x)

#else // WPP_NO_ANNOTATIONS

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp48
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp49
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp59
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp68
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp109
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp130
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp131
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp169
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp170
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp171
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp177
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp198
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp204
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp221
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp223
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp232
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp234
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp246
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp250
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp338
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp340
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp349
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp351
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp363
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp367
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp401
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp403
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp412
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp452
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp461
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp463
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp472
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp474
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp479
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp482
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp679
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp751
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp753
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp762
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp764
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp769
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp772
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp807
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp895
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp897
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp906
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp908
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp940
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp942
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp943
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp945
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp946
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp947
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp950
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp968
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp970
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp979
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp981
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1022
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1024
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1033
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1035
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1047
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1051
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1256
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1258
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1267
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1269
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1281
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1285
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1340
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1342
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1343
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1347
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1358
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1530
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1532
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1541
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1543
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1555
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1559
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1573
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1575
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1576
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1580
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1581
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1582
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1583
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1584
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1585
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1588
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1602
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1604
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1605
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1614
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1617
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1631
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1633
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1634
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1643
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1646
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1659
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1661
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1662
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1664
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1677
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1679
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1680
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1682
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1696
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1698
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1699
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1703
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1707
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1720
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1722
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1723
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1725
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1738
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1740
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1741
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1743
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1756
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1758
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1759
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1766
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1769
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1782
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1784
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1785
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1787
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1800
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1802
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1803
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1805
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1822
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1828
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1830
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1839
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1855
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1865
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1880
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1897
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1899
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1908
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1920
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1929
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1935
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1951
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1966
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1984
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1995
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2000
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2001
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2010
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2027
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2029
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2037
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2044
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2048
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2065
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2079
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2090
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2093
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2100
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2109
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2116
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2131
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2133
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2136
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2150
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2161
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2164
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2177
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2186
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2201
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2215
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2221
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2225
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2237
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2240
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2245
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2247
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2250
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2267
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2283
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2301
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2310
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2313
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2330
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2335
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2336
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2338
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2353
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2364
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2365
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2424
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2434
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2435
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2440
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2455
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2457
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2477
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2482
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2497
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2500
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2506
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2508
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2528
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2529
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2543
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2553
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2560
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2579
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2586
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2645
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2651
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2654
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2677
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2711
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2717
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2721
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2732
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2741
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2752
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2759
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2769
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2791
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2811
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2813
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2822
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2824
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2836
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2840
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2887
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2892
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2900
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2905
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2921
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2923
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2924
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2931
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2957
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2965
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2967
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2973
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2998
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3006
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3008
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3017
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3030
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3032
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3033
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3037
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3044
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3051
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3066
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3068
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3069
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3073
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3084
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3194
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3203
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3215
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3249
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3305
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3321
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3323
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3344
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3360
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3362
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3369
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3375
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3382
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3386
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3402
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3404
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3425
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3429
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3446
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3448
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3472
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3514
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3515
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3519
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3520
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3531
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3545
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3547
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3556
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3558
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3569
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3571
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3575
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3745
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3761
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3762
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3778
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3801
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3817
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3818
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3872
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3946
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3961
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3967
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3982
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3985
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4022
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4040
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4047
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4065
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4073
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4093
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4114
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4130
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4134
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4146
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4148
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4157
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4166
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4178
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4180
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4181
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4182
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4239
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4242
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4256
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4268
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4269
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4270
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4271
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4272
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4282
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4296
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4298
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4299
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4310
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4324
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4326
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4327
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4334
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4348
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4419
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4433
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4439
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4454
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4460
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4464
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4479
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4486
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4490
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4512
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4513
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4545
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4546
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4565
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4566
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4599
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4635
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4639
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4640
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4641
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4643
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4644
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4645
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4646
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4647
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4648
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4649
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4650
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4655
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4684
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4735
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4741
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4759
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4785
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4787
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4798
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4817
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4824
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4838
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4840
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4842
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4851
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4871
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4911
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4912
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4914
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4916
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4917
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4918
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4921
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4935
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4940
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4943
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4956
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5063
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5081
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5082
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5088
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5092
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5101
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5127
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5129
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5144
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5161
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5186
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5194
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5209
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5232
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5243
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5296
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5406
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5412
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5715
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5719
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5727
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5730
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5735
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5747
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5780
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5800
#endif
#ifdef WPP_EMIT_FUNC_NAME
#define WPP_FUNC_NAME L" FUNC=" _WPPW(__FUNCTION__)
#else // WPP_EMIT_FUNC_NAME
#define WPP_FUNC_NAME
#endif // WPP_EMIT_FUNC_NAME

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp48_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 10 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp48_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 10 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp48
# define WPP_ANNOTATE_USBAudioConfiguration_cpp48 WPP_ANNOTATE_USBAudioConfiguration_cpp48_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp48
# define WPP_ANNOTATE_USBAudioConfiguration_cpp48 WPP_ANNOTATE_USBAudioConfiguration_cpp48_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp48", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp48

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp49_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 11 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp49_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 11 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp49
# define WPP_ANNOTATE_USBAudioConfiguration_cpp49 WPP_ANNOTATE_USBAudioConfiguration_cpp49_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp49
# define WPP_ANNOTATE_USBAudioConfiguration_cpp49 WPP_ANNOTATE_USBAudioConfiguration_cpp49_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp49", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp49

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp59_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 12 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp59_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 12 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp59
# define WPP_ANNOTATE_USBAudioConfiguration_cpp59 WPP_ANNOTATE_USBAudioConfiguration_cpp59_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp59
# define WPP_ANNOTATE_USBAudioConfiguration_cpp59 WPP_ANNOTATE_USBAudioConfiguration_cpp59_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp59", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp59

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp68_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 13 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp68_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 13 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp68
# define WPP_ANNOTATE_USBAudioConfiguration_cpp68 WPP_ANNOTATE_USBAudioConfiguration_cpp68_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp68
# define WPP_ANNOTATE_USBAudioConfiguration_cpp68 WPP_ANNOTATE_USBAudioConfiguration_cpp68_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp68", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp68

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp109_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 14 \"%0delete arrayOld\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp109_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 14 \"%0delete arrayOld\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp109
# define WPP_ANNOTATE_USBAudioConfiguration_cpp109 WPP_ANNOTATE_USBAudioConfiguration_cpp109_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp109
# define WPP_ANNOTATE_USBAudioConfiguration_cpp109 WPP_ANNOTATE_USBAudioConfiguration_cpp109_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp109", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp109

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp130_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 15 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=index >= m_numOfArray RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp130_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 15 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=index >= m_numOfArray RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp130
# define WPP_ANNOTATE_USBAudioConfiguration_cpp130 WPP_ANNOTATE_USBAudioConfiguration_cpp130_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp130
# define WPP_ANNOTATE_USBAudioConfiguration_cpp130 WPP_ANNOTATE_USBAudioConfiguration_cpp130_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp130", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp130

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp131_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 16 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_array == nullptr RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp131_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 16 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_array == nullptr RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp131
# define WPP_ANNOTATE_USBAudioConfiguration_cpp131 WPP_ANNOTATE_USBAudioConfiguration_cpp131_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp131
# define WPP_ANNOTATE_USBAudioConfiguration_cpp131 WPP_ANNOTATE_USBAudioConfiguration_cpp131_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp131", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp131

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp169_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 17 \"%0 - m_sizeOfArray = %10!d!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp169_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 17 \"%0 - m_sizeOfArray = %10!d!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp169
# define WPP_ANNOTATE_USBAudioConfiguration_cpp169 WPP_ANNOTATE_USBAudioConfiguration_cpp169_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp169
# define WPP_ANNOTATE_USBAudioConfiguration_cpp169 WPP_ANNOTATE_USBAudioConfiguration_cpp169_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp169", \
    L"{", \
    L"m_sizeOfArray, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp169

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp170_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 18 \"%0 - m_numOfArray  = %10!d!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp170_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 18 \"%0 - m_numOfArray  = %10!d!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp170
# define WPP_ANNOTATE_USBAudioConfiguration_cpp170 WPP_ANNOTATE_USBAudioConfiguration_cpp170_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp170
# define WPP_ANNOTATE_USBAudioConfiguration_cpp170 WPP_ANNOTATE_USBAudioConfiguration_cpp170_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp170", \
    L"{", \
    L"m_numOfArray, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp170

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp171_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 19 \"%0 - m_array       = %10!p!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp171_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 19 \"%0 - m_array       = %10!p!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp171
# define WPP_ANNOTATE_USBAudioConfiguration_cpp171 WPP_ANNOTATE_USBAudioConfiguration_cpp171_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemPtr -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp171
# define WPP_ANNOTATE_USBAudioConfiguration_cpp171 WPP_ANNOTATE_USBAudioConfiguration_cpp171_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp171", \
    L"{", \
    L"m_array, ItemPtr -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp171

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp177_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 20 \"%0 - m_array[%10!d!] = %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp177_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 20 \"%0 - m_array[%10!d!] = %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp177
# define WPP_ANNOTATE_USBAudioConfiguration_cpp177 WPP_ANNOTATE_USBAudioConfiguration_cpp177_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp177
# define WPP_ANNOTATE_USBAudioConfiguration_cpp177 WPP_ANNOTATE_USBAudioConfiguration_cpp177_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp177", \
    L"{", \
    L"index, ItemLong -- 10" , \
    L"(ULONG)m_array[index], ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp177

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp198_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 21 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=WdfMemoryCreate(&attributes, NonPagedPoolNx, DRIVER_TAG, sizeof(T) * sizeOfArray, &m_memory, (PVOID *)&m_array)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp198_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 21 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=WdfMemoryCreate(&attributes, NonPagedPoolNx, DRIVER_TAG, sizeof(T) * sizeOfArray, &m_memory, (PVOID *)&m_array)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp198
# define WPP_ANNOTATE_USBAudioConfiguration_cpp198 WPP_ANNOTATE_USBAudioConfiguration_cpp198_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp198
# define WPP_ANNOTATE_USBAudioConfiguration_cpp198 WPP_ANNOTATE_USBAudioConfiguration_cpp198_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp198", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp198

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp204_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 22 \"%0Allocate(%10!d!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp204_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 22 \"%0Allocate(%10!d!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp204
# define WPP_ANNOTATE_USBAudioConfiguration_cpp204 WPP_ANNOTATE_USBAudioConfiguration_cpp204_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp204
# define WPP_ANNOTATE_USBAudioConfiguration_cpp204 WPP_ANNOTATE_USBAudioConfiguration_cpp204_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp204", \
    L"{", \
    L"sizeOfArray, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp204

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp221_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 23 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp221_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 23 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp221
# define WPP_ANNOTATE_USBAudioConfiguration_cpp221 WPP_ANNOTATE_USBAudioConfiguration_cpp221_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp221
# define WPP_ANNOTATE_USBAudioConfiguration_cpp221 WPP_ANNOTATE_USBAudioConfiguration_cpp221_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp221", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp221

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp223_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 24 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp223_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 24 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp223
# define WPP_ANNOTATE_USBAudioConfiguration_cpp223 WPP_ANNOTATE_USBAudioConfiguration_cpp223_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp223
# define WPP_ANNOTATE_USBAudioConfiguration_cpp223 WPP_ANNOTATE_USBAudioConfiguration_cpp223_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp223", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp223

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp232_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 25 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp232_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 25 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp232
# define WPP_ANNOTATE_USBAudioConfiguration_cpp232 WPP_ANNOTATE_USBAudioConfiguration_cpp232_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp232
# define WPP_ANNOTATE_USBAudioConfiguration_cpp232 WPP_ANNOTATE_USBAudioConfiguration_cpp232_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp232", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp232

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp234_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 26 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp234_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 26 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp234
# define WPP_ANNOTATE_USBAudioConfiguration_cpp234 WPP_ANNOTATE_USBAudioConfiguration_cpp234_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp234
# define WPP_ANNOTATE_USBAudioConfiguration_cpp234 WPP_ANNOTATE_USBAudioConfiguration_cpp234_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp234", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp234

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp246_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 27 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp246_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 27 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp246
# define WPP_ANNOTATE_USBAudioConfiguration_cpp246 WPP_ANNOTATE_USBAudioConfiguration_cpp246_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp246
# define WPP_ANNOTATE_USBAudioConfiguration_cpp246 WPP_ANNOTATE_USBAudioConfiguration_cpp246_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp246", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp246

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp250_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 28 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp250_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 28 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp250
# define WPP_ANNOTATE_USBAudioConfiguration_cpp250 WPP_ANNOTATE_USBAudioConfiguration_cpp250_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp250
# define WPP_ANNOTATE_USBAudioConfiguration_cpp250 WPP_ANNOTATE_USBAudioConfiguration_cpp250_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp250", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp250

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp338_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 29 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp338_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 29 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp338
# define WPP_ANNOTATE_USBAudioConfiguration_cpp338 WPP_ANNOTATE_USBAudioConfiguration_cpp338_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp338
# define WPP_ANNOTATE_USBAudioConfiguration_cpp338 WPP_ANNOTATE_USBAudioConfiguration_cpp338_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp338", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp338

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp340_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 30 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp340_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 30 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp340
# define WPP_ANNOTATE_USBAudioConfiguration_cpp340 WPP_ANNOTATE_USBAudioConfiguration_cpp340_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp340
# define WPP_ANNOTATE_USBAudioConfiguration_cpp340 WPP_ANNOTATE_USBAudioConfiguration_cpp340_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp340", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp340

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp349_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 31 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp349_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 31 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp349
# define WPP_ANNOTATE_USBAudioConfiguration_cpp349 WPP_ANNOTATE_USBAudioConfiguration_cpp349_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp349
# define WPP_ANNOTATE_USBAudioConfiguration_cpp349 WPP_ANNOTATE_USBAudioConfiguration_cpp349_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp349", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp349

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp351_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 32 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp351_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 32 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp351
# define WPP_ANNOTATE_USBAudioConfiguration_cpp351 WPP_ANNOTATE_USBAudioConfiguration_cpp351_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp351
# define WPP_ANNOTATE_USBAudioConfiguration_cpp351 WPP_ANNOTATE_USBAudioConfiguration_cpp351_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp351", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp351

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp363_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 33 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp363_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 33 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp363
# define WPP_ANNOTATE_USBAudioConfiguration_cpp363 WPP_ANNOTATE_USBAudioConfiguration_cpp363_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp363
# define WPP_ANNOTATE_USBAudioConfiguration_cpp363 WPP_ANNOTATE_USBAudioConfiguration_cpp363_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp363", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp363

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp367_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 34 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp367_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 34 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp367
# define WPP_ANNOTATE_USBAudioConfiguration_cpp367 WPP_ANNOTATE_USBAudioConfiguration_cpp367_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp367
# define WPP_ANNOTATE_USBAudioConfiguration_cpp367 WPP_ANNOTATE_USBAudioConfiguration_cpp367_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp367", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp367

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp401_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 35 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp401_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 35 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp401
# define WPP_ANNOTATE_USBAudioConfiguration_cpp401 WPP_ANNOTATE_USBAudioConfiguration_cpp401_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp401
# define WPP_ANNOTATE_USBAudioConfiguration_cpp401 WPP_ANNOTATE_USBAudioConfiguration_cpp401_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp401", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp401

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp403_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 36 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp403_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 36 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp403
# define WPP_ANNOTATE_USBAudioConfiguration_cpp403 WPP_ANNOTATE_USBAudioConfiguration_cpp403_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp403
# define WPP_ANNOTATE_USBAudioConfiguration_cpp403 WPP_ANNOTATE_USBAudioConfiguration_cpp403_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp403", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp403

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp412_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 37 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp412_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 37 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp412
# define WPP_ANNOTATE_USBAudioConfiguration_cpp412 WPP_ANNOTATE_USBAudioConfiguration_cpp412_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp412
# define WPP_ANNOTATE_USBAudioConfiguration_cpp412 WPP_ANNOTATE_USBAudioConfiguration_cpp412_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp412", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp412

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp452_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 38 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp452_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 38 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp452
# define WPP_ANNOTATE_USBAudioConfiguration_cpp452 WPP_ANNOTATE_USBAudioConfiguration_cpp452_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp452
# define WPP_ANNOTATE_USBAudioConfiguration_cpp452 WPP_ANNOTATE_USBAudioConfiguration_cpp452_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp452", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp452

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp461_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 39 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp461_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 39 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp461
# define WPP_ANNOTATE_USBAudioConfiguration_cpp461 WPP_ANNOTATE_USBAudioConfiguration_cpp461_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp461
# define WPP_ANNOTATE_USBAudioConfiguration_cpp461 WPP_ANNOTATE_USBAudioConfiguration_cpp461_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp461", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp461

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp463_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 40 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=GetNumEndpoints() == 0 RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp463_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 40 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=GetNumEndpoints() == 0 RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp463
# define WPP_ANNOTATE_USBAudioConfiguration_cpp463 WPP_ANNOTATE_USBAudioConfiguration_cpp463_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp463
# define WPP_ANNOTATE_USBAudioConfiguration_cpp463 WPP_ANNOTATE_USBAudioConfiguration_cpp463_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp463", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp463

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp472_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 41 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_numOfEndpoint != 0 RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp472_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 41 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_numOfEndpoint != 0 RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp472
# define WPP_ANNOTATE_USBAudioConfiguration_cpp472 WPP_ANNOTATE_USBAudioConfiguration_cpp472_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp472
# define WPP_ANNOTATE_USBAudioConfiguration_cpp472 WPP_ANNOTATE_USBAudioConfiguration_cpp472_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp472", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp472

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp474_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 42 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=WdfMemoryCreate(&attributes, NonPagedPoolNx, DRIVER_TAG, sizeof(USBAudioEndpoint *) * GetNumEndpoints(), &m_usbAudioEndpointsMemory, (PVOID *)&m_usbAudioEndpoints)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp474_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 42 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=WdfMemoryCreate(&attributes, NonPagedPoolNx, DRIVER_TAG, sizeof(USBAudioEndpoint *) * GetNumEndpoints(), &m_usbAudioEndpointsMemory, (PVOID *)&m_usbAudioEndpoints)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp474
# define WPP_ANNOTATE_USBAudioConfiguration_cpp474 WPP_ANNOTATE_USBAudioConfiguration_cpp474_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp474
# define WPP_ANNOTATE_USBAudioConfiguration_cpp474 WPP_ANNOTATE_USBAudioConfiguration_cpp474_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp474", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp474

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp479_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 43 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbAudioEndpoints[m_numOfEndpoint] == nullptr RETSTATUS=STATUS_INSUFFICIENT_RESOURCES" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp479_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 43 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbAudioEndpoints[m_numOfEndpoint] == nullptr RETSTATUS=STATUS_INSUFFICIENT_RESOURCES" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp479
# define WPP_ANNOTATE_USBAudioConfiguration_cpp479 WPP_ANNOTATE_USBAudioConfiguration_cpp479_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp479
# define WPP_ANNOTATE_USBAudioConfiguration_cpp479 WPP_ANNOTATE_USBAudioConfiguration_cpp479_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp479", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp479

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp482_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 44 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp482_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 44 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp482
# define WPP_ANNOTATE_USBAudioConfiguration_cpp482 WPP_ANNOTATE_USBAudioConfiguration_cpp482_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp482
# define WPP_ANNOTATE_USBAudioConfiguration_cpp482 WPP_ANNOTATE_USBAudioConfiguration_cpp482_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp482", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp482

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp679_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 45 \"%0MaxPacketSize updated by endpoint companion descriptor, direction %10!s!, size %11!u!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp679_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 45 \"%0MaxPacketSize updated by endpoint companion descriptor, direction %10!s!, size %11!u!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp679
# define WPP_ANNOTATE_USBAudioConfiguration_cpp679 WPP_ANNOTATE_USBAudioConfiguration_cpp679_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp679
# define WPP_ANNOTATE_USBAudioConfiguration_cpp679 WPP_ANNOTATE_USBAudioConfiguration_cpp679_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp679", \
    L"{", \
    L"GetDirectionString(direction), ItemString -- 10" , \
    L"currentMaxPacketSize, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp679

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp751_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 46 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp751_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 46 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp751
# define WPP_ANNOTATE_USBAudioConfiguration_cpp751 WPP_ANNOTATE_USBAudioConfiguration_cpp751_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp751
# define WPP_ANNOTATE_USBAudioConfiguration_cpp751 WPP_ANNOTATE_USBAudioConfiguration_cpp751_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp751", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp751

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp753_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 47 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=GetNumEndpoints() == 0 RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp753_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 47 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=GetNumEndpoints() == 0 RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp753
# define WPP_ANNOTATE_USBAudioConfiguration_cpp753 WPP_ANNOTATE_USBAudioConfiguration_cpp753_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp753
# define WPP_ANNOTATE_USBAudioConfiguration_cpp753 WPP_ANNOTATE_USBAudioConfiguration_cpp753_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp753", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp753

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp762_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 48 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_numOfEndpointCompanion != 0 RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp762_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 48 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_numOfEndpointCompanion != 0 RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp762
# define WPP_ANNOTATE_USBAudioConfiguration_cpp762 WPP_ANNOTATE_USBAudioConfiguration_cpp762_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp762
# define WPP_ANNOTATE_USBAudioConfiguration_cpp762 WPP_ANNOTATE_USBAudioConfiguration_cpp762_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp762", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp762

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp764_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 49 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=WdfMemoryCreate(&attributes, NonPagedPoolNx, DRIVER_TAG, sizeof(USBAudioEndpointCompanion *) * GetNumEndpoints(), &m_usbAudioEndpointCompanionsMemory, (PVOID *)&m_usbAudioEndpointCompanions)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp764_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 49 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=WdfMemoryCreate(&attributes, NonPagedPoolNx, DRIVER_TAG, sizeof(USBAudioEndpointCompanion *) * GetNumEndpoints(), &m_usbAudioEndpointCompanionsMemory, (PVOID *)&m_usbAudioEndpointCompanions)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp764
# define WPP_ANNOTATE_USBAudioConfiguration_cpp764 WPP_ANNOTATE_USBAudioConfiguration_cpp764_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp764
# define WPP_ANNOTATE_USBAudioConfiguration_cpp764 WPP_ANNOTATE_USBAudioConfiguration_cpp764_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp764", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp764

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp769_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 50 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbAudioEndpointCompanions[m_numOfEndpointCompanion] == nullptr RETSTATUS=STATUS_INSUFFICIENT_RESOURCES" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp769_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 50 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbAudioEndpointCompanions[m_numOfEndpointCompanion] == nullptr RETSTATUS=STATUS_INSUFFICIENT_RESOURCES" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp769
# define WPP_ANNOTATE_USBAudioConfiguration_cpp769 WPP_ANNOTATE_USBAudioConfiguration_cpp769_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp769
# define WPP_ANNOTATE_USBAudioConfiguration_cpp769 WPP_ANNOTATE_USBAudioConfiguration_cpp769_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp769", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp769

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp772_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 51 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp772_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 51 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp772
# define WPP_ANNOTATE_USBAudioConfiguration_cpp772 WPP_ANNOTATE_USBAudioConfiguration_cpp772_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp772
# define WPP_ANNOTATE_USBAudioConfiguration_cpp772 WPP_ANNOTATE_USBAudioConfiguration_cpp772_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp772", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp772

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp807_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 52 \"%0 - index %10!u!, endpointAttribute 0x%11!x!, 0x%12!x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp807_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 52 \"%0 - index %10!u!, endpointAttribute 0x%11!x!, 0x%12!x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp807
# define WPP_ANNOTATE_USBAudioConfiguration_cpp807 WPP_ANNOTATE_USBAudioConfiguration_cpp807_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp807
# define WPP_ANNOTATE_USBAudioConfiguration_cpp807 WPP_ANNOTATE_USBAudioConfiguration_cpp807_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp807", \
    L"{", \
    L"index, ItemLong -- 10" , \
    L"endpointAttribute, ItemLong -- 11" , \
    L"endpointType, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp807

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp895_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 53 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp895_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 53 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp895
# define WPP_ANNOTATE_USBAudioConfiguration_cpp895 WPP_ANNOTATE_USBAudioConfiguration_cpp895_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp895
# define WPP_ANNOTATE_USBAudioConfiguration_cpp895 WPP_ANNOTATE_USBAudioConfiguration_cpp895_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp895", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp895

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp897_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 54 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp897_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 54 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp897
# define WPP_ANNOTATE_USBAudioConfiguration_cpp897 WPP_ANNOTATE_USBAudioConfiguration_cpp897_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp897
# define WPP_ANNOTATE_USBAudioConfiguration_cpp897 WPP_ANNOTATE_USBAudioConfiguration_cpp897_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp897", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp897

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp906_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 55 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp906_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 55 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp906
# define WPP_ANNOTATE_USBAudioConfiguration_cpp906 WPP_ANNOTATE_USBAudioConfiguration_cpp906_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp906
# define WPP_ANNOTATE_USBAudioConfiguration_cpp906 WPP_ANNOTATE_USBAudioConfiguration_cpp906_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp906", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp906

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp908_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 56 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp908_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 56 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp908
# define WPP_ANNOTATE_USBAudioConfiguration_cpp908 WPP_ANNOTATE_USBAudioConfiguration_cpp908_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp908
# define WPP_ANNOTATE_USBAudioConfiguration_cpp908 WPP_ANNOTATE_USBAudioConfiguration_cpp908_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp908", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp908

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp940_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 57 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp940_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 57 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp940
# define WPP_ANNOTATE_USBAudioConfiguration_cpp940 WPP_ANNOTATE_USBAudioConfiguration_cpp940_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp940
# define WPP_ANNOTATE_USBAudioConfiguration_cpp940 WPP_ANNOTATE_USBAudioConfiguration_cpp940_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp940", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp940

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp942_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 58 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp942_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 58 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp942
# define WPP_ANNOTATE_USBAudioConfiguration_cpp942 WPP_ANNOTATE_USBAudioConfiguration_cpp942_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp942
# define WPP_ANNOTATE_USBAudioConfiguration_cpp942 WPP_ANNOTATE_USBAudioConfiguration_cpp942_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp942", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp942

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp943_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 59 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp943_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 59 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp943
# define WPP_ANNOTATE_USBAudioConfiguration_cpp943 WPP_ANNOTATE_USBAudioConfiguration_cpp943_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp943
# define WPP_ANNOTATE_USBAudioConfiguration_cpp943 WPP_ANNOTATE_USBAudioConfiguration_cpp943_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp943", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp943

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp945_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 60 \"%0 - bLength            = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp945_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 60 \"%0 - bLength            = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp945
# define WPP_ANNOTATE_USBAudioConfiguration_cpp945 WPP_ANNOTATE_USBAudioConfiguration_cpp945_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp945
# define WPP_ANNOTATE_USBAudioConfiguration_cpp945 WPP_ANNOTATE_USBAudioConfiguration_cpp945_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp945", \
    L"{", \
    L"descriptor->bLength, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp945

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp946_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 61 \"%0 - bDescriptorType    = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp946_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 61 \"%0 - bDescriptorType    = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp946
# define WPP_ANNOTATE_USBAudioConfiguration_cpp946 WPP_ANNOTATE_USBAudioConfiguration_cpp946_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp946
# define WPP_ANNOTATE_USBAudioConfiguration_cpp946 WPP_ANNOTATE_USBAudioConfiguration_cpp946_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp946", \
    L"{", \
    L"descriptor->bDescriptorType, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp946

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp947_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 62 \"%0 - bDescriptorSubtype = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp947_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 62 \"%0 - bDescriptorSubtype = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp947
# define WPP_ANNOTATE_USBAudioConfiguration_cpp947 WPP_ANNOTATE_USBAudioConfiguration_cpp947_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp947
# define WPP_ANNOTATE_USBAudioConfiguration_cpp947 WPP_ANNOTATE_USBAudioConfiguration_cpp947_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp947", \
    L"{", \
    L"descriptor->bDescriptorSubtype, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp947

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp950_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 63 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp950_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 63 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp950
# define WPP_ANNOTATE_USBAudioConfiguration_cpp950 WPP_ANNOTATE_USBAudioConfiguration_cpp950_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp950
# define WPP_ANNOTATE_USBAudioConfiguration_cpp950 WPP_ANNOTATE_USBAudioConfiguration_cpp950_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp950", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp950

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp968_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 64 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp968_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 64 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp968
# define WPP_ANNOTATE_USBAudioConfiguration_cpp968 WPP_ANNOTATE_USBAudioConfiguration_cpp968_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp968
# define WPP_ANNOTATE_USBAudioConfiguration_cpp968 WPP_ANNOTATE_USBAudioConfiguration_cpp968_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp968", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp968

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp970_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 65 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp970_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 65 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp970
# define WPP_ANNOTATE_USBAudioConfiguration_cpp970 WPP_ANNOTATE_USBAudioConfiguration_cpp970_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp970
# define WPP_ANNOTATE_USBAudioConfiguration_cpp970 WPP_ANNOTATE_USBAudioConfiguration_cpp970_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp970", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp970

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp979_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 66 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp979_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 66 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp979
# define WPP_ANNOTATE_USBAudioConfiguration_cpp979 WPP_ANNOTATE_USBAudioConfiguration_cpp979_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp979
# define WPP_ANNOTATE_USBAudioConfiguration_cpp979 WPP_ANNOTATE_USBAudioConfiguration_cpp979_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp979", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp979

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp981_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 67 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp981_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 67 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp981
# define WPP_ANNOTATE_USBAudioConfiguration_cpp981 WPP_ANNOTATE_USBAudioConfiguration_cpp981_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp981
# define WPP_ANNOTATE_USBAudioConfiguration_cpp981 WPP_ANNOTATE_USBAudioConfiguration_cpp981_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp981", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp981

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1022_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 68 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1022_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 68 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1022
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1022 WPP_ANNOTATE_USBAudioConfiguration_cpp1022_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1022
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1022 WPP_ANNOTATE_USBAudioConfiguration_cpp1022_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1022", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1022

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1024_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 69 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1024_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 69 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1024
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1024 WPP_ANNOTATE_USBAudioConfiguration_cpp1024_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1024
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1024 WPP_ANNOTATE_USBAudioConfiguration_cpp1024_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1024", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1024

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1033_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 70 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1033_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 70 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1033
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1033 WPP_ANNOTATE_USBAudioConfiguration_cpp1033_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1033
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1033 WPP_ANNOTATE_USBAudioConfiguration_cpp1033_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1033", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1033

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1035_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 71 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1035_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 71 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1035
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1035 WPP_ANNOTATE_USBAudioConfiguration_cpp1035_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1035
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1035 WPP_ANNOTATE_USBAudioConfiguration_cpp1035_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1035", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1035

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1047_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 72 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1047_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 72 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1047
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1047 WPP_ANNOTATE_USBAudioConfiguration_cpp1047_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1047
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1047 WPP_ANNOTATE_USBAudioConfiguration_cpp1047_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1047", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1047

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1051_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 73 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1051_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 73 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1051
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1051 WPP_ANNOTATE_USBAudioConfiguration_cpp1051_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1051
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1051 WPP_ANNOTATE_USBAudioConfiguration_cpp1051_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1051", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1051

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1256_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 74 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1256_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 74 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1256
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1256 WPP_ANNOTATE_USBAudioConfiguration_cpp1256_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1256
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1256 WPP_ANNOTATE_USBAudioConfiguration_cpp1256_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1256", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1256

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1258_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 75 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1258_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 75 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1258
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1258 WPP_ANNOTATE_USBAudioConfiguration_cpp1258_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1258
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1258 WPP_ANNOTATE_USBAudioConfiguration_cpp1258_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1258", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1258

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1267_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 76 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1267_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 76 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1267
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1267 WPP_ANNOTATE_USBAudioConfiguration_cpp1267_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1267
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1267 WPP_ANNOTATE_USBAudioConfiguration_cpp1267_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1267", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1267

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1269_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 77 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1269_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 77 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1269
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1269 WPP_ANNOTATE_USBAudioConfiguration_cpp1269_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1269
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1269 WPP_ANNOTATE_USBAudioConfiguration_cpp1269_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1269", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1269

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1281_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 78 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1281_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 78 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1281
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1281 WPP_ANNOTATE_USBAudioConfiguration_cpp1281_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1281
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1281 WPP_ANNOTATE_USBAudioConfiguration_cpp1281_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1281", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1281

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1285_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 79 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1285_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 79 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1285
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1285 WPP_ANNOTATE_USBAudioConfiguration_cpp1285_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1285
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1285 WPP_ANNOTATE_USBAudioConfiguration_cpp1285_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1285", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1285

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1340_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 80 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1340_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 80 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1340
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1340 WPP_ANNOTATE_USBAudioConfiguration_cpp1340_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1340
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1340 WPP_ANNOTATE_USBAudioConfiguration_cpp1340_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1340", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1340

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1342_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 81 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1342_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 81 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1342
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1342 WPP_ANNOTATE_USBAudioConfiguration_cpp1342_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1342
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1342 WPP_ANNOTATE_USBAudioConfiguration_cpp1342_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1342", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1342

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1343_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 82 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0100::CS_ENDPOINT) || (descriptor->bDescriptorSubtype != NS_USBAudio0100::EP_GENERAL) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1343_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 82 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0100::CS_ENDPOINT) || (descriptor->bDescriptorSubtype != NS_USBAudio0100::EP_GENERAL) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1343
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1343 WPP_ANNOTATE_USBAudioConfiguration_cpp1343_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1343
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1343 WPP_ANNOTATE_USBAudioConfiguration_cpp1343_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1343", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1343

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1347_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 83 \"%0CS isochronous audio data endpoint descriptor is already set.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1347_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 83 \"%0CS isochronous audio data endpoint descriptor is already set.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1347
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1347 WPP_ANNOTATE_USBAudioConfiguration_cpp1347_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1347
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1347 WPP_ANNOTATE_USBAudioConfiguration_cpp1347_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1347", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1347

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1358_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 84 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1358_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 84 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1358
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1358 WPP_ANNOTATE_USBAudioConfiguration_cpp1358_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1358
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1358 WPP_ANNOTATE_USBAudioConfiguration_cpp1358_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1358", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1358

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1530_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 85 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1530_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 85 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1530
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1530 WPP_ANNOTATE_USBAudioConfiguration_cpp1530_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1530
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1530 WPP_ANNOTATE_USBAudioConfiguration_cpp1530_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1530", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1530

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1532_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 86 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1532_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 86 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1532
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1532 WPP_ANNOTATE_USBAudioConfiguration_cpp1532_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1532
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1532 WPP_ANNOTATE_USBAudioConfiguration_cpp1532_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1532", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1532

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1541_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 87 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1541_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 87 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1541
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1541 WPP_ANNOTATE_USBAudioConfiguration_cpp1541_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1541
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1541 WPP_ANNOTATE_USBAudioConfiguration_cpp1541_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1541", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1541

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1543_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 88 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1543_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 88 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1543
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1543 WPP_ANNOTATE_USBAudioConfiguration_cpp1543_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1543
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1543 WPP_ANNOTATE_USBAudioConfiguration_cpp1543_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1543", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1543

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1555_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 89 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1555_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 89 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1555
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1555 WPP_ANNOTATE_USBAudioConfiguration_cpp1555_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1555
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1555 WPP_ANNOTATE_USBAudioConfiguration_cpp1555_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1555", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1555

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1559_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 90 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1559_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 90 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1559
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1559 WPP_ANNOTATE_USBAudioConfiguration_cpp1559_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1559
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1559 WPP_ANNOTATE_USBAudioConfiguration_cpp1559_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1559", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1559

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1573_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 91 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1573_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 91 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1573
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1573 WPP_ANNOTATE_USBAudioConfiguration_cpp1573_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1573
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1573 WPP_ANNOTATE_USBAudioConfiguration_cpp1573_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1573", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1573

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1575_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 92 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1575_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 92 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1575
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1575 WPP_ANNOTATE_USBAudioConfiguration_cpp1575_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1575
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1575 WPP_ANNOTATE_USBAudioConfiguration_cpp1575_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1575", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1575

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1576_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 93 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::CLOCK_SOURCE) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1576_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 93 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::CLOCK_SOURCE) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1576
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1576 WPP_ANNOTATE_USBAudioConfiguration_cpp1576_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1576
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1576 WPP_ANNOTATE_USBAudioConfiguration_cpp1576_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1576", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1576

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1580_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 94 \"%0 - bClockID       = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1580_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 94 \"%0 - bClockID       = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1580
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1580 WPP_ANNOTATE_USBAudioConfiguration_cpp1580_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1580
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1580 WPP_ANNOTATE_USBAudioConfiguration_cpp1580_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1580", \
    L"{", \
    L"clockSourceDescriptor->bClockID, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1580

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1581_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 95 \"%0 - bmAttributes   = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1581_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 95 \"%0 - bmAttributes   = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1581
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1581 WPP_ANNOTATE_USBAudioConfiguration_cpp1581_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1581
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1581 WPP_ANNOTATE_USBAudioConfiguration_cpp1581_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1581", \
    L"{", \
    L"clockSourceDescriptor->bmAttributes, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1581

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1582_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 96 \"%0 - bmControls     = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1582_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 96 \"%0 - bmControls     = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1582
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1582 WPP_ANNOTATE_USBAudioConfiguration_cpp1582_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1582
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1582 WPP_ANNOTATE_USBAudioConfiguration_cpp1582_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1582", \
    L"{", \
    L"clockSourceDescriptor->bmControls, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1582

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1583_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 97 \"%0 - bAssocTerminal = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1583_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 97 \"%0 - bAssocTerminal = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1583
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1583 WPP_ANNOTATE_USBAudioConfiguration_cpp1583_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1583
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1583 WPP_ANNOTATE_USBAudioConfiguration_cpp1583_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1583", \
    L"{", \
    L"clockSourceDescriptor->bAssocTerminal, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1583

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1584_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 98 \"%0 - iClockSource   = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1584_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 98 \"%0 - iClockSource   = 0x%10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1584
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1584 WPP_ANNOTATE_USBAudioConfiguration_cpp1584_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1584
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1584 WPP_ANNOTATE_USBAudioConfiguration_cpp1584_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1584", \
    L"{", \
    L"clockSourceDescriptor->iClockSource, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1584

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1585_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 99 \"%0 - AC Clock Source : no. %10!u!, clock ID %11!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1585_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 99 \"%0 - AC Clock Source : no. %10!u!, clock ID %11!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1585
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1585 WPP_ANNOTATE_USBAudioConfiguration_cpp1585_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1585
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1585 WPP_ANNOTATE_USBAudioConfiguration_cpp1585_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1585", \
    L"{", \
    L"m_acClockSourceInfo.GetNumOfArray(), ItemLong -- 10" , \
    L"clockSourceDescriptor->bClockID, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1585

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1588_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 100 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1588_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 100 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1588
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1588 WPP_ANNOTATE_USBAudioConfiguration_cpp1588_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1588
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1588 WPP_ANNOTATE_USBAudioConfiguration_cpp1588_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1588", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1588

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1602_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 101 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1602_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 101 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1602
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1602 WPP_ANNOTATE_USBAudioConfiguration_cpp1602_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1602
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1602 WPP_ANNOTATE_USBAudioConfiguration_cpp1602_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1602", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1602

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1604_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 102 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1604_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 102 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1604
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1604 WPP_ANNOTATE_USBAudioConfiguration_cpp1604_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1604
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1604 WPP_ANNOTATE_USBAudioConfiguration_cpp1604_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1604", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1604

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1605_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 103 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::INPUT_TERMINAL) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1605_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 103 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::INPUT_TERMINAL) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1605
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1605 WPP_ANNOTATE_USBAudioConfiguration_cpp1605_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1605
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1605 WPP_ANNOTATE_USBAudioConfiguration_cpp1605_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1605", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1605

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1614_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 104 \"%0 - AC Input Terminal : terminal ID %10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1614_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 104 \"%0 - AC Input Terminal : terminal ID %10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1614
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1614 WPP_ANNOTATE_USBAudioConfiguration_cpp1614_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1614
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1614 WPP_ANNOTATE_USBAudioConfiguration_cpp1614_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1614", \
    L"{", \
    L"outTerminalId, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1614

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1617_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 105 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1617_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 105 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1617
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1617 WPP_ANNOTATE_USBAudioConfiguration_cpp1617_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1617
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1617 WPP_ANNOTATE_USBAudioConfiguration_cpp1617_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1617", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1617

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1631_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 106 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1631_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 106 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1631
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1631 WPP_ANNOTATE_USBAudioConfiguration_cpp1631_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1631
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1631 WPP_ANNOTATE_USBAudioConfiguration_cpp1631_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1631", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1631

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1633_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 107 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1633_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 107 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1633
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1633 WPP_ANNOTATE_USBAudioConfiguration_cpp1633_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1633
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1633 WPP_ANNOTATE_USBAudioConfiguration_cpp1633_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1633", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1633

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1634_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 108 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::OUTPUT_TERMINAL) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1634_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 108 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::OUTPUT_TERMINAL) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1634
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1634 WPP_ANNOTATE_USBAudioConfiguration_cpp1634_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1634
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1634 WPP_ANNOTATE_USBAudioConfiguration_cpp1634_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1634", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1634

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1643_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 109 \"%0 - AC Output Terminal : source ID %10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1643_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 109 \"%0 - AC Output Terminal : source ID %10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1643
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1643 WPP_ANNOTATE_USBAudioConfiguration_cpp1643_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1643
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1643 WPP_ANNOTATE_USBAudioConfiguration_cpp1643_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1643", \
    L"{", \
    L"inSourceUnitId, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1643

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1646_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 110 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1646_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 110 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1646
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1646 WPP_ANNOTATE_USBAudioConfiguration_cpp1646_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1646
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1646 WPP_ANNOTATE_USBAudioConfiguration_cpp1646_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1646", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1646

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1659_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 111 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1659_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 111 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1659
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1659 WPP_ANNOTATE_USBAudioConfiguration_cpp1659_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1659
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1659 WPP_ANNOTATE_USBAudioConfiguration_cpp1659_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1659", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1659

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1661_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 112 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1661_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 112 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1661
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1661 WPP_ANNOTATE_USBAudioConfiguration_cpp1661_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1661
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1661 WPP_ANNOTATE_USBAudioConfiguration_cpp1661_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1661", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1661

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1662_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 113 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::MIXER_UNIT) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1662_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 113 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::MIXER_UNIT) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1662
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1662 WPP_ANNOTATE_USBAudioConfiguration_cpp1662_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1662
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1662 WPP_ANNOTATE_USBAudioConfiguration_cpp1662_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1662", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1662

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1664_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 114 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1664_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 114 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1664
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1664 WPP_ANNOTATE_USBAudioConfiguration_cpp1664_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1664
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1664 WPP_ANNOTATE_USBAudioConfiguration_cpp1664_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1664", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1664

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1677_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 115 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1677_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 115 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1677
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1677 WPP_ANNOTATE_USBAudioConfiguration_cpp1677_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1677
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1677 WPP_ANNOTATE_USBAudioConfiguration_cpp1677_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1677", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1677

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1679_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 116 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1679_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 116 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1679
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1679 WPP_ANNOTATE_USBAudioConfiguration_cpp1679_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1679
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1679 WPP_ANNOTATE_USBAudioConfiguration_cpp1679_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1679", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1679

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1680_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 117 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::SELECTOR_UNIT) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1680_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 117 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::SELECTOR_UNIT) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1680
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1680 WPP_ANNOTATE_USBAudioConfiguration_cpp1680_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1680
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1680 WPP_ANNOTATE_USBAudioConfiguration_cpp1680_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1680", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1680

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1682_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 118 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1682_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 118 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1682
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1682 WPP_ANNOTATE_USBAudioConfiguration_cpp1682_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1682
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1682 WPP_ANNOTATE_USBAudioConfiguration_cpp1682_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1682", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1682

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1696_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 119 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1696_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 119 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1696
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1696 WPP_ANNOTATE_USBAudioConfiguration_cpp1696_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1696
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1696 WPP_ANNOTATE_USBAudioConfiguration_cpp1696_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1696", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1696

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1698_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 120 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1698_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 120 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1698
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1698 WPP_ANNOTATE_USBAudioConfiguration_cpp1698_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1698
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1698 WPP_ANNOTATE_USBAudioConfiguration_cpp1698_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1698", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1698

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1699_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 121 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::FEATURE_UNIT) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1699_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 121 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::FEATURE_UNIT) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1699
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1699 WPP_ANNOTATE_USBAudioConfiguration_cpp1699_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1699
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1699 WPP_ANNOTATE_USBAudioConfiguration_cpp1699_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1699", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1699

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1703_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 122 \"%0 - AC Feature Unit : unit ID %10!02x!, source ID %11!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1703_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 122 \"%0 - AC Feature Unit : unit ID %10!02x!, source ID %11!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1703
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1703 WPP_ANNOTATE_USBAudioConfiguration_cpp1703_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1703
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1703 WPP_ANNOTATE_USBAudioConfiguration_cpp1703_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1703", \
    L"{", \
    L"featureUnitDescriptor->bUnitID, ItemLong -- 10" , \
    L"featureUnitDescriptor->bSourceID, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1703

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1707_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 123 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1707_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 123 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1707
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1707 WPP_ANNOTATE_USBAudioConfiguration_cpp1707_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1707
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1707 WPP_ANNOTATE_USBAudioConfiguration_cpp1707_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1707", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1707

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1720_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 124 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1720_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 124 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1720
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1720 WPP_ANNOTATE_USBAudioConfiguration_cpp1720_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1720
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1720 WPP_ANNOTATE_USBAudioConfiguration_cpp1720_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1720", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1720

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1722_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 125 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1722_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 125 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1722
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1722 WPP_ANNOTATE_USBAudioConfiguration_cpp1722_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1722
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1722 WPP_ANNOTATE_USBAudioConfiguration_cpp1722_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1722", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1722

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1723_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 126 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::PROCESSING_UNIT) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1723_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 126 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::PROCESSING_UNIT) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1723
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1723 WPP_ANNOTATE_USBAudioConfiguration_cpp1723_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1723
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1723 WPP_ANNOTATE_USBAudioConfiguration_cpp1723_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1723", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1723

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1725_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 127 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1725_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 127 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1725
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1725 WPP_ANNOTATE_USBAudioConfiguration_cpp1725_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1725
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1725 WPP_ANNOTATE_USBAudioConfiguration_cpp1725_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1725", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1725

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1738_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 128 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1738_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 128 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1738
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1738 WPP_ANNOTATE_USBAudioConfiguration_cpp1738_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1738
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1738 WPP_ANNOTATE_USBAudioConfiguration_cpp1738_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1738", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1738

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1740_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 129 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1740_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 129 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1740
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1740 WPP_ANNOTATE_USBAudioConfiguration_cpp1740_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1740
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1740 WPP_ANNOTATE_USBAudioConfiguration_cpp1740_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1740", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1740

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1741_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 130 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::EXTENSION_UNIT) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1741_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 130 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::EXTENSION_UNIT) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1741
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1741 WPP_ANNOTATE_USBAudioConfiguration_cpp1741_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1741
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1741 WPP_ANNOTATE_USBAudioConfiguration_cpp1741_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1741", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1741

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1743_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 131 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1743_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 131 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1743
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1743 WPP_ANNOTATE_USBAudioConfiguration_cpp1743_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1743
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1743 WPP_ANNOTATE_USBAudioConfiguration_cpp1743_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1743", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1743

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1756_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 132 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1756_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 132 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1756
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1756 WPP_ANNOTATE_USBAudioConfiguration_cpp1756_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1756
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1756 WPP_ANNOTATE_USBAudioConfiguration_cpp1756_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1756", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1756

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1758_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 133 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1758_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 133 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1758
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1758 WPP_ANNOTATE_USBAudioConfiguration_cpp1758_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1758
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1758 WPP_ANNOTATE_USBAudioConfiguration_cpp1758_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1758", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1758

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1759_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 134 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::CLOCK_SELECTOR) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1759_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 134 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::CLOCK_SELECTOR) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1759
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1759 WPP_ANNOTATE_USBAudioConfiguration_cpp1759_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1759
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1759 WPP_ANNOTATE_USBAudioConfiguration_cpp1759_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1759", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1759

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1766_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 135 \"%0 - AC Clock Selector : clock ID %10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1766_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 135 \"%0 - AC Clock Selector : clock ID %10!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1766
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1766 WPP_ANNOTATE_USBAudioConfiguration_cpp1766_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1766
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1766 WPP_ANNOTATE_USBAudioConfiguration_cpp1766_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1766", \
    L"{", \
    L"m_clockSelectorDescriptor->bClockID, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1766

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1769_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 136 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1769_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 136 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1769
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1769 WPP_ANNOTATE_USBAudioConfiguration_cpp1769_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1769
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1769 WPP_ANNOTATE_USBAudioConfiguration_cpp1769_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1769", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1769

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1782_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 137 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1782_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 137 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1782
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1782 WPP_ANNOTATE_USBAudioConfiguration_cpp1782_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1782
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1782 WPP_ANNOTATE_USBAudioConfiguration_cpp1782_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1782", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1782

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1784_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 138 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1784_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 138 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1784
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1784 WPP_ANNOTATE_USBAudioConfiguration_cpp1784_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1784
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1784 WPP_ANNOTATE_USBAudioConfiguration_cpp1784_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1784", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1784

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1785_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 139 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::CLOCK_MULTIPLIER) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1785_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 139 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::CLOCK_MULTIPLIER) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1785
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1785 WPP_ANNOTATE_USBAudioConfiguration_cpp1785_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1785
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1785 WPP_ANNOTATE_USBAudioConfiguration_cpp1785_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1785", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1785

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1787_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 140 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1787_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 140 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1787
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1787 WPP_ANNOTATE_USBAudioConfiguration_cpp1787_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1787
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1787 WPP_ANNOTATE_USBAudioConfiguration_cpp1787_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1787", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1787

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1800_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 141 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1800_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 141 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1800
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1800 WPP_ANNOTATE_USBAudioConfiguration_cpp1800_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1800
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1800 WPP_ANNOTATE_USBAudioConfiguration_cpp1800_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1800", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1800

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1802_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 142 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1802_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 142 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1802
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1802 WPP_ANNOTATE_USBAudioConfiguration_cpp1802_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1802
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1802 WPP_ANNOTATE_USBAudioConfiguration_cpp1802_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1802", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1802

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1803_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 143 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::SAMPLE_RATE_CONVERTER) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1803_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 143 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::SAMPLE_RATE_CONVERTER) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1803
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1803 WPP_ANNOTATE_USBAudioConfiguration_cpp1803_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1803
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1803 WPP_ANNOTATE_USBAudioConfiguration_cpp1803_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1803", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1803

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1805_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 144 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1805_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 144 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1805
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1805 WPP_ANNOTATE_USBAudioConfiguration_cpp1805_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1805
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1805 WPP_ANNOTATE_USBAudioConfiguration_cpp1805_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1805", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1805

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1822_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 145 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1822_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 145 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1822
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1822 WPP_ANNOTATE_USBAudioConfiguration_cpp1822_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1822
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1822 WPP_ANNOTATE_USBAudioConfiguration_cpp1822_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1822", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1822

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1828_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 146 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=SetCurrentClockSourceInternal(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1828_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 146 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=SetCurrentClockSourceInternal(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1828
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1828 WPP_ANNOTATE_USBAudioConfiguration_cpp1828_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1828
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1828 WPP_ANNOTATE_USBAudioConfiguration_cpp1828_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1828", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1828

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1830_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 147 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentClockSourceID(deviceContext, inputClockSourceID, outputClockSourceID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1830_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 147 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentClockSourceID(deviceContext, inputClockSourceID, outputClockSourceID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1830
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1830 WPP_ANNOTATE_USBAudioConfiguration_cpp1830_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1830
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1830 WPP_ANNOTATE_USBAudioConfiguration_cpp1830_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1830", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1830

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1839_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 148 \"%0 - interface %10!u!, clock id %11!u!, sample frequency %12!u!, input and output have the same clock source\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1839_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 148 \"%0 - interface %10!u!, clock id %11!u!, sample frequency %12!u!, input and output have the same clock source\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1839
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1839 WPP_ANNOTATE_USBAudioConfiguration_cpp1839_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1839
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1839 WPP_ANNOTATE_USBAudioConfiguration_cpp1839_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1839", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"inputClockSourceID, ItemLong -- 11" , \
    L"sampleRate, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1839

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1855_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 149 \"%0 - interface %10!u!, clock id %11!u!, input sample frequency %12!u!,\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1855_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 149 \"%0 - interface %10!u!, clock id %11!u!, input sample frequency %12!u!,\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1855
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1855 WPP_ANNOTATE_USBAudioConfiguration_cpp1855_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1855
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1855 WPP_ANNOTATE_USBAudioConfiguration_cpp1855_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1855", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"inputClockSourceID, ItemLong -- 11" , \
    L"sampleRate, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1855

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1865_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 150 \"%0 - interface %10!u!, clock id %11!u!, output sample frequency %12!u!,\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1865_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 150 \"%0 - interface %10!u!, clock id %11!u!, output sample frequency %12!u!,\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1865
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1865 WPP_ANNOTATE_USBAudioConfiguration_cpp1865_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1865
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1865 WPP_ANNOTATE_USBAudioConfiguration_cpp1865_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1865", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"outputClockSourceID, ItemLong -- 11" , \
    L"sampleRate, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1865

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1880_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 151 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1880_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 151 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1880
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1880 WPP_ANNOTATE_USBAudioConfiguration_cpp1880_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1880
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1880 WPP_ANNOTATE_USBAudioConfiguration_cpp1880_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1880", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1880

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1897_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 152 \"%0%!FUNC! Entry, %10!u!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1897_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 152 \"%0%!FUNC! Entry, %10!u!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1897
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1897 WPP_ANNOTATE_USBAudioConfiguration_cpp1897_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1897
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1897 WPP_ANNOTATE_USBAudioConfiguration_cpp1897_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1897", \
    L"{", \
    L"desiredSampleRate, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1897

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1899_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 153 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentClockSourceID(deviceContext, inputClockSourceID, outputClockSourceID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1899_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 153 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentClockSourceID(deviceContext, inputClockSourceID, outputClockSourceID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1899
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1899 WPP_ANNOTATE_USBAudioConfiguration_cpp1899_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1899
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1899 WPP_ANNOTATE_USBAudioConfiguration_cpp1899_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1899", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1899

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1908_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 154 \"%0 - interface %10!u!, clock id %11!u!, sample frequency %12!u!, input and output have the same clock source\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1908_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 154 \"%0 - interface %10!u!, clock id %11!u!, sample frequency %12!u!, input and output have the same clock source\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1908
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1908 WPP_ANNOTATE_USBAudioConfiguration_cpp1908_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1908
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1908 WPP_ANNOTATE_USBAudioConfiguration_cpp1908_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1908", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"inputClockSourceID, ItemLong -- 11" , \
    L"desiredSampleRate, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1908

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1920_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 155 \"%0 - interface %10!u!, clock id %11!u!, sample frequency %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1920_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 155 \"%0 - interface %10!u!, clock id %11!u!, sample frequency %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1920
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1920 WPP_ANNOTATE_USBAudioConfiguration_cpp1920_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1920
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1920 WPP_ANNOTATE_USBAudioConfiguration_cpp1920_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1920", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"inputClockSourceID, ItemLong -- 11" , \
    L"desiredSampleRate, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1920

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1929_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 156 \"%0 - interface %10!u!, clock id %11!u!, sample frequency %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1929_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 156 \"%0 - interface %10!u!, clock id %11!u!, sample frequency %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1929
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1929 WPP_ANNOTATE_USBAudioConfiguration_cpp1929_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1929
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1929 WPP_ANNOTATE_USBAudioConfiguration_cpp1929_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1929", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"outputClockSourceID, ItemLong -- 11" , \
    L"desiredSampleRate, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1929

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1935_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 157 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1935_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 157 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1935
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1935 WPP_ANNOTATE_USBAudioConfiguration_cpp1935_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1935
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1935 WPP_ANNOTATE_USBAudioConfiguration_cpp1935_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1935", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1935

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1951_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 158 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1951_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 158 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1951
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1951 WPP_ANNOTATE_USBAudioConfiguration_cpp1951_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1951
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1951 WPP_ANNOTATE_USBAudioConfiguration_cpp1951_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1951", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1951

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1966_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 159 \"%0%!FUNC! Exit %10!s!, %11!u!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1966_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 159 \"%0%!FUNC! Exit %10!s!, %11!u!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1966
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1966 WPP_ANNOTATE_USBAudioConfiguration_cpp1966_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1966
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1966 WPP_ANNOTATE_USBAudioConfiguration_cpp1966_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1966", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"sampleRate, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1966

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1984_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 160 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1984_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 160 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1984
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1984 WPP_ANNOTATE_USBAudioConfiguration_cpp1984_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1984
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1984 WPP_ANNOTATE_USBAudioConfiguration_cpp1984_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1984", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1984

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1995_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 161 \"%0 - interface %10!u!, clock id %11!u!, sample frequency range [%12!u!] min %13!u!, max %14!u!,  res %15!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1995_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 161 \"%0 - interface %10!u!, clock id %11!u!, sample frequency range [%12!u!] min %13!u!, max %14!u!,  res %15!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1995
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1995 WPP_ANNOTATE_USBAudioConfiguration_cpp1995_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"Arg, ItemLong -- 14" , \
    L"Arg, ItemLong -- 15" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1995
# define WPP_ANNOTATE_USBAudioConfiguration_cpp1995 WPP_ANNOTATE_USBAudioConfiguration_cpp1995_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp1995", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"clockSourceID, ItemLong -- 11" , \
    L"rangeIndex, ItemLong -- 12" , \
    L"parameterBlock->subrange[rangeIndex].dMIN, ItemLong -- 13" , \
    L"parameterBlock->subrange[rangeIndex].dMAX, ItemLong -- 14" , \
    L"parameterBlock->subrange[rangeIndex].dRES, ItemLong -- 15" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp1995

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2000_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 162 \"%0 <PID %10!04x!>\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2000_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 162 \"%0 <PID %10!04x!>\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2000
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2000 WPP_ANNOTATE_USBAudioConfiguration_cpp2000_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2000
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2000 WPP_ANNOTATE_USBAudioConfiguration_cpp2000_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2000", \
    L"{", \
    L"deviceContext->AudioProperty.ProductId, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2000

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2001_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 163 \"%0 - supporting %10!u! Hz\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2001_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 163 \"%0 - supporting %10!u! Hz\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2001
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2001 WPP_ANNOTATE_USBAudioConfiguration_cpp2001_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2001
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2001 WPP_ANNOTATE_USBAudioConfiguration_cpp2001_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2001", \
    L"{", \
    L"c_SampleRateList[sampleRateListIndex], ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2001

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2010_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 164 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2010_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 164 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2010
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2010 WPP_ANNOTATE_USBAudioConfiguration_cpp2010_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2010
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2010 WPP_ANNOTATE_USBAudioConfiguration_cpp2010_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2010", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2010

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2027_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 165 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2027_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 165 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2027
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2027 WPP_ANNOTATE_USBAudioConfiguration_cpp2027_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2027
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2027 WPP_ANNOTATE_USBAudioConfiguration_cpp2027_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2027", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2027

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2029_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 166 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentClockSourceID(deviceContext, inputClockSourceID, outputClockSourceID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2029_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 166 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentClockSourceID(deviceContext, inputClockSourceID, outputClockSourceID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2029
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2029 WPP_ANNOTATE_USBAudioConfiguration_cpp2029_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2029
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2029 WPP_ANNOTATE_USBAudioConfiguration_cpp2029_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2029", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2029

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2037_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 167 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentSupportedSampleFrequency(deviceContext, inputClockSourceID, m_inputSupportedSampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2037_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 167 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentSupportedSampleFrequency(deviceContext, inputClockSourceID, m_inputSupportedSampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2037
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2037 WPP_ANNOTATE_USBAudioConfiguration_cpp2037_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2037
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2037 WPP_ANNOTATE_USBAudioConfiguration_cpp2037_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2037", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2037

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2044_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 168 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentSupportedSampleFrequency(deviceContext, inputClockSourceID, m_inputSupportedSampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2044_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 168 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentSupportedSampleFrequency(deviceContext, inputClockSourceID, m_inputSupportedSampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2044
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2044 WPP_ANNOTATE_USBAudioConfiguration_cpp2044_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2044
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2044 WPP_ANNOTATE_USBAudioConfiguration_cpp2044_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2044", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2044

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2048_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 169 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentSupportedSampleFrequency(deviceContext, outputClockSourceID, m_outputSupportedSampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2048_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 169 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentSupportedSampleFrequency(deviceContext, outputClockSourceID, m_outputSupportedSampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2048
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2048 WPP_ANNOTATE_USBAudioConfiguration_cpp2048_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2048
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2048 WPP_ANNOTATE_USBAudioConfiguration_cpp2048_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2048", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2048

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2065_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 170 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2065_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 170 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2065
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2065 WPP_ANNOTATE_USBAudioConfiguration_cpp2065_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2065
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2065 WPP_ANNOTATE_USBAudioConfiguration_cpp2065_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2065", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2065

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2079_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 171 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2079_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 171 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2079
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2079 WPP_ANNOTATE_USBAudioConfiguration_cpp2079_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2079
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2079 WPP_ANNOTATE_USBAudioConfiguration_cpp2079_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2079", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2079

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2090_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 172 \"%0 - feature unit numOfChannels %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2090_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 172 \"%0 - feature unit numOfChannels %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2090
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2090 WPP_ANNOTATE_USBAudioConfiguration_cpp2090_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2090
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2090 WPP_ANNOTATE_USBAudioConfiguration_cpp2090_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2090", \
    L"{", \
    L"numOfChannels, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2090

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2093_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 173 \"%0 - feature unit ch %10!u!, bmControls 0x%11!02u!%12!02u!%13!02u!%14!02u!  0x%15!08x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2093_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 173 \"%0 - feature unit ch %10!u!, bmControls 0x%11!02u!%12!02u!%13!02u!%14!02u!  0x%15!08x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2093
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2093 WPP_ANNOTATE_USBAudioConfiguration_cpp2093_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"Arg, ItemLong -- 14" , \
    L"Arg, ItemLong -- 15" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2093
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2093 WPP_ANNOTATE_USBAudioConfiguration_cpp2093_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2093", \
    L"{", \
    L"ch, ItemLong -- 10" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[3], ItemLong -- 11" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[2], ItemLong -- 12" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[1], ItemLong -- 13" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[0], ItemLong -- 14" , \
    L"ConvertBmaControls(featureUnitDescriptor->ch[ch].bmaControls), ItemLong -- 15" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2093

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2100_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 174 \"%0 - mute channel is %10!d!, current %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2100_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 174 \"%0 - mute channel is %10!d!, current %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2100
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2100 WPP_ANNOTATE_USBAudioConfiguration_cpp2100_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2100
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2100 WPP_ANNOTATE_USBAudioConfiguration_cpp2100_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2100", \
    L"{", \
    L"ch, ItemLong -- 10" , \
    L"(UCHAR)mute, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2100

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2109_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 175 \"%0 - volume channel is %10!d!, current %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2109_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 175 \"%0 - volume channel is %10!d!, current %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2109
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2109 WPP_ANNOTATE_USBAudioConfiguration_cpp2109_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2109
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2109 WPP_ANNOTATE_USBAudioConfiguration_cpp2109_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2109", \
    L"{", \
    L"ch, ItemLong -- 10" , \
    L"volume, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2109

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2116_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 176 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2116_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 176 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2116
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2116 WPP_ANNOTATE_USBAudioConfiguration_cpp2116_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2116
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2116 WPP_ANNOTATE_USBAudioConfiguration_cpp2116_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2116", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2116

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2131_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 177 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2131_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 177 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2131
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2131 WPP_ANNOTATE_USBAudioConfiguration_cpp2131_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2131
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2131 WPP_ANNOTATE_USBAudioConfiguration_cpp2131_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2131", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2131

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2133_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 178 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentSupportedSampleFrequency(deviceContext, supportedSampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2133_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 178 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentSupportedSampleFrequency(deviceContext, supportedSampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2133
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2133 WPP_ANNOTATE_USBAudioConfiguration_cpp2133_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2133
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2133 WPP_ANNOTATE_USBAudioConfiguration_cpp2133_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2133", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2133

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2136_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 179 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2136_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 179 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2136
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2136 WPP_ANNOTATE_USBAudioConfiguration_cpp2136_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2136
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2136 WPP_ANNOTATE_USBAudioConfiguration_cpp2136_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2136", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2136

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2150_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 180 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2150_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 180 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2150
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2150 WPP_ANNOTATE_USBAudioConfiguration_cpp2150_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2150
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2150 WPP_ANNOTATE_USBAudioConfiguration_cpp2150_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2150", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2150

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2161_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 181 \"%0 - feature unit numOfChannels %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2161_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 181 \"%0 - feature unit numOfChannels %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2161
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2161 WPP_ANNOTATE_USBAudioConfiguration_cpp2161_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2161
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2161 WPP_ANNOTATE_USBAudioConfiguration_cpp2161_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2161", \
    L"{", \
    L"numOfChannels, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2161

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2164_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 182 \"%0 - feature unit ch %10!u!, bmControls 0x%11!02u!%12!02u!%13!02u!%14!02u!  0x%15!08x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2164_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 182 \"%0 - feature unit ch %10!u!, bmControls 0x%11!02u!%12!02u!%13!02u!%14!02u!  0x%15!08x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2164
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2164 WPP_ANNOTATE_USBAudioConfiguration_cpp2164_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"Arg, ItemLong -- 14" , \
    L"Arg, ItemLong -- 15" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2164
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2164 WPP_ANNOTATE_USBAudioConfiguration_cpp2164_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2164", \
    L"{", \
    L"ch, ItemLong -- 10" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[3], ItemLong -- 11" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[2], ItemLong -- 12" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[1], ItemLong -- 13" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[0], ItemLong -- 14" , \
    L"ConvertBmaControls(featureUnitDescriptor->ch[ch].bmaControls), ItemLong -- 15" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2164

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2177_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 183 \"%0 - interface %10!u!, ch %11!u!, unit id %12!u!, volume range [%13!u!] min %14!u!, max %15!u!,  res %16!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2177_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 183 \"%0 - interface %10!u!, ch %11!u!, unit id %12!u!, volume range [%13!u!] min %14!u!, max %15!u!,  res %16!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2177
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2177 WPP_ANNOTATE_USBAudioConfiguration_cpp2177_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"Arg, ItemLong -- 14" , \
    L"Arg, ItemLong -- 15" , \
    L"Arg, ItemLong -- 16" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2177
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2177 WPP_ANNOTATE_USBAudioConfiguration_cpp2177_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2177", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"ch, ItemLong -- 11" , \
    L"featureUnitDescriptor->bUnitID, ItemLong -- 12" , \
    L"rangeIndex, ItemLong -- 13" , \
    L"parameterBlock->subrange[rangeIndex].wMIN, ItemLong -- 14" , \
    L"parameterBlock->subrange[rangeIndex].wMAX, ItemLong -- 15" , \
    L"parameterBlock->subrange[rangeIndex].wRES, ItemLong -- 16" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2177

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2186_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 184 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2186_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 184 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2186
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2186 WPP_ANNOTATE_USBAudioConfiguration_cpp2186_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2186
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2186 WPP_ANNOTATE_USBAudioConfiguration_cpp2186_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2186", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2186

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2201_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 185 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2201_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 185 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2201
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2201 WPP_ANNOTATE_USBAudioConfiguration_cpp2201_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2201
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2201 WPP_ANNOTATE_USBAudioConfiguration_cpp2201_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2201", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2201

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2215_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 186 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=ControlRequestGetClockSelector(deviceContext, GetInterfaceNumber(), m_clockSelectorDescriptor->bClockID, clockSelectorIndex)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2215_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 186 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=ControlRequestGetClockSelector(deviceContext, GetInterfaceNumber(), m_clockSelectorDescriptor->bClockID, clockSelectorIndex)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2215
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2215 WPP_ANNOTATE_USBAudioConfiguration_cpp2215_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2215
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2215 WPP_ANNOTATE_USBAudioConfiguration_cpp2215_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2215", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2215

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2221_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 187 \"%0 - bNrInPins %10!u!, clockSelecotrIndex %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2221_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 187 \"%0 - bNrInPins %10!u!, clockSelecotrIndex %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2221
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2221 WPP_ANNOTATE_USBAudioConfiguration_cpp2221_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2221
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2221 WPP_ANNOTATE_USBAudioConfiguration_cpp2221_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2221", \
    L"{", \
    L"m_clockSelectorDescriptor->bNrInPins, ItemLong -- 10" , \
    L"clockSelectorIndex, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2221

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2225_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 188 \"%0 - clockSourceID %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2225_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 188 \"%0 - clockSourceID %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2225
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2225 WPP_ANNOTATE_USBAudioConfiguration_cpp2225_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2225
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2225 WPP_ANNOTATE_USBAudioConfiguration_cpp2225_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2225", \
    L"{", \
    L"clockSourceID, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2225

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2237_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 189 \"%0 - numOfAcClockSourceInfo %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2237_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 189 \"%0 - numOfAcClockSourceInfo %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2237
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2237 WPP_ANNOTATE_USBAudioConfiguration_cpp2237_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2237
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2237 WPP_ANNOTATE_USBAudioConfiguration_cpp2237_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2237", \
    L"{", \
    L"numOfAcClockSourceInfo, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2237

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2240_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 190 \"%0Clock Source Descriptor is missing.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2240_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 190 \"%0Clock Source Descriptor is missing.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2240
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2240 WPP_ANNOTATE_USBAudioConfiguration_cpp2240_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2240
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2240 WPP_ANNOTATE_USBAudioConfiguration_cpp2240_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2240", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2240

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2245_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 191 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=m_acClockSourceInfo.Get(0, clockSourceDescriptor)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2245_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 191 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=m_acClockSourceInfo.Get(0, clockSourceDescriptor)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2245
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2245 WPP_ANNOTATE_USBAudioConfiguration_cpp2245_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2245
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2245 WPP_ANNOTATE_USBAudioConfiguration_cpp2245_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2245", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2245

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2247_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 192 \"%0 - clockSourceID %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2247_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 192 \"%0 - clockSourceID %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2247
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2247 WPP_ANNOTATE_USBAudioConfiguration_cpp2247_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2247
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2247 WPP_ANNOTATE_USBAudioConfiguration_cpp2247_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2247", \
    L"{", \
    L"clockSourceID, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2247

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2250_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 193 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2250_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 193 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2250
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2250 WPP_ANNOTATE_USBAudioConfiguration_cpp2250_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2250
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2250 WPP_ANNOTATE_USBAudioConfiguration_cpp2250_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2250", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2250

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2267_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 194 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2267_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 194 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2267
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2267 WPP_ANNOTATE_USBAudioConfiguration_cpp2267_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2267
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2267 WPP_ANNOTATE_USBAudioConfiguration_cpp2267_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2267", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2267

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2283_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 195 \"%0 - output terminal id %10!u!, terminal type %11!u!, bCSourceID %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2283_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 195 \"%0 - output terminal id %10!u!, terminal type %11!u!, bCSourceID %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2283
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2283 WPP_ANNOTATE_USBAudioConfiguration_cpp2283_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2283
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2283 WPP_ANNOTATE_USBAudioConfiguration_cpp2283_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2283", \
    L"{", \
    L"outputTerminalDescriptor->bTerminalID, ItemLong -- 10" , \
    L"outputTerminalDescriptor->wTerminalType, ItemLong -- 11" , \
    L"clockSourceID, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2283

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2301_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 196 \"%0 - input terminal id %10!u!, terminal type %11!u!, bCSourceID %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2301_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 196 \"%0 - input terminal id %10!u!, terminal type %11!u!, bCSourceID %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2301
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2301 WPP_ANNOTATE_USBAudioConfiguration_cpp2301_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2301
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2301 WPP_ANNOTATE_USBAudioConfiguration_cpp2301_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2301", \
    L"{", \
    L"inputTerminalDescriptor->bTerminalID, ItemLong -- 10" , \
    L"inputTerminalDescriptor->wTerminalType, ItemLong -- 11" , \
    L"clockSourceID, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2301

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2310_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 197 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentClockSourceID(deviceContext, clockSourceID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2310_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 197 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentClockSourceID(deviceContext, clockSourceID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2310
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2310 WPP_ANNOTATE_USBAudioConfiguration_cpp2310_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2310
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2310 WPP_ANNOTATE_USBAudioConfiguration_cpp2310_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2310", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2310

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2313_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 198 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2313_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 198 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2313
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2313 WPP_ANNOTATE_USBAudioConfiguration_cpp2313_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2313
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2313 WPP_ANNOTATE_USBAudioConfiguration_cpp2313_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2313", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2313

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2330_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 199 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2330_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 199 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2330
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2330 WPP_ANNOTATE_USBAudioConfiguration_cpp2330_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2330
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2330 WPP_ANNOTATE_USBAudioConfiguration_cpp2330_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2330", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2330

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2335_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 200 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentClockSourceID(deviceContext, true, inputClockSourceID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2335_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 200 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentClockSourceID(deviceContext, true, inputClockSourceID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2335
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2335 WPP_ANNOTATE_USBAudioConfiguration_cpp2335_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2335
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2335 WPP_ANNOTATE_USBAudioConfiguration_cpp2335_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2335", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2335

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2336_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 201 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentClockSourceID(deviceContext, false, outputClockSourceID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2336_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 201 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentClockSourceID(deviceContext, false, outputClockSourceID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2336
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2336 WPP_ANNOTATE_USBAudioConfiguration_cpp2336_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2336
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2336 WPP_ANNOTATE_USBAudioConfiguration_cpp2336_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2336", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2336

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2338_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 202 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2338_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 202 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2338
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2338 WPP_ANNOTATE_USBAudioConfiguration_cpp2338_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2338
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2338 WPP_ANNOTATE_USBAudioConfiguration_cpp2338_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2338", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2338

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2353_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 203 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2353_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 203 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2353
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2353 WPP_ANNOTATE_USBAudioConfiguration_cpp2353_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2353
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2353 WPP_ANNOTATE_USBAudioConfiguration_cpp2353_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2353", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2353

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2364_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 204 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=ControlRequestGetClockSelector(deviceContext, GetInterfaceNumber(), m_clockSelectorDescriptor->bClockID, currentClockSelectorIndex)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2364_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 204 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=ControlRequestGetClockSelector(deviceContext, GetInterfaceNumber(), m_clockSelectorDescriptor->bClockID, currentClockSelectorIndex)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2364
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2364 WPP_ANNOTATE_USBAudioConfiguration_cpp2364_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2364
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2364 WPP_ANNOTATE_USBAudioConfiguration_cpp2364_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2364", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2364

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2365_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 205 \"%0 - bNrInPins %10!u!, clockSelecotrIndex %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2365_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 205 \"%0 - bNrInPins %10!u!, clockSelecotrIndex %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2365
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2365 WPP_ANNOTATE_USBAudioConfiguration_cpp2365_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2365
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2365 WPP_ANNOTATE_USBAudioConfiguration_cpp2365_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2365", \
    L"{", \
    L"m_clockSelectorDescriptor->bNrInPins, ItemLong -- 10" , \
    L"currentClockSelectorIndex, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2365

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2424_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 206 \"%0 - clockSourceID %10!u!, target clockSourceID %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2424_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 206 \"%0 - clockSourceID %10!u!, target clockSourceID %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2424
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2424 WPP_ANNOTATE_USBAudioConfiguration_cpp2424_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2424
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2424 WPP_ANNOTATE_USBAudioConfiguration_cpp2424_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2424", \
    L"{", \
    L"m_clockSelectorDescriptor->baCSourceID[clockSelectorIndex], ItemLong -- 10" , \
    L"targetClockID, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2424

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2434_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 207 \"%0 - interface %10!u!, clock id %11!u!, clockSelectorIndex %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2434_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 207 \"%0 - interface %10!u!, clock id %11!u!, clockSelectorIndex %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2434
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2434 WPP_ANNOTATE_USBAudioConfiguration_cpp2434_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2434
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2434 WPP_ANNOTATE_USBAudioConfiguration_cpp2434_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2434", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"m_clockSelectorDescriptor->bClockID, ItemLong -- 11" , \
    L"targetClockSelectorIndex, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2434

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2435_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 208 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=ControlRequestSetClockSelector(deviceContext, GetInterfaceNumber(), m_clockSelectorDescriptor->bClockID, targetClockSelectorIndex)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2435_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 208 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=ControlRequestSetClockSelector(deviceContext, GetInterfaceNumber(), m_clockSelectorDescriptor->bClockID, targetClockSelectorIndex)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2435
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2435 WPP_ANNOTATE_USBAudioConfiguration_cpp2435_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2435
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2435 WPP_ANNOTATE_USBAudioConfiguration_cpp2435_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2435", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2435

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2440_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 209 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2440_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 209 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2440
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2440 WPP_ANNOTATE_USBAudioConfiguration_cpp2440_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2440
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2440 WPP_ANNOTATE_USBAudioConfiguration_cpp2440_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2440", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2440

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2455_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 210 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2455_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 210 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2455
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2455 WPP_ANNOTATE_USBAudioConfiguration_cpp2455_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2455
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2455 WPP_ANNOTATE_USBAudioConfiguration_cpp2455_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2455", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2455

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2457_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 211 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=QueryCurrentSampleFrequency(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2457_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 211 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=QueryCurrentSampleFrequency(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2457
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2457 WPP_ANNOTATE_USBAudioConfiguration_cpp2457_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2457
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2457 WPP_ANNOTATE_USBAudioConfiguration_cpp2457_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2457", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2457

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2477_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 212 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentFeatureUnit(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2477_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 212 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentFeatureUnit(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2477
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2477 WPP_ANNOTATE_USBAudioConfiguration_cpp2477_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2477
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2477 WPP_ANNOTATE_USBAudioConfiguration_cpp2477_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2477", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2477

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2482_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 213 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2482_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 213 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2482
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2482 WPP_ANNOTATE_USBAudioConfiguration_cpp2482_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2482
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2482 WPP_ANNOTATE_USBAudioConfiguration_cpp2482_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2482", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2482

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2497_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 214 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2497_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 214 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2497
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2497 WPP_ANNOTATE_USBAudioConfiguration_cpp2497_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2497
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2497 WPP_ANNOTATE_USBAudioConfiguration_cpp2497_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2497", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2497

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2500_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 215 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetRangeSampleFrequency(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2500_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 215 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetRangeSampleFrequency(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2500
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2500 WPP_ANNOTATE_USBAudioConfiguration_cpp2500_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2500
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2500 WPP_ANNOTATE_USBAudioConfiguration_cpp2500_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2500", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2500

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2506_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 216 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetRangeFeatureUnit(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2506_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 216 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetRangeFeatureUnit(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2506
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2506 WPP_ANNOTATE_USBAudioConfiguration_cpp2506_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2506
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2506 WPP_ANNOTATE_USBAudioConfiguration_cpp2506_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2506", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2506

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2508_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 217 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2508_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 217 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2508
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2508 WPP_ANNOTATE_USBAudioConfiguration_cpp2508_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2508
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2508 WPP_ANNOTATE_USBAudioConfiguration_cpp2508_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2508", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2508

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2528_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 218 \"%0%!FUNC!  recursionCount = %10!d!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2528_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 218 \"%0%!FUNC!  recursionCount = %10!d!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2528
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2528 WPP_ANNOTATE_USBAudioConfiguration_cpp2528_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2528
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2528 WPP_ANNOTATE_USBAudioConfiguration_cpp2528_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2528", \
    L"{", \
    L"recursionCount, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2528

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2529_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 219 \"%0 - souceID id %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2529_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 219 \"%0 - souceID id %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2529
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2529 WPP_ANNOTATE_USBAudioConfiguration_cpp2529_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2529
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2529 WPP_ANNOTATE_USBAudioConfiguration_cpp2529_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2529", \
    L"{", \
    L"sourceID, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2529

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2543_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 220 \"%0 - output terminal bTerminalID %10!u!, bSourceID %11!u!, bCSSourceID %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2543_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 220 \"%0 - output terminal bTerminalID %10!u!, bSourceID %11!u!, bCSSourceID %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2543
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2543 WPP_ANNOTATE_USBAudioConfiguration_cpp2543_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2543
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2543 WPP_ANNOTATE_USBAudioConfiguration_cpp2543_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2543", \
    L"{", \
    L"((NS_USBAudio0200::PCS_AC_OUTPUT_TERMINAL_DESCRIPTOR)genericAudioDescriptor)->bTerminalID, ItemLong -- 10" , \
    L"((NS_USBAudio0200::PCS_AC_OUTPUT_TERMINAL_DESCRIPTOR)genericAudioDescriptor)->bSourceID, ItemLong -- 11" , \
    L"((NS_USBAudio0200::PCS_AC_OUTPUT_TERMINAL_DESCRIPTOR)genericAudioDescriptor)->bCSourceID, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2543

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2553_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 221 \"%0 - feature unit bSourceID %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2553_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 221 \"%0 - feature unit bSourceID %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2553
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2553 WPP_ANNOTATE_USBAudioConfiguration_cpp2553_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2553
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2553 WPP_ANNOTATE_USBAudioConfiguration_cpp2553_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2553", \
    L"{", \
    L"featureUnitDescriptor->bSourceID, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2553

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2560_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 222 \"%0 - feature unit ch[%10!u!] bmaControls %11!02x! %12!02x! %13!02x! %14!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2560_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 222 \"%0 - feature unit ch[%10!u!] bmaControls %11!02x! %12!02x! %13!02x! %14!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2560
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2560 WPP_ANNOTATE_USBAudioConfiguration_cpp2560_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"Arg, ItemLong -- 14" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2560
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2560 WPP_ANNOTATE_USBAudioConfiguration_cpp2560_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2560", \
    L"{", \
    L"ch, ItemLong -- 10" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[3], ItemLong -- 11" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[2], ItemLong -- 12" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[1], ItemLong -- 13" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[0], ItemLong -- 14" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2560

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2579_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 223 \"%0 - mixer unit bUnitID %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2579_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 223 \"%0 - mixer unit bUnitID %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2579
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2579 WPP_ANNOTATE_USBAudioConfiguration_cpp2579_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2579
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2579 WPP_ANNOTATE_USBAudioConfiguration_cpp2579_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2579", \
    L"{", \
    L"mixerUnitDescriptor->bUnitID, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2579

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2586_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 224 \"%0 - mixer unit pin[%10!u!] baSourceID %11!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2586_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 224 \"%0 - mixer unit pin[%10!u!] baSourceID %11!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2586
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2586 WPP_ANNOTATE_USBAudioConfiguration_cpp2586_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2586
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2586 WPP_ANNOTATE_USBAudioConfiguration_cpp2586_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2586", \
    L"{", \
    L"pin, ItemLong -- 10" , \
    L"baSourceID, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2586

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2645_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 225 \"%0 - num of ac input terminal info %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2645_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 225 \"%0 - num of ac input terminal info %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2645
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2645 WPP_ANNOTATE_USBAudioConfiguration_cpp2645_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2645
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2645 WPP_ANNOTATE_USBAudioConfiguration_cpp2645_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2645", \
    L"{", \
    L"numOfAcInputTerminalInfo, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2645

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2651_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 226 \"%0 - terminal id %10!u!, terminal link %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2651_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 226 \"%0 - terminal id %10!u!, terminal link %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2651
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2651 WPP_ANNOTATE_USBAudioConfiguration_cpp2651_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2651
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2651 WPP_ANNOTATE_USBAudioConfiguration_cpp2651_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2651", \
    L"{", \
    L"inputTerminalDescriptor->bTerminalID, ItemLong -- 10" , \
    L"terminalLink, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2651

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2654_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 227 \"%0 - terminal id %10!u!, channels %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2654_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 227 \"%0 - terminal id %10!u!, channels %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2654
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2654 WPP_ANNOTATE_USBAudioConfiguration_cpp2654_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2654
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2654 WPP_ANNOTATE_USBAudioConfiguration_cpp2654_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2654", \
    L"{", \
    L"inputTerminalDescriptor->bTerminalID, ItemLong -- 10" , \
    L"inputTerminalDescriptor->bNrChannels, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2654

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2677_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 228 \"%0The topology link is broken or the topology could not be analyzed.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2677_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 228 \"%0The topology link is broken or the topology could not be analyzed.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2677
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2677 WPP_ANNOTATE_USBAudioConfiguration_cpp2677_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2677
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2677 WPP_ANNOTATE_USBAudioConfiguration_cpp2677_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2677", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2677

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2711_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 229 \"%0 - num of ac output terminal info %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2711_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 229 \"%0 - num of ac output terminal info %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2711
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2711 WPP_ANNOTATE_USBAudioConfiguration_cpp2711_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2711
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2711 WPP_ANNOTATE_USBAudioConfiguration_cpp2711_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2711", \
    L"{", \
    L"numOfAcOutputTerminalInfo, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2711

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2717_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 230 \"%0 - terminal id %10!u!, terminal link %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2717_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 230 \"%0 - terminal id %10!u!, terminal link %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2717
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2717 WPP_ANNOTATE_USBAudioConfiguration_cpp2717_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2717
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2717 WPP_ANNOTATE_USBAudioConfiguration_cpp2717_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2717", \
    L"{", \
    L"outputTerminalDescriptor->bTerminalID, ItemLong -- 10" , \
    L"terminalLink, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2717

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2721_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 231 \"%0 - bSourceID %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2721_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 231 \"%0 - bSourceID %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2721
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2721 WPP_ANNOTATE_USBAudioConfiguration_cpp2721_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2721
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2721 WPP_ANNOTATE_USBAudioConfiguration_cpp2721_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2721", \
    L"{", \
    L"outputTerminalDescriptor->bSourceID, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2721

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2732_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 232 \"%0 - souceID id %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2732_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 232 \"%0 - souceID id %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2732
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2732 WPP_ANNOTATE_USBAudioConfiguration_cpp2732_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2732
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2732 WPP_ANNOTATE_USBAudioConfiguration_cpp2732_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2732", \
    L"{", \
    L"sourceID, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2732

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2741_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 233 \"%0 - input terminal bTerminalID %10!u!, bCSSourceID %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2741_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 233 \"%0 - input terminal bTerminalID %10!u!, bCSSourceID %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2741
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2741 WPP_ANNOTATE_USBAudioConfiguration_cpp2741_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2741
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2741 WPP_ANNOTATE_USBAudioConfiguration_cpp2741_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2741", \
    L"{", \
    L"((NS_USBAudio0200::PCS_AC_INPUT_TERMINAL_DESCRIPTOR)genericAudioDescriptor)->bTerminalID, ItemLong -- 10" , \
    L"((NS_USBAudio0200::PCS_AC_INPUT_TERMINAL_DESCRIPTOR)genericAudioDescriptor)->bCSourceID, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2741

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2752_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 234 \"%0 - feature unit unit id %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2752_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 234 \"%0 - feature unit unit id %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2752
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2752 WPP_ANNOTATE_USBAudioConfiguration_cpp2752_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2752
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2752 WPP_ANNOTATE_USBAudioConfiguration_cpp2752_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2752", \
    L"{", \
    L"featureUnitDescriptor->bUnitID, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2752

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2759_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 235 \"%0 - feature unit ch[%10!u!] bmaControls %11!02x! %12!02x! %13!02x! %14!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2759_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 235 \"%0 - feature unit ch[%10!u!] bmaControls %11!02x! %12!02x! %13!02x! %14!02x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2759
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2759 WPP_ANNOTATE_USBAudioConfiguration_cpp2759_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"Arg, ItemLong -- 14" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2759
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2759 WPP_ANNOTATE_USBAudioConfiguration_cpp2759_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2759", \
    L"{", \
    L"ch, ItemLong -- 10" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[3], ItemLong -- 11" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[2], ItemLong -- 12" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[1], ItemLong -- 13" , \
    L"featureUnitDescriptor->ch[ch].bmaControls[0], ItemLong -- 14" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2759

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2769_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 236 \"%0 - feature unit source id %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2769_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 236 \"%0 - feature unit source id %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2769
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2769 WPP_ANNOTATE_USBAudioConfiguration_cpp2769_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2769
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2769 WPP_ANNOTATE_USBAudioConfiguration_cpp2769_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2769", \
    L"{", \
    L"featureUnitDescriptor->bSourceID, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2769

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2791_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 237 \"%0The topology link is broken or the topology could not be analyzed.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2791_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 237 \"%0The topology link is broken or the topology could not be analyzed.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2791
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2791 WPP_ANNOTATE_USBAudioConfiguration_cpp2791_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2791
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2791 WPP_ANNOTATE_USBAudioConfiguration_cpp2791_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2791", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2791

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2811_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 238 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2811_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 238 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2811
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2811 WPP_ANNOTATE_USBAudioConfiguration_cpp2811_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2811
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2811 WPP_ANNOTATE_USBAudioConfiguration_cpp2811_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2811", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2811

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2813_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 239 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2813_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 239 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2813
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2813 WPP_ANNOTATE_USBAudioConfiguration_cpp2813_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2813
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2813 WPP_ANNOTATE_USBAudioConfiguration_cpp2813_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2813", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2813

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2822_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 240 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2822_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 240 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2822
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2822 WPP_ANNOTATE_USBAudioConfiguration_cpp2822_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2822
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2822 WPP_ANNOTATE_USBAudioConfiguration_cpp2822_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2822", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2822

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2824_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 241 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2824_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 241 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2824
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2824 WPP_ANNOTATE_USBAudioConfiguration_cpp2824_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2824
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2824 WPP_ANNOTATE_USBAudioConfiguration_cpp2824_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2824", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2824

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2836_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 242 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2836_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 242 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2836
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2836 WPP_ANNOTATE_USBAudioConfiguration_cpp2836_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2836
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2836 WPP_ANNOTATE_USBAudioConfiguration_cpp2836_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2836", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2836

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2840_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 243 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2840_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 243 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2840
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2840 WPP_ANNOTATE_USBAudioConfiguration_cpp2840_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2840
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2840 WPP_ANNOTATE_USBAudioConfiguration_cpp2840_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2840", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2840

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2887_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 244 \"%0 - interface %10!u!, validAlternateSettingMap 0x%11!x!, control read only\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2887_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 244 \"%0 - interface %10!u!, validAlternateSettingMap 0x%11!x!, control read only\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2887
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2887 WPP_ANNOTATE_USBAudioConfiguration_cpp2887_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2887
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2887 WPP_ANNOTATE_USBAudioConfiguration_cpp2887_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2887", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"validAlternateSettingMap, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2887

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2892_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 245 \"%0 - interface %10!u!, validAlternateSettingMap, control disable\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2892_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 245 \"%0 - interface %10!u!, validAlternateSettingMap, control disable\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2892
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2892 WPP_ANNOTATE_USBAudioConfiguration_cpp2892_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2892
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2892 WPP_ANNOTATE_USBAudioConfiguration_cpp2892_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2892", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2892

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2900_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 246 \"%0 - interface %10!u!, activeAlternateSetting 0x%11!x!, control read only\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2900_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 246 \"%0 - interface %10!u!, activeAlternateSetting 0x%11!x!, control read only\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2900
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2900 WPP_ANNOTATE_USBAudioConfiguration_cpp2900_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2900
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2900 WPP_ANNOTATE_USBAudioConfiguration_cpp2900_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2900", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"activeAlternateSetting, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2900

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2905_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 247 \"%0 - interface %10!u!, activeAlternateSetting, control disable\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2905_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 247 \"%0 - interface %10!u!, activeAlternateSetting, control disable\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2905
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2905 WPP_ANNOTATE_USBAudioConfiguration_cpp2905_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2905
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2905 WPP_ANNOTATE_USBAudioConfiguration_cpp2905_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2905", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2905

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2921_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 248 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2921_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 248 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2921
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2921 WPP_ANNOTATE_USBAudioConfiguration_cpp2921_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2921
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2921 WPP_ANNOTATE_USBAudioConfiguration_cpp2921_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2921", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2921

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2923_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 249 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2923_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 249 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2923
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2923 WPP_ANNOTATE_USBAudioConfiguration_cpp2923_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2923
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2923 WPP_ANNOTATE_USBAudioConfiguration_cpp2923_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2923", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2923

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2924_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 250 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::FORMAT_TYPE) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2924_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 250 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::FORMAT_TYPE) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2924
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2924 WPP_ANNOTATE_USBAudioConfiguration_cpp2924_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2924
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2924 WPP_ANNOTATE_USBAudioConfiguration_cpp2924_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2924", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2924

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2931_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 251 \"%0Format type I or III descriptor is already set.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2931_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 251 \"%0Format type I or III descriptor is already set.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2931
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2931 WPP_ANNOTATE_USBAudioConfiguration_cpp2931_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2931
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2931 WPP_ANNOTATE_USBAudioConfiguration_cpp2931_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2931", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2931

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2957_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 252 \"%0Several formats are defined.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2957_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 252 \"%0Several formats are defined.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2957
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2957 WPP_ANNOTATE_USBAudioConfiguration_cpp2957_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2957
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2957 WPP_ANNOTATE_USBAudioConfiguration_cpp2957_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2957", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2957

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2965_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 253 \"%0Class-Specific AS interface descriptor is null.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2965_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 253 \"%0Class-Specific AS interface descriptor is null.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2965
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2965 WPP_ANNOTATE_USBAudioConfiguration_cpp2965_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2965
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2965 WPP_ANNOTATE_USBAudioConfiguration_cpp2965_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2965", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2965

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2967_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 254 \"%0 - interface %10!u!, alternate setting %11!u!, %12!u! ch, %13!u! bytes per sample, %14!u! valid bits, audio data format 0x%15!x!, %16!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2967_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 254 \"%0 - interface %10!u!, alternate setting %11!u!, %12!u! ch, %13!u! bytes per sample, %14!u! valid bits, audio data format 0x%15!x!, %16!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2967
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2967 WPP_ANNOTATE_USBAudioConfiguration_cpp2967_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"Arg, ItemLong -- 14" , \
    L"Arg, ItemLong -- 15" , \
    L"Arg, ItemString -- 16" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2967
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2967 WPP_ANNOTATE_USBAudioConfiguration_cpp2967_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2967", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"GetAlternateSetting(), ItemLong -- 11" , \
    L"GetCurrentChannels(), ItemLong -- 12" , \
    L"formatITypeDescriptor->bSubslotSize, ItemLong -- 13" , \
    L"formatITypeDescriptor->bBitResolution, ItemLong -- 14" , \
    L"m_formatITypeDescriptor != nullptr ? m_formatITypeDescriptor->bFormatType : 0, ItemLong -- 15" , \
    L"m_enableGetFormatType ? 'get audio data format enable.' : ' ', ItemString -- 16" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2967

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2973_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 255 \"%0Format type I or III descriptor is already set.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2973_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 255 \"%0Format type I or III descriptor is already set.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2973
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2973 WPP_ANNOTATE_USBAudioConfiguration_cpp2973_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2973
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2973 WPP_ANNOTATE_USBAudioConfiguration_cpp2973_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2973", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2973

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2998_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 256 \"%0Several formats are defined.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2998_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 256 \"%0Several formats are defined.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2998
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2998 WPP_ANNOTATE_USBAudioConfiguration_cpp2998_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2998
# define WPP_ANNOTATE_USBAudioConfiguration_cpp2998 WPP_ANNOTATE_USBAudioConfiguration_cpp2998_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp2998", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp2998

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3006_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 257 \"%0Class-Specific AS interface descriptor is null.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3006_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 257 \"%0Class-Specific AS interface descriptor is null.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3006
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3006 WPP_ANNOTATE_USBAudioConfiguration_cpp3006_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3006
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3006 WPP_ANNOTATE_USBAudioConfiguration_cpp3006_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3006", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3006

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3008_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 258 \"%0 - interface %10!u!, alternate setting %11!u!, %12!u! ch, %13!u! bytes per sample, %14!u! valid bits, audio data format 0x%15!x!, %16!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3008_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 258 \"%0 - interface %10!u!, alternate setting %11!u!, %12!u! ch, %13!u! bytes per sample, %14!u! valid bits, audio data format 0x%15!x!, %16!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3008
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3008 WPP_ANNOTATE_USBAudioConfiguration_cpp3008_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"Arg, ItemLong -- 14" , \
    L"Arg, ItemLong -- 15" , \
    L"Arg, ItemString -- 16" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3008
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3008 WPP_ANNOTATE_USBAudioConfiguration_cpp3008_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3008", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"GetAlternateSetting(), ItemLong -- 11" , \
    L"GetCurrentChannels(), ItemLong -- 12" , \
    L"formatIIITypeDescriptor->bSubslotSize, ItemLong -- 13" , \
    L"formatIIITypeDescriptor->bBitResolution, ItemLong -- 14" , \
    L"m_formatIIITypeDescriptor != nullptr ? m_formatIIITypeDescriptor->bFormatType : 0, ItemLong -- 15" , \
    L"m_enableGetFormatType ? 'get audio data format enable.' : ' ', ItemString -- 16" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3008

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3017_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 259 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3017_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 259 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3017
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3017 WPP_ANNOTATE_USBAudioConfiguration_cpp3017_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3017
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3017 WPP_ANNOTATE_USBAudioConfiguration_cpp3017_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3017", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3017

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3030_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 260 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3030_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 260 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3030
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3030 WPP_ANNOTATE_USBAudioConfiguration_cpp3030_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3030
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3030 WPP_ANNOTATE_USBAudioConfiguration_cpp3030_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3030", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3030

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3032_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 261 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3032_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 261 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3032
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3032 WPP_ANNOTATE_USBAudioConfiguration_cpp3032_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3032
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3032 WPP_ANNOTATE_USBAudioConfiguration_cpp3032_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3032", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3032

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3033_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 262 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::AS_GENERAL) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3033_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 262 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_INTERFACE) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::AS_GENERAL) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3033
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3033 WPP_ANNOTATE_USBAudioConfiguration_cpp3033_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3033
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3033 WPP_ANNOTATE_USBAudioConfiguration_cpp3033_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3033", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3033

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3037_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 263 \"%0AS interface descriptor is already set.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3037_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 263 \"%0AS interface descriptor is already set.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3037
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3037 WPP_ANNOTATE_USBAudioConfiguration_cpp3037_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3037
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3037 WPP_ANNOTATE_USBAudioConfiguration_cpp3037_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3037", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3037

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3044_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 264 \"%0This format is not supported.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3044_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 264 \"%0This format is not supported.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3044
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3044 WPP_ANNOTATE_USBAudioConfiguration_cpp3044_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3044
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3044 WPP_ANNOTATE_USBAudioConfiguration_cpp3044_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3044", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3044

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3051_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 265 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3051_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 265 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3051
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3051 WPP_ANNOTATE_USBAudioConfiguration_cpp3051_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3051
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3051 WPP_ANNOTATE_USBAudioConfiguration_cpp3051_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3051", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3051

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3066_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 266 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3066_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 266 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3066
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3066 WPP_ANNOTATE_USBAudioConfiguration_cpp3066_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3066
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3066 WPP_ANNOTATE_USBAudioConfiguration_cpp3066_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3066", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3066

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3068_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 267 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3068_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 267 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3068
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3068 WPP_ANNOTATE_USBAudioConfiguration_cpp3068_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3068
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3068 WPP_ANNOTATE_USBAudioConfiguration_cpp3068_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3068", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3068

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3069_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 268 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_ENDPOINT) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::EP_GENERAL) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3069_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 268 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=(descriptor->bDescriptorType != NS_USBAudio0200::CS_ENDPOINT) || (descriptor->bDescriptorSubtype != NS_USBAudio0200::EP_GENERAL) RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3069
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3069 WPP_ANNOTATE_USBAudioConfiguration_cpp3069_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3069
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3069 WPP_ANNOTATE_USBAudioConfiguration_cpp3069_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3069", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3069

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3073_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 269 \"%0CS isochronous audio data endpoint descriptor is already set.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3073_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 269 \"%0CS isochronous audio data endpoint descriptor is already set.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3073
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3073 WPP_ANNOTATE_USBAudioConfiguration_cpp3073_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3073
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3073 WPP_ANNOTATE_USBAudioConfiguration_cpp3073_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3073", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3073

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3084_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 270 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3084_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 270 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3084
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3084 WPP_ANNOTATE_USBAudioConfiguration_cpp3084_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3084
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3084 WPP_ANNOTATE_USBAudioConfiguration_cpp3084_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3084", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3084

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3194_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 271 \"%0 - endpointAttribute = 0x%10!x!, 0x%11!x!, 0x%12!x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3194_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 271 \"%0 - endpointAttribute = 0x%10!x!, 0x%11!x!, 0x%12!x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3194
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3194 WPP_ANNOTATE_USBAudioConfiguration_cpp3194_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3194
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3194 WPP_ANNOTATE_USBAudioConfiguration_cpp3194_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3194", \
    L"{", \
    L"endpointAttribute, ItemLong -- 10" , \
    L"USB_ENDPOINT_TYPE_ISOCHRONOUS_USAGE(endpointAttribute), ItemLong -- 11" , \
    L"USB_ENDPOINT_TYPE_ISOCHRONOUS_USAGE_FEEDBACK_ENDPOINT, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3194

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3203_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 272 \"%0This driver cannot deal feedback packet length %10!u!.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3203_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 272 \"%0This driver cannot deal feedback packet length %10!u!.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3203
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3203 WPP_ANNOTATE_USBAudioConfiguration_cpp3203_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3203
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3203 WPP_ANNOTATE_USBAudioConfiguration_cpp3203_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3203", \
    L"{", \
    L"maxPacketSize, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3203

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3215_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 273 \"%0Microsoft USB driver stack cannot deal feedback interval %10!u!.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3215_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 273 \"%0Microsoft USB driver stack cannot deal feedback interval %10!u!.\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3215
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3215 WPP_ANNOTATE_USBAudioConfiguration_cpp3215_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3215
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3215 WPP_ANNOTATE_USBAudioConfiguration_cpp3215_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3215", \
    L"{", \
    L"interval, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3215

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3249_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 274 \"%0 - endpointAddress = 0x%10!x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3249_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 274 \"%0 - endpointAddress = 0x%10!x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3249
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3249 WPP_ANNOTATE_USBAudioConfiguration_cpp3249_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3249
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3249 WPP_ANNOTATE_USBAudioConfiguration_cpp3249_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3249", \
    L"{", \
    L"endpointAddress, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3249

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3305_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 275 \"%0 - format type %10!u! %11!u!, audio data format 0x%12!x!, 0x%13!x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3305_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 275 \"%0 - format type %10!u! %11!u!, audio data format 0x%12!x!, 0x%13!x!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3305
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3305 WPP_ANNOTATE_USBAudioConfiguration_cpp3305_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3305
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3305 WPP_ANNOTATE_USBAudioConfiguration_cpp3305_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3305", \
    L"{", \
    L"m_formatType, ItemLong -- 10" , \
    L"formatType, ItemLong -- 11" , \
    L"m_audioDataFormat, ItemLong -- 12" , \
    L"audioDataFormat, ItemLong -- 13" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3305

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3321_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 276 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3321_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 276 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3321
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3321 WPP_ANNOTATE_USBAudioConfiguration_cpp3321_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3321
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3321 WPP_ANNOTATE_USBAudioConfiguration_cpp3321_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3321", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3321

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3323_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 277 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=deviceContext == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3323_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 277 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=deviceContext == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3323
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3323 WPP_ANNOTATE_USBAudioConfiguration_cpp3323_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3323
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3323 WPP_ANNOTATE_USBAudioConfiguration_cpp3323_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3323", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3323

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3344_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 278 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3344_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 278 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3344
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3344 WPP_ANNOTATE_USBAudioConfiguration_cpp3344_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3344
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3344 WPP_ANNOTATE_USBAudioConfiguration_cpp3344_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3344", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3344

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3360_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 279 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3360_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 279 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3360
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3360 WPP_ANNOTATE_USBAudioConfiguration_cpp3360_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3360
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3360 WPP_ANNOTATE_USBAudioConfiguration_cpp3360_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3360", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3360

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3362_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 280 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=deviceContext == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3362_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 280 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=deviceContext == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3362
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3362 WPP_ANNOTATE_USBAudioConfiguration_cpp3362_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3362
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3362 WPP_ANNOTATE_USBAudioConfiguration_cpp3362_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3362", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3362

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3369_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 281 \"%0 - interface %10!u!, validAlternateSettingMap 0x%11!x!, control read only\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3369_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 281 \"%0 - interface %10!u!, validAlternateSettingMap 0x%11!x!, control read only\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3369
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3369 WPP_ANNOTATE_USBAudioConfiguration_cpp3369_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3369
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3369 WPP_ANNOTATE_USBAudioConfiguration_cpp3369_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3369", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"validAlternateSettingMap, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3369

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3375_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 282 \"%0 - interface %10!u!, validAlternateSettingMap 0x%11!x!, control read only. %12!s!\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3375_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 282 \"%0 - interface %10!u!, validAlternateSettingMap 0x%11!x!, control read only. %12!s!\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3375
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3375 WPP_ANNOTATE_USBAudioConfiguration_cpp3375_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3375
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3375 WPP_ANNOTATE_USBAudioConfiguration_cpp3375_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3375", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"validAlternateSettingMap, ItemLong -- 11" , \
    L"status, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3375

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3382_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 283 \"%0 - interface %10!u!, validAlternateSettingMap, control disable\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3382_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 283 \"%0 - interface %10!u!, validAlternateSettingMap, control disable\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3382
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3382 WPP_ANNOTATE_USBAudioConfiguration_cpp3382_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3382
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3382 WPP_ANNOTATE_USBAudioConfiguration_cpp3382_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3382", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3382

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3386_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 284 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3386_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 284 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3386
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3386 WPP_ANNOTATE_USBAudioConfiguration_cpp3386_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3386
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3386 WPP_ANNOTATE_USBAudioConfiguration_cpp3386_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3386", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3386

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3402_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 285 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3402_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 285 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3402
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3402 WPP_ANNOTATE_USBAudioConfiguration_cpp3402_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3402
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3402 WPP_ANNOTATE_USBAudioConfiguration_cpp3402_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3402", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3402

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3404_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 286 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=deviceContext == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3404_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 286 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=deviceContext == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3404
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3404 WPP_ANNOTATE_USBAudioConfiguration_cpp3404_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3404
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3404 WPP_ANNOTATE_USBAudioConfiguration_cpp3404_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3404", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3404

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3425_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 287 \"%0 - interface %10!u!, alternate setting %11!u!, This interface is not supported.\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3425_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 287 \"%0 - interface %10!u!, alternate setting %11!u!, This interface is not supported.\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3425
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3425 WPP_ANNOTATE_USBAudioConfiguration_cpp3425_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3425
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3425 WPP_ANNOTATE_USBAudioConfiguration_cpp3425_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3425", \
    L"{", \
    L"GetInterfaceNumber(), ItemLong -- 10" , \
    L"GetAlternateSetting(), ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3425

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3429_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 288 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3429_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 288 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3429
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3429 WPP_ANNOTATE_USBAudioConfiguration_cpp3429_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3429
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3429 WPP_ANNOTATE_USBAudioConfiguration_cpp3429_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3429", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3429

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3446_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 289 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=UpdateCurrentACTValAltSettingsControl(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3446_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 289 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=UpdateCurrentACTValAltSettingsControl(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3446
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3446 WPP_ANNOTATE_USBAudioConfiguration_cpp3446_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3446
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3446 WPP_ANNOTATE_USBAudioConfiguration_cpp3446_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3446", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3446

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3448_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 290 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=UpdateCurrentACTAltSettingsControl(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3448_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 290 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=UpdateCurrentACTAltSettingsControl(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3448
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3448 WPP_ANNOTATE_USBAudioConfiguration_cpp3448_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3448
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3448 WPP_ANNOTATE_USBAudioConfiguration_cpp3448_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3448", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3448

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3472_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 291 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3472_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 291 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3472
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3472 WPP_ANNOTATE_USBAudioConfiguration_cpp3472_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3472
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3472 WPP_ANNOTATE_USBAudioConfiguration_cpp3472_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3472", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3472

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3514_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 292 \"%0 register input\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3514_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 292 \"%0 register input\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3514
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3514 WPP_ANNOTATE_USBAudioConfiguration_cpp3514_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3514
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3514 WPP_ANNOTATE_USBAudioConfiguration_cpp3514_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3514", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3514

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3515_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 293 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=usbAudioDataFormatManagerIn.SetUSBAudioDataFormat(formatType, formatArray, subslotSize, bitResolution, usbAudioDataFormat)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3515_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 293 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=usbAudioDataFormatManagerIn.SetUSBAudioDataFormat(formatType, formatArray, subslotSize, bitResolution, usbAudioDataFormat)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3515
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3515 WPP_ANNOTATE_USBAudioConfiguration_cpp3515_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3515
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3515 WPP_ANNOTATE_USBAudioConfiguration_cpp3515_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3515", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3515

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3519_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 294 \"%0 register output\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3519_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 294 \"%0 register output\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3519
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3519 WPP_ANNOTATE_USBAudioConfiguration_cpp3519_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3519
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3519 WPP_ANNOTATE_USBAudioConfiguration_cpp3519_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3519", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3519

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3520_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 295 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=usbAudioDataFormatManagerOut.SetUSBAudioDataFormat(formatType, formatArray, subslotSize, bitResolution, usbAudioDataFormat)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3520_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 295 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=usbAudioDataFormatManagerOut.SetUSBAudioDataFormat(formatType, formatArray, subslotSize, bitResolution, usbAudioDataFormat)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3520
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3520 WPP_ANNOTATE_USBAudioConfiguration_cpp3520_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3520
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3520 WPP_ANNOTATE_USBAudioConfiguration_cpp3520_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3520", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3520

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3531_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 296 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3531_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 296 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3531
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3531 WPP_ANNOTATE_USBAudioConfiguration_cpp3531_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3531
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3531 WPP_ANNOTATE_USBAudioConfiguration_cpp3531_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3531", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3531

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3545_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 297 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3545_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 297 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3545
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3545 WPP_ANNOTATE_USBAudioConfiguration_cpp3545_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3545
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3545 WPP_ANNOTATE_USBAudioConfiguration_cpp3545_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3545", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3545

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3547_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 298 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3547_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 298 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3547
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3547 WPP_ANNOTATE_USBAudioConfiguration_cpp3547_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3547
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3547 WPP_ANNOTATE_USBAudioConfiguration_cpp3547_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3547", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3547

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3556_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 299 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3556_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 299 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3556
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3556 WPP_ANNOTATE_USBAudioConfiguration_cpp3556_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3556
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3556 WPP_ANNOTATE_USBAudioConfiguration_cpp3556_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3556", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3556

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3558_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 300 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3558_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 300 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3558
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3558 WPP_ANNOTATE_USBAudioConfiguration_cpp3558_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3558
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3558 WPP_ANNOTATE_USBAudioConfiguration_cpp3558_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3558", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3558

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3569_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 301 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3569_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 301 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3569
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3569 WPP_ANNOTATE_USBAudioConfiguration_cpp3569_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3569
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3569 WPP_ANNOTATE_USBAudioConfiguration_cpp3569_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3569", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3569

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3571_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 302 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=interface == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3571_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 302 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=interface == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3571
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3571 WPP_ANNOTATE_USBAudioConfiguration_cpp3571_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3571
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3571 WPP_ANNOTATE_USBAudioConfiguration_cpp3571_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3571", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3571

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3575_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 303 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3575_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 303 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3575
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3575 WPP_ANNOTATE_USBAudioConfiguration_cpp3575_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3575
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3575 WPP_ANNOTATE_USBAudioConfiguration_cpp3575_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3575", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3575

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3745_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 304 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3745_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 304 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3745
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3745 WPP_ANNOTATE_USBAudioConfiguration_cpp3745_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3745
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3745 WPP_ANNOTATE_USBAudioConfiguration_cpp3745_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3745", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3745

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3761_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 305 \"%0 - interface %10!u!, alternate setting %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3761_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 305 \"%0 - interface %10!u!, alternate setting %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3761
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3761 WPP_ANNOTATE_USBAudioConfiguration_cpp3761_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3761
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3761 WPP_ANNOTATE_USBAudioConfiguration_cpp3761_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3761", \
    L"{", \
    L"usbAudioInterface->GetInterfaceNumber(), ItemLong -- 10" , \
    L"usbAudioInterface->GetAlternateSetting(), ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3761

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3762_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 306 \"%0 - currentMaxSupportedValidBitsPerSample %10!u!, maxSupportedValidBitsPerSample %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3762_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 306 \"%0 - currentMaxSupportedValidBitsPerSample %10!u!, maxSupportedValidBitsPerSample %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3762
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3762 WPP_ANNOTATE_USBAudioConfiguration_cpp3762_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3762
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3762 WPP_ANNOTATE_USBAudioConfiguration_cpp3762_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3762", \
    L"{", \
    L"currentMaxSupportedValidBitsPerSample, ItemLong -- 10" , \
    L"maxSupportedValidBitsPerSample, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3762

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3778_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 307 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3778_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 307 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3778
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3778 WPP_ANNOTATE_USBAudioConfiguration_cpp3778_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3778
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3778 WPP_ANNOTATE_USBAudioConfiguration_cpp3778_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3778", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3778

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3801_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 308 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3801_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 308 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3801
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3801 WPP_ANNOTATE_USBAudioConfiguration_cpp3801_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3801
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3801 WPP_ANNOTATE_USBAudioConfiguration_cpp3801_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3801", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3801

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3817_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 309 \"%0 - interface %10!u!, alternate setting %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3817_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 309 \"%0 - interface %10!u!, alternate setting %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3817
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3817 WPP_ANNOTATE_USBAudioConfiguration_cpp3817_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3817
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3817 WPP_ANNOTATE_USBAudioConfiguration_cpp3817_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3817", \
    L"{", \
    L"usbAudioInterface->GetInterfaceNumber(), ItemLong -- 10" , \
    L"usbAudioInterface->GetAlternateSetting(), ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3817

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3818_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 310 \"%0 - validBitsPerSample %10!u!, nearestSupportedValidBitsPerSample %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3818_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 310 \"%0 - validBitsPerSample %10!u!, nearestSupportedValidBitsPerSample %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3818
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3818 WPP_ANNOTATE_USBAudioConfiguration_cpp3818_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3818
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3818 WPP_ANNOTATE_USBAudioConfiguration_cpp3818_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3818", \
    L"{", \
    L"validBitsPerSample, ItemLong -- 10" , \
    L"nearestSupportedValidBitsPerSample, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3818

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3872_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 311 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3872_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 311 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3872
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3872 WPP_ANNOTATE_USBAudioConfiguration_cpp3872_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3872
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3872 WPP_ANNOTATE_USBAudioConfiguration_cpp3872_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3872", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3872

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3946_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 312 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3946_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 312 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3946
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3946 WPP_ANNOTATE_USBAudioConfiguration_cpp3946_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3946
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3946 WPP_ANNOTATE_USBAudioConfiguration_cpp3946_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3946", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3946

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3961_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 313 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=usbAudioStreamInterface->QueryCurrentAttributeAll(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3961_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 313 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=usbAudioStreamInterface->QueryCurrentAttributeAll(deviceContext)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3961
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3961 WPP_ANNOTATE_USBAudioConfiguration_cpp3961_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3961
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3961 WPP_ANNOTATE_USBAudioConfiguration_cpp3961_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3961", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3961

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3967_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 314 \"%0 - index %10!u!, validAlternateSettingMap 0x%11!x!, is valid alternate setting %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3967_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 314 \"%0 - index %10!u!, validAlternateSettingMap 0x%11!x!, is valid alternate setting %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3967
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3967 WPP_ANNOTATE_USBAudioConfiguration_cpp3967_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3967
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3967 WPP_ANNOTATE_USBAudioConfiguration_cpp3967_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3967", \
    L"{", \
    L"index, ItemLong -- 10" , \
    L"validAlternateSettingMap, ItemLong -- 11" , \
    L"USBAudio2StreamInterface::IsValidAlternateSetting(validAlternateSettingMap. (UCHAR)index), ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3967

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3982_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 315 \"%0 - interface %10!u!, alternate setting %11!u!, index %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3982_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 315 \"%0 - interface %10!u!, alternate setting %11!u!, index %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3982
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3982 WPP_ANNOTATE_USBAudioConfiguration_cpp3982_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3982
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3982 WPP_ANNOTATE_USBAudioConfiguration_cpp3982_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3982", \
    L"{", \
    L"usbAudioStreamInterface->GetInterfaceNumber(), ItemLong -- 10" , \
    L"usbAudioStreamInterface->GetAlternateSetting(), ItemLong -- 11" , \
    L"index, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3982

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3985_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 316 \"%0 - bytes per sample %10!u! , desired bytes per sample %11!u!, valid bits per sample %12!u!, desired valid bits per sample %13!u!, channels %14!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3985_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 316 \"%0 - bytes per sample %10!u! , desired bytes per sample %11!u!, valid bits per sample %12!u!, desired valid bits per sample %13!u!, channels %14!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3985
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3985 WPP_ANNOTATE_USBAudioConfiguration_cpp3985_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"Arg, ItemLong -- 14" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3985
# define WPP_ANNOTATE_USBAudioConfiguration_cpp3985 WPP_ANNOTATE_USBAudioConfiguration_cpp3985_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp3985", \
    L"{", \
    L"usbAudioStreamInterface->GetBytesPerSample(), ItemLong -- 10" , \
    L"desiredBytesPerSample, ItemLong -- 11" , \
    L"usbAudioStreamInterface->GetValidBitsPerSample(), ItemLong -- 12" , \
    L"desiredValidBitsPerSample, ItemLong -- 13" , \
    L"usbAudioStreamInterface->GetCurrentChannels(), ItemLong -- 14" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp3985

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4022_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 317 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4022_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 317 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4022
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4022 WPP_ANNOTATE_USBAudioConfiguration_cpp4022_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4022
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4022 WPP_ANNOTATE_USBAudioConfiguration_cpp4022_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4022", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4022

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4040_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 318 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4040_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 318 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4040
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4040 WPP_ANNOTATE_USBAudioConfiguration_cpp4040_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4040
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4040 WPP_ANNOTATE_USBAudioConfiguration_cpp4040_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4040", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4040

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4047_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 319 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4047_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 319 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4047
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4047 WPP_ANNOTATE_USBAudioConfiguration_cpp4047_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4047
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4047 WPP_ANNOTATE_USBAudioConfiguration_cpp4047_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4047", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4047

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4065_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 320 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4065_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 320 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4065
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4065 WPP_ANNOTATE_USBAudioConfiguration_cpp4065_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4065
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4065 WPP_ANNOTATE_USBAudioConfiguration_cpp4065_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4065", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4065

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4073_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 321 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4073_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 321 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4073
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4073 WPP_ANNOTATE_USBAudioConfiguration_cpp4073_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4073
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4073 WPP_ANNOTATE_USBAudioConfiguration_cpp4073_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4073", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4073

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4093_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 322 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=m_usbAudioAlternateInterfaces.Get(0, usbAudioInterface)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4093_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 322 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=m_usbAudioAlternateInterfaces.Get(0, usbAudioInterface)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4093
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4093 WPP_ANNOTATE_USBAudioConfiguration_cpp4093_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4093
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4093 WPP_ANNOTATE_USBAudioConfiguration_cpp4093_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4093", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4093

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4114_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 323 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=m_usbAudioAlternateInterfaces.Get(0, usbAudioInterface)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4114_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 323 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=m_usbAudioAlternateInterfaces.Get(0, usbAudioInterface)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4114
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4114 WPP_ANNOTATE_USBAudioConfiguration_cpp4114_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4114
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4114 WPP_ANNOTATE_USBAudioConfiguration_cpp4114_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4114", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4114

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4130_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 324 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4130_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 324 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4130
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4130 WPP_ANNOTATE_USBAudioConfiguration_cpp4130_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4130
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4130 WPP_ANNOTATE_USBAudioConfiguration_cpp4130_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4130", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4130

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4134_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 325 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4134_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 325 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4134
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4134 WPP_ANNOTATE_USBAudioConfiguration_cpp4134_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4134
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4134 WPP_ANNOTATE_USBAudioConfiguration_cpp4134_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4134", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4134

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4146_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 326 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4146_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 326 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4146
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4146 WPP_ANNOTATE_USBAudioConfiguration_cpp4146_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4146
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4146 WPP_ANNOTATE_USBAudioConfiguration_cpp4146_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4146", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4146

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4148_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 327 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4148_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 327 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4148
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4148 WPP_ANNOTATE_USBAudioConfiguration_cpp4148_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4148
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4148 WPP_ANNOTATE_USBAudioConfiguration_cpp4148_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4148", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4148

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4157_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 328 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4157_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 328 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4157
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4157 WPP_ANNOTATE_USBAudioConfiguration_cpp4157_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4157
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4157 WPP_ANNOTATE_USBAudioConfiguration_cpp4157_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4157", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4157

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4166_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 329 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4166_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 329 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4166
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4166 WPP_ANNOTATE_USBAudioConfiguration_cpp4166_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4166
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4166 WPP_ANNOTATE_USBAudioConfiguration_cpp4166_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4166", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4166

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4178_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 330 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4178_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 330 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4178
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4178 WPP_ANNOTATE_USBAudioConfiguration_cpp4178_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4178
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4178 WPP_ANNOTATE_USBAudioConfiguration_cpp4178_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4178", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4178

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4180_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 331 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4180_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 331 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4180
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4180 WPP_ANNOTATE_USBAudioConfiguration_cpp4180_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4180
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4180 WPP_ANNOTATE_USBAudioConfiguration_cpp4180_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4180", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4180

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4181_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 332 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor->bLength < NS_USBAudio::SIZE_OF_USB_INTERFACE_DESCRIPTOR RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4181_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 332 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor->bLength < NS_USBAudio::SIZE_OF_USB_INTERFACE_DESCRIPTOR RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4181
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4181 WPP_ANNOTATE_USBAudioConfiguration_cpp4181_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4181
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4181 WPP_ANNOTATE_USBAudioConfiguration_cpp4181_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4181", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4181

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4182_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 333 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor->bInterfaceNumber >= m_usbConfigurationDescriptor->bNumInterfaces RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4182_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 333 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor->bInterfaceNumber >= m_usbConfigurationDescriptor->bNumInterfaces RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4182
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4182 WPP_ANNOTATE_USBAudioConfiguration_cpp4182_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4182
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4182 WPP_ANNOTATE_USBAudioConfiguration_cpp4182_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4182", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4182

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4239_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 334 \"%0ERROR:StoreInterface failed - status=%10!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=status" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4239_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 334 \"%0ERROR:StoreInterface failed - status=%10!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=status" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4239
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4239 WPP_ANNOTATE_USBAudioConfiguration_cpp4239_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4239
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4239 WPP_ANNOTATE_USBAudioConfiguration_cpp4239_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4239", \
    L"{", \
    L"__statusRet, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4239

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4242_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 335 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4242_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 335 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4242
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4242 WPP_ANNOTATE_USBAudioConfiguration_cpp4242_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4242
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4242 WPP_ANNOTATE_USBAudioConfiguration_cpp4242_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4242", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4242

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4256_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 336 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4256_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 336 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4256
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4256 WPP_ANNOTATE_USBAudioConfiguration_cpp4256_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4256
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4256 WPP_ANNOTATE_USBAudioConfiguration_cpp4256_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4256", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4256

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4268_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 337 \"%0<VID %10!04x!>\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4268_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 337 \"%0<VID %10!04x!>\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4268
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4268 WPP_ANNOTATE_USBAudioConfiguration_cpp4268_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4268
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4268 WPP_ANNOTATE_USBAudioConfiguration_cpp4268_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4268", \
    L"{", \
    L"m_usbDeviceDescriptor->idVendor, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4268

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4269_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 338 \"%0<PID %10!04x!>\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4269_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 338 \"%0<PID %10!04x!>\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4269
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4269 WPP_ANNOTATE_USBAudioConfiguration_cpp4269_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4269
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4269 WPP_ANNOTATE_USBAudioConfiguration_cpp4269_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4269", \
    L"{", \
    L"m_usbDeviceDescriptor->idProduct, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4269

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4270_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 339 \"%0<BCD %10!04x!>\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4270_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 339 \"%0<BCD %10!04x!>\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4270
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4270 WPP_ANNOTATE_USBAudioConfiguration_cpp4270_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4270
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4270 WPP_ANNOTATE_USBAudioConfiguration_cpp4270_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4270", \
    L"{", \
    L"m_usbDeviceDescriptor->bcdDevice, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4270

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4271_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 340 \"%0 - interface %10!u!, alternate %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4271_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 340 \"%0 - interface %10!u!, alternate %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4271
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4271 WPP_ANNOTATE_USBAudioConfiguration_cpp4271_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4271
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4271 WPP_ANNOTATE_USBAudioConfiguration_cpp4271_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4271", \
    L"{", \
    L"(ULONG)descriptor->bInterfaceNumber, ItemLong -- 10" , \
    L"(ULONG)descriptor->bAlternateSetting, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4271

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4272_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 341 \"%0 - interface class %10!u!, interface sub class %11!u!, interface protocol %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4272_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 341 \"%0 - interface class %10!u!, interface sub class %11!u!, interface protocol %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4272
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4272 WPP_ANNOTATE_USBAudioConfiguration_cpp4272_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4272
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4272 WPP_ANNOTATE_USBAudioConfiguration_cpp4272_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4272", \
    L"{", \
    L"(ULONG)descriptor->bInterfaceClass, ItemLong -- 10" , \
    L"(ULONG)descriptor->bInterfaceSubClass, ItemLong -- 11" , \
    L"(ULONG)descriptor->bInterfaceProtocol, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4272

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4282_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 342 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4282_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 342 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4282
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4282 WPP_ANNOTATE_USBAudioConfiguration_cpp4282_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4282
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4282 WPP_ANNOTATE_USBAudioConfiguration_cpp4282_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4282", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4282

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4296_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 343 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4296_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 343 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4296
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4296 WPP_ANNOTATE_USBAudioConfiguration_cpp4296_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4296
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4296 WPP_ANNOTATE_USBAudioConfiguration_cpp4296_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4296", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4296

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4298_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 344 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4298_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 344 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4298
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4298 WPP_ANNOTATE_USBAudioConfiguration_cpp4298_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4298
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4298 WPP_ANNOTATE_USBAudioConfiguration_cpp4298_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4298", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4298

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4299_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 345 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor->bLength < NS_USBAudio::SIZE_OF_USB_ENDPOINT_DESCRIPTOR RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4299_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 345 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor->bLength < NS_USBAudio::SIZE_OF_USB_ENDPOINT_DESCRIPTOR RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4299
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4299 WPP_ANNOTATE_USBAudioConfiguration_cpp4299_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4299
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4299 WPP_ANNOTATE_USBAudioConfiguration_cpp4299_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4299", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4299

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4310_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 346 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4310_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 346 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4310
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4310 WPP_ANNOTATE_USBAudioConfiguration_cpp4310_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4310
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4310 WPP_ANNOTATE_USBAudioConfiguration_cpp4310_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4310", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4310

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4324_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 347 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4324_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 347 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4324
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4324 WPP_ANNOTATE_USBAudioConfiguration_cpp4324_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4324
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4324 WPP_ANNOTATE_USBAudioConfiguration_cpp4324_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4324", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4324

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4326_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 348 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4326_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 348 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4326
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4326 WPP_ANNOTATE_USBAudioConfiguration_cpp4326_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4326
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4326 WPP_ANNOTATE_USBAudioConfiguration_cpp4326_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4326", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4326

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4327_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 349 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor->bLength < NS_USBAudio::SIZE_OF_USB_SSENDPOINT_COMPANION_DESCRIPTOR RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4327_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 349 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=descriptor->bLength < NS_USBAudio::SIZE_OF_USB_SSENDPOINT_COMPANION_DESCRIPTOR RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4327
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4327 WPP_ANNOTATE_USBAudioConfiguration_cpp4327_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4327
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4327 WPP_ANNOTATE_USBAudioConfiguration_cpp4327_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4327", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4327

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4334_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 350 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4334_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 350 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4334
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4334 WPP_ANNOTATE_USBAudioConfiguration_cpp4334_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4334
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4334 WPP_ANNOTATE_USBAudioConfiguration_cpp4334_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4334", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4334

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4348_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 351 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4348_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 351 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4348
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4348 WPP_ANNOTATE_USBAudioConfiguration_cpp4348_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4348
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4348 WPP_ANNOTATE_USBAudioConfiguration_cpp4348_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4348", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4348

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4419_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 352 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4419_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 352 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4419
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4419 WPP_ANNOTATE_USBAudioConfiguration_cpp4419_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4419
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4419 WPP_ANNOTATE_USBAudioConfiguration_cpp4419_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4419", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4419

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4433_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 353 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4433_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 353 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4433
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4433 WPP_ANNOTATE_USBAudioConfiguration_cpp4433_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4433
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4433 WPP_ANNOTATE_USBAudioConfiguration_cpp4433_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4433", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4433

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4439_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 354 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4439_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 354 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4439
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4439 WPP_ANNOTATE_USBAudioConfiguration_cpp4439_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4439
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4439 WPP_ANNOTATE_USBAudioConfiguration_cpp4439_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4439", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4439

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4454_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 355 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4454_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 355 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4454
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4454 WPP_ANNOTATE_USBAudioConfiguration_cpp4454_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4454
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4454 WPP_ANNOTATE_USBAudioConfiguration_cpp4454_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4454", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4454

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4460_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 356 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=m_usbAudioInterfaceInfoes[interfaceIndex]->SetCurrentSampleFrequency(deviceContext, desiredSampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4460_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 356 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=m_usbAudioInterfaceInfoes[interfaceIndex]->SetCurrentSampleFrequency(deviceContext, desiredSampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4460
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4460 WPP_ANNOTATE_USBAudioConfiguration_cpp4460_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4460
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4460 WPP_ANNOTATE_USBAudioConfiguration_cpp4460_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4460", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4460

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4464_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 357 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4464_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 357 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4464
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4464 WPP_ANNOTATE_USBAudioConfiguration_cpp4464_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4464
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4464 WPP_ANNOTATE_USBAudioConfiguration_cpp4464_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4464", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4464

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4479_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 358 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4479_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 358 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4479
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4479 WPP_ANNOTATE_USBAudioConfiguration_cpp4479_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4479
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4479 WPP_ANNOTATE_USBAudioConfiguration_cpp4479_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4479", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4479

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4486_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 359 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=m_usbAudioInterfaceInfoes[interfaceIndex]->GetCurrentSampleFrequency(deviceContext, sampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4486_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 359 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=m_usbAudioInterfaceInfoes[interfaceIndex]->GetCurrentSampleFrequency(deviceContext, sampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4486
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4486 WPP_ANNOTATE_USBAudioConfiguration_cpp4486_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4486
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4486 WPP_ANNOTATE_USBAudioConfiguration_cpp4486_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4486", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4486

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4490_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 360 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4490_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 360 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4490
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4490 WPP_ANNOTATE_USBAudioConfiguration_cpp4490_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4490
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4490 WPP_ANNOTATE_USBAudioConfiguration_cpp4490_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4490", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4490

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4512_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 361 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4512_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 361 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4512
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4512 WPP_ANNOTATE_USBAudioConfiguration_cpp4512_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4512
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4512 WPP_ANNOTATE_USBAudioConfiguration_cpp4512_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4512", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4512

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4513_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 362 \"%0 - %10!s! format type %11!u!, format %12!u!, bytes per sample %13!u!, valid bits per sample %14!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4513_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 362 \"%0 - %10!s! format type %11!u!, format %12!u!, bytes per sample %13!u!, valid bits per sample %14!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4513
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4513 WPP_ANNOTATE_USBAudioConfiguration_cpp4513_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemListLong(false,true) -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"Arg, ItemLong -- 14" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4513
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4513 WPP_ANNOTATE_USBAudioConfiguration_cpp4513_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4513", \
    L"{", \
    L"isInput, ItemListLong(false,true) -- 10" , \
    L"desiredFormatType, ItemLong -- 11" , \
    L"desiredFormat, ItemLong -- 12" , \
    L"desiredBytesPerSample, ItemLong -- 13" , \
    L"desiredValidBitsPerSample, ItemLong -- 14" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4513

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4545_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 363 \"%0 - current bytes per sample %10!u!, %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4545_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 363 \"%0 - current bytes per sample %10!u!, %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4545
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4545 WPP_ANNOTATE_USBAudioConfiguration_cpp4545_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4545
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4545 WPP_ANNOTATE_USBAudioConfiguration_cpp4545_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4545", \
    L"{", \
    L"currentSettings.BytesPerSample, ItemLong -- 10" , \
    L"m_deviceContext->AudioProperty.InputBytesPerSample, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4545

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4546_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 364 \"%0 - current valid bits per sample %10!u!, %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4546_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 364 \"%0 - current valid bits per sample %10!u!, %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4546
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4546 WPP_ANNOTATE_USBAudioConfiguration_cpp4546_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4546
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4546 WPP_ANNOTATE_USBAudioConfiguration_cpp4546_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4546", \
    L"{", \
    L"currentSettings.ValidBitsPerSample, ItemLong -- 10" , \
    L"m_deviceContext->AudioProperty.InputValidBitsPerSample, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4546

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4565_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 365 \"%0 - current bytes per sample %10!u!, %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4565_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 365 \"%0 - current bytes per sample %10!u!, %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4565
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4565 WPP_ANNOTATE_USBAudioConfiguration_cpp4565_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4565
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4565 WPP_ANNOTATE_USBAudioConfiguration_cpp4565_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4565", \
    L"{", \
    L"currentSettings.BytesPerSample, ItemLong -- 10" , \
    L"m_deviceContext->AudioProperty.OutputBytesPerSample, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4565

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4566_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 366 \"%0 - current valid bits per sample %10!u!, %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4566_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 366 \"%0 - current valid bits per sample %10!u!, %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4566
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4566 WPP_ANNOTATE_USBAudioConfiguration_cpp4566_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4566
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4566 WPP_ANNOTATE_USBAudioConfiguration_cpp4566_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4566", \
    L"{", \
    L"currentSettings.ValidBitsPerSample, ItemLong -- 10" , \
    L"m_deviceContext->AudioProperty.OutputValidBitsPerSample, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4566

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4599_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 367 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4599_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 367 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4599
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4599 WPP_ANNOTATE_USBAudioConfiguration_cpp4599_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4599
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4599 WPP_ANNOTATE_USBAudioConfiguration_cpp4599_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4599", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4599

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4635_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 368 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4635_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 368 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4635
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4635 WPP_ANNOTATE_USBAudioConfiguration_cpp4635_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4635
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4635 WPP_ANNOTATE_USBAudioConfiguration_cpp4635_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4635", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4635

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4639_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 369 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbConfigurationDescriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4639_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 369 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbConfigurationDescriptor == nullptr RETSTATUS=STATUS_INVALID_PARAMETER" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4639
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4639 WPP_ANNOTATE_USBAudioConfiguration_cpp4639_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4639
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4639 WPP_ANNOTATE_USBAudioConfiguration_cpp4639_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4639", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4639

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4640_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 370 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbConfigurationDescriptor->bNumInterfaces == 0 RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4640_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 370 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbConfigurationDescriptor->bNumInterfaces == 0 RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4640
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4640 WPP_ANNOTATE_USBAudioConfiguration_cpp4640_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4640
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4640 WPP_ANNOTATE_USBAudioConfiguration_cpp4640_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4640", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4640

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4641_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 371 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbAudioInterfaceInfoes != nullptr RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4641_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 371 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbAudioInterfaceInfoes != nullptr RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4641
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4641 WPP_ANNOTATE_USBAudioConfiguration_cpp4641_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4641
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4641 WPP_ANNOTATE_USBAudioConfiguration_cpp4641_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4641", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4641

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4643_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 372 \"%0 - bLength             = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4643_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 372 \"%0 - bLength             = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4643
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4643 WPP_ANNOTATE_USBAudioConfiguration_cpp4643_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4643
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4643 WPP_ANNOTATE_USBAudioConfiguration_cpp4643_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4643", \
    L"{", \
    L"m_usbConfigurationDescriptor->bLength, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4643

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4644_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 373 \"%0 - bDescriptorType     = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4644_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 373 \"%0 - bDescriptorType     = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4644
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4644 WPP_ANNOTATE_USBAudioConfiguration_cpp4644_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4644
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4644 WPP_ANNOTATE_USBAudioConfiguration_cpp4644_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4644", \
    L"{", \
    L"m_usbConfigurationDescriptor->bDescriptorType, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4644

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4645_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 374 \"%0 - wTotalLength        = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4645_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 374 \"%0 - wTotalLength        = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4645
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4645 WPP_ANNOTATE_USBAudioConfiguration_cpp4645_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4645
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4645 WPP_ANNOTATE_USBAudioConfiguration_cpp4645_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4645", \
    L"{", \
    L"m_usbConfigurationDescriptor->wTotalLength, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4645

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4646_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 375 \"%0 - bNumInterfaces      = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4646_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 375 \"%0 - bNumInterfaces      = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4646
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4646 WPP_ANNOTATE_USBAudioConfiguration_cpp4646_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4646
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4646 WPP_ANNOTATE_USBAudioConfiguration_cpp4646_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4646", \
    L"{", \
    L"m_usbConfigurationDescriptor->bNumInterfaces, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4646

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4647_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 376 \"%0 - bConfigurationValue = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4647_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 376 \"%0 - bConfigurationValue = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4647
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4647 WPP_ANNOTATE_USBAudioConfiguration_cpp4647_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4647
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4647 WPP_ANNOTATE_USBAudioConfiguration_cpp4647_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4647", \
    L"{", \
    L"m_usbConfigurationDescriptor->bConfigurationValue, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4647

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4648_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 377 \"%0 - iConfiguration      = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4648_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 377 \"%0 - iConfiguration      = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4648
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4648 WPP_ANNOTATE_USBAudioConfiguration_cpp4648_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4648
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4648 WPP_ANNOTATE_USBAudioConfiguration_cpp4648_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4648", \
    L"{", \
    L"m_usbConfigurationDescriptor->iConfiguration, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4648

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4649_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 378 \"%0 - bmAttributes        = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4649_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 378 \"%0 - bmAttributes        = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4649
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4649 WPP_ANNOTATE_USBAudioConfiguration_cpp4649_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4649
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4649 WPP_ANNOTATE_USBAudioConfiguration_cpp4649_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4649", \
    L"{", \
    L"m_usbConfigurationDescriptor->bmAttributes, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4649

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4650_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 379 \"%0 - MaxPower            = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4650_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 379 \"%0 - MaxPower            = %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4650
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4650 WPP_ANNOTATE_USBAudioConfiguration_cpp4650_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4650
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4650 WPP_ANNOTATE_USBAudioConfiguration_cpp4650_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4650", \
    L"{", \
    L"m_usbConfigurationDescriptor->MaxPower, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4650

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4655_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 380 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=WdfMemoryCreate(&attributes, NonPagedPoolNx, DRIVER_TAG, sizeof(USBAudioInterfaceInfo *) * m_usbConfigurationDescriptor->bNumInterfaces, &m_usbAudioInterfaceInfoesMemory, (PVOID *)&m_usbAudioInterfaceInfoes)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4655_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 380 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=WdfMemoryCreate(&attributes, NonPagedPoolNx, DRIVER_TAG, sizeof(USBAudioInterfaceInfo *) * m_usbConfigurationDescriptor->bNumInterfaces, &m_usbAudioInterfaceInfoesMemory, (PVOID *)&m_usbAudioInterfaceInfoes)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4655
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4655 WPP_ANNOTATE_USBAudioConfiguration_cpp4655_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4655
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4655 WPP_ANNOTATE_USBAudioConfiguration_cpp4655_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4655", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4655

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4684_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 381 \"%0Get DeviceName  failed %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4684_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 381 \"%0Get DeviceName  failed %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4684
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4684 WPP_ANNOTATE_USBAudioConfiguration_cpp4684_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4684
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4684 WPP_ANNOTATE_USBAudioConfiguration_cpp4684_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4684", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4684

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4735_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 382 \"%0 bDescriptionType %10!u!, 0x%11!x!, %12!u!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4735_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 382 \"%0 bDescriptionType %10!u!, 0x%11!x!, %12!u!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4735
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4735 WPP_ANNOTATE_USBAudioConfiguration_cpp4735_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4735
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4735 WPP_ANNOTATE_USBAudioConfiguration_cpp4735_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4735", \
    L"{", \
    L"current, ItemLong -- 10" , \
    L"commonDescriptor->bDescriptorType, ItemLong -- 11" , \
    L"commonDescriptor->bLength, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4735

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4741_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 383 \"%0USB Descriptor Header is invalid\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4741_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 383 \"%0USB Descriptor Header is invalid\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4741
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4741 WPP_ANNOTATE_USBAudioConfiguration_cpp4741_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4741
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4741 WPP_ANNOTATE_USBAudioConfiguration_cpp4741_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4741", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4741

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4759_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 384 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4759_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 384 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4759
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4759 WPP_ANNOTATE_USBAudioConfiguration_cpp4759_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4759
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4759 WPP_ANNOTATE_USBAudioConfiguration_cpp4759_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4759", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4759

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4785_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 385 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4785_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 385 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4785
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4785 WPP_ANNOTATE_USBAudioConfiguration_cpp4785_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4785
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4785 WPP_ANNOTATE_USBAudioConfiguration_cpp4785_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4785", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4785

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4787_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 386 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbAudioInterfaceInfoes == nullptr RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4787_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 386 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbAudioInterfaceInfoes == nullptr RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4787
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4787 WPP_ANNOTATE_USBAudioConfiguration_cpp4787_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4787
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4787 WPP_ANNOTATE_USBAudioConfiguration_cpp4787_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4787", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4787

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4798_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 387 \"%0 QueryRangeAttributeAll failed %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4798_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 387 \"%0 QueryRangeAttributeAll failed %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4798
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4798 WPP_ANNOTATE_USBAudioConfiguration_cpp4798_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4798
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4798 WPP_ANNOTATE_USBAudioConfiguration_cpp4798_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4798", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4798

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4817_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 388 \"%0 QueryCurrentAttributeAll failed %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4817_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 388 \"%0 QueryCurrentAttributeAll failed %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4817
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4817 WPP_ANNOTATE_USBAudioConfiguration_cpp4817_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4817
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4817 WPP_ANNOTATE_USBAudioConfiguration_cpp4817_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4817", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4817

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4824_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 389 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4824_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 389 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4824
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4824 WPP_ANNOTATE_USBAudioConfiguration_cpp4824_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4824
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4824 WPP_ANNOTATE_USBAudioConfiguration_cpp4824_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4824", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4824

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4838_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 390 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4838_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 390 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4838
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4838 WPP_ANNOTATE_USBAudioConfiguration_cpp4838_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4838
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4838 WPP_ANNOTATE_USBAudioConfiguration_cpp4838_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4838", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4838

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4840_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 391 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbAudioInterfaceInfoes == nullptr RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4840_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 391 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_usbAudioInterfaceInfoes == nullptr RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4840
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4840 WPP_ANNOTATE_USBAudioConfiguration_cpp4840_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4840
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4840 WPP_ANNOTATE_USBAudioConfiguration_cpp4840_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4840", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4840

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4842_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 392 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentSampleFrequency(m_deviceContext, sampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4842_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 392 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentSampleFrequency(m_deviceContext, sampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4842
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4842 WPP_ANNOTATE_USBAudioConfiguration_cpp4842_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4842
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4842 WPP_ANNOTATE_USBAudioConfiguration_cpp4842_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4842", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4842

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4851_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 393 \"%0 - desired sample rate %10!u!, updated sample rate %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4851_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 393 \"%0 - desired sample rate %10!u!, updated sample rate %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4851
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4851 WPP_ANNOTATE_USBAudioConfiguration_cpp4851_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4851
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4851 WPP_ANNOTATE_USBAudioConfiguration_cpp4851_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4851", \
    L"{", \
    L"c_SampleRateList[sampleRateListIndex], ItemLong -- 10" , \
    L"updatedSampleRate, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4851

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4871_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 394 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4871_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 394 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4871
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4871 WPP_ANNOTATE_USBAudioConfiguration_cpp4871_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4871
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4871 WPP_ANNOTATE_USBAudioConfiguration_cpp4871_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4871", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4871

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4911_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 395 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4911_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 395 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4911
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4911 WPP_ANNOTATE_USBAudioConfiguration_cpp4911_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4911
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4911 WPP_ANNOTATE_USBAudioConfiguration_cpp4911_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4911", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4911

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4912_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 396 \"%0 - desired sample rate %10!u!, format type %11!u!, format %12!u!, in bytes per sample %13!u!, in valid bits per sample %14!u!, in bytes per sample %15!u!, in valid bits per sample %16!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4912_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 396 \"%0 - desired sample rate %10!u!, format type %11!u!, format %12!u!, in bytes per sample %13!u!, in valid bits per sample %14!u!, in bytes per sample %15!u!, in valid bits per sample %16!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4912
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4912 WPP_ANNOTATE_USBAudioConfiguration_cpp4912_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"Arg, ItemLong -- 14" , \
    L"Arg, ItemLong -- 15" , \
    L"Arg, ItemLong -- 16" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4912
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4912 WPP_ANNOTATE_USBAudioConfiguration_cpp4912_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4912", \
    L"{", \
    L"desiredSampleRate, ItemLong -- 10" , \
    L"desiredFormatType, ItemLong -- 11" , \
    L"desiredFormat, ItemLong -- 12" , \
    L"inputDesiredBytesPerSample, ItemLong -- 13" , \
    L"inputDesiredValidBitsPerSample, ItemLong -- 14" , \
    L"outputDesiredBytesPerSample, ItemLong -- 15" , \
    L"outputDesiredValidBitsPerSample, ItemLong -- 16" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4912

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4914_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 397 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_deviceContext->AudioProperty.PacketsPerSec == 0 RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4914_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 397 \"%0 File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog POSCOND=m_deviceContext->AudioProperty.PacketsPerSec == 0 RETSTATUS=STATUS_UNSUCCESSFUL" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4914
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4914 WPP_ANNOTATE_USBAudioConfiguration_cpp4914_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4914
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4914 WPP_ANNOTATE_USBAudioConfiguration_cpp4914_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4914", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4914

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4916_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 398 \"%0 - input    SelectedAlternateSettings %10!u!, NumberConfiguredPipes %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DEVICE" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4916_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 398 \"%0 - input    SelectedAlternateSettings %10!u!, NumberConfiguredPipes %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DEVICE" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4916
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4916 WPP_ANNOTATE_USBAudioConfiguration_cpp4916_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4916
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4916 WPP_ANNOTATE_USBAudioConfiguration_cpp4916_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4916", \
    L"{", \
    L"m_deviceContext->InputInterfaceAndPipe.SelectedAlternateSetting, ItemLong -- 10" , \
    L"m_deviceContext->InputInterfaceAndPipe.NumberConfiguredPipes, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4916

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4917_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 399 \"%0 - output   SelectedAlternateSettings %10!u!, NumberConfiguredPipes %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DEVICE" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4917_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 399 \"%0 - output   SelectedAlternateSettings %10!u!, NumberConfiguredPipes %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DEVICE" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4917
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4917 WPP_ANNOTATE_USBAudioConfiguration_cpp4917_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4917
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4917 WPP_ANNOTATE_USBAudioConfiguration_cpp4917_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4917", \
    L"{", \
    L"m_deviceContext->OutputInterfaceAndPipe.SelectedAlternateSetting, ItemLong -- 10" , \
    L"m_deviceContext->OutputInterfaceAndPipe.NumberConfiguredPipes, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4917

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4918_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 400 \"%0 - feedback SelectedAlternateSettings %10!u!, NumberConfiguredPipes %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DEVICE" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4918_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 400 \"%0 - feedback SelectedAlternateSettings %10!u!, NumberConfiguredPipes %11!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DEVICE" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4918
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4918 WPP_ANNOTATE_USBAudioConfiguration_cpp4918_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4918
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4918 WPP_ANNOTATE_USBAudioConfiguration_cpp4918_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4918", \
    L"{", \
    L"m_deviceContext->FeedbackInterfaceAndPipe.SelectedAlternateSetting, ItemLong -- 10" , \
    L"m_deviceContext->FeedbackInterfaceAndPipe.NumberConfiguredPipes, ItemLong -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4918

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4921_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 401 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentSampleFrequency(m_deviceContext, sampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4921_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 401 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetCurrentSampleFrequency(m_deviceContext, sampleRate)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4921
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4921 WPP_ANNOTATE_USBAudioConfiguration_cpp4921_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4921
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4921 WPP_ANNOTATE_USBAudioConfiguration_cpp4921_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4921", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4921

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4935_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 402 \"%0 - current sample rate %10!u!, desired sample rate %11!u!, updated sample rate %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4935_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 402 \"%0 - current sample rate %10!u!, desired sample rate %11!u!, updated sample rate %12!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4935
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4935 WPP_ANNOTATE_USBAudioConfiguration_cpp4935_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4935
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4935 WPP_ANNOTATE_USBAudioConfiguration_cpp4935_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4935", \
    L"{", \
    L"sampleRate, ItemLong -- 10" , \
    L"desiredSampleRate, ItemLong -- 11" , \
    L"updatedSampleRate, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4935

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4940_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 403 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=SelectAlternateInterface(m_deviceContext, true, desiredFormatType, desiredFormat, inputDesiredBytesPerSample, inputDesiredValidBitsPerSample)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4940_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 403 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=SelectAlternateInterface(m_deviceContext, true, desiredFormatType, desiredFormat, inputDesiredBytesPerSample, inputDesiredValidBitsPerSample)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4940
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4940 WPP_ANNOTATE_USBAudioConfiguration_cpp4940_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4940
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4940 WPP_ANNOTATE_USBAudioConfiguration_cpp4940_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4940", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4940

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4943_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 404 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=SelectAlternateInterface(m_deviceContext, false, desiredFormatType, desiredFormat, outputDesiredBytesPerSample, outputDesiredValidBitsPerSample)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4943_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 404 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=SelectAlternateInterface(m_deviceContext, false, desiredFormatType, desiredFormat, outputDesiredBytesPerSample, outputDesiredValidBitsPerSample)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4943
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4943 WPP_ANNOTATE_USBAudioConfiguration_cpp4943_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4943
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4943 WPP_ANNOTATE_USBAudioConfiguration_cpp4943_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4943", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4943

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4956_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 405 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4956_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 405 \"%0%!FUNC! Exit %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4956
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4956 WPP_ANNOTATE_USBAudioConfiguration_cpp4956_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4956
# define WPP_ANNOTATE_USBAudioConfiguration_cpp4956 WPP_ANNOTATE_USBAudioConfiguration_cpp4956_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp4956", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp4956

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5063_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 406 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5063_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 406 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5063
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5063 WPP_ANNOTATE_USBAudioConfiguration_cpp5063_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5063
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5063 WPP_ANNOTATE_USBAudioConfiguration_cpp5063_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5063", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5063

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5081_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 407 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetChannelName(isInput, channel, leftMemory, leftChannelName)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5081_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 407 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetChannelName(isInput, channel, leftMemory, leftChannelName)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5081
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5081 WPP_ANNOTATE_USBAudioConfiguration_cpp5081_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5081
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5081 WPP_ANNOTATE_USBAudioConfiguration_cpp5081_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5081", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5081

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5082_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 408 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetChannelName(isInput, channel + 1, rightMemory, rightChannelName)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5082_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 408 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetChannelName(isInput, channel + 1, rightMemory, rightChannelName)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5082
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5082 WPP_ANNOTATE_USBAudioConfiguration_cpp5082_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5082
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5082 WPP_ANNOTATE_USBAudioConfiguration_cpp5082_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5082", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5082

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5088_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 409 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=RtlStringCbLengthW(leftChannelName, bufferSize, &nameLength)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5088_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 409 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=RtlStringCbLengthW(leftChannelName, bufferSize, &nameLength)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5088
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5088 WPP_ANNOTATE_USBAudioConfiguration_cpp5088_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5088
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5088 WPP_ANNOTATE_USBAudioConfiguration_cpp5088_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5088", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5088

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5092_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 410 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=RtlStringCbLengthW(rightChannelName, bufferSize, &nameLength)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5092_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 410 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=RtlStringCbLengthW(rightChannelName, bufferSize, &nameLength)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5092
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5092 WPP_ANNOTATE_USBAudioConfiguration_cpp5092_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5092
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5092 WPP_ANNOTATE_USBAudioConfiguration_cpp5092_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5092", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5092

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5101_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 411 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=WdfMemoryCreate(&attributes, NonPagedPoolNx, DRIVER_TAG, length * sizeof(WCHAR), &memory, (PVOID *)&channelName)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5101_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 411 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=WdfMemoryCreate(&attributes, NonPagedPoolNx, DRIVER_TAG, length * sizeof(WCHAR), &memory, (PVOID *)&channelName)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5101
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5101 WPP_ANNOTATE_USBAudioConfiguration_cpp5101_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5101
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5101 WPP_ANNOTATE_USBAudioConfiguration_cpp5101_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5101", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5101

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5127_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 412 \"%0 - %10!s! channel %11!d!, %12!s!, %13!s!, %14!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5127_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 412 \"%0 - %10!s! channel %11!d!, %12!s!, %13!s!, %14!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5127
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5127 WPP_ANNOTATE_USBAudioConfiguration_cpp5127_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemListLong(false,true) -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemWString -- 12" , \
    L"Arg, ItemWString -- 13" , \
    L"Arg, ItemWString -- 14" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5127
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5127 WPP_ANNOTATE_USBAudioConfiguration_cpp5127_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5127", \
    L"{", \
    L"isInput, ItemListLong(false,true) -- 10" , \
    L"channel, ItemLong -- 11" , \
    L"leftChannelName, ItemWString -- 12" , \
    L"rightChannelName, ItemWString -- 13" , \
    L"channelName, ItemWString -- 14" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5127

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5129_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 413 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5129_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 413 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5129
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5129 WPP_ANNOTATE_USBAudioConfiguration_cpp5129_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5129
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5129 WPP_ANNOTATE_USBAudioConfiguration_cpp5129_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5129", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5129

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5144_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 414 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5144_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 414 \"%0%!FUNC! Entry\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5144
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5144 WPP_ANNOTATE_USBAudioConfiguration_cpp5144_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5144
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5144 WPP_ANNOTATE_USBAudioConfiguration_cpp5144_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5144", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5144

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5161_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 415 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5161_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 415 \"%0%!FUNC! Exit\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5161
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5161 WPP_ANNOTATE_USBAudioConfiguration_cpp5161_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5161
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5161 WPP_ANNOTATE_USBAudioConfiguration_cpp5161_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5161", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5161

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5186_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 416 \"%0%!FUNC! Entry, %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5186_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 416 \"%0%!FUNC! Entry, %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5186
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5186 WPP_ANNOTATE_USBAudioConfiguration_cpp5186_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemListLong(false,true) -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5186
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5186 WPP_ANNOTATE_USBAudioConfiguration_cpp5186_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5186", \
    L"{", \
    L"isInput, ItemListLong(false,true) -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5186

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5194_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 417 \"%0 - desiredFormatType %10!u!, desiredFormat %11!u!, currentMaxSupportedValidBitsPerSample %12!u!, maxSupportedValidBitsPerSample %13!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5194_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 417 \"%0 - desiredFormatType %10!u!, desiredFormat %11!u!, currentMaxSupportedValidBitsPerSample %12!u!, maxSupportedValidBitsPerSample %13!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5194
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5194 WPP_ANNOTATE_USBAudioConfiguration_cpp5194_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5194
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5194 WPP_ANNOTATE_USBAudioConfiguration_cpp5194_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5194", \
    L"{", \
    L"desiredFormatType, ItemLong -- 10" , \
    L"desiredFormat, ItemLong -- 11" , \
    L"currentMaxSupportedValidBitsPerSample, ItemLong -- 12" , \
    L"maxSupportedValidBitsPerSample, ItemLong -- 13" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5194

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5209_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 418 \"%0%!FUNC! Exit %10!s!, %11!u!, %12!u!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5209_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 418 \"%0%!FUNC! Exit %10!s!, %11!u!, %12!u!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5209
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5209 WPP_ANNOTATE_USBAudioConfiguration_cpp5209_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5209
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5209 WPP_ANNOTATE_USBAudioConfiguration_cpp5209_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5209", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"maxSupportedBytesPerSample, ItemLong -- 11" , \
    L"maxSupportedValidBitsPerSample, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5209

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5232_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 419 \"%0%!FUNC! Entry, %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5232_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 419 \"%0%!FUNC! Entry, %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5232
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5232 WPP_ANNOTATE_USBAudioConfiguration_cpp5232_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemListLong(false,true) -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5232
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5232 WPP_ANNOTATE_USBAudioConfiguration_cpp5232_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5232", \
    L"{", \
    L"isInput, ItemListLong(false,true) -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5232

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5243_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 420 \"%0 - desiredFormatType %10!u!, desiredFormat %11!u!, validBitsPerSample %12!u!, nearestSupportedValidBitsPerSample %13!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5243_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 420 \"%0 - desiredFormatType %10!u!, desiredFormat %11!u!, validBitsPerSample %12!u!, nearestSupportedValidBitsPerSample %13!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5243
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5243 WPP_ANNOTATE_USBAudioConfiguration_cpp5243_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"Arg, ItemLong -- 13" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5243
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5243 WPP_ANNOTATE_USBAudioConfiguration_cpp5243_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5243", \
    L"{", \
    L"desiredFormatType, ItemLong -- 10" , \
    L"desiredFormat, ItemLong -- 11" , \
    L"validBitsPerSample, ItemLong -- 12" , \
    L"nearestSupportedValidBitsPerSample, ItemLong -- 13" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5243

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5296_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 421 \"%0%!FUNC! Exit %10!s!, %11!u!, %12!u!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5296_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 421 \"%0%!FUNC! Exit %10!s!, %11!u!, %12!u!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5296
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5296 WPP_ANNOTATE_USBAudioConfiguration_cpp5296_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemLong -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5296
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5296 WPP_ANNOTATE_USBAudioConfiguration_cpp5296_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5296", \
    L"{", \
    L"status, ItemNTSTATUS -- 10" , \
    L"nearestSupportedBytesPerSample, ItemLong -- 11" , \
    L"nearestSupportedValidBitsPerSample, ItemLong -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5296

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5406_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 422 \"%0ERROR:Could not allocate URB for an open-streams request. - status=%10!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=status" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5406_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 422 \"%0ERROR:Could not allocate URB for an open-streams request. - status=%10!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=status" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5406
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5406 WPP_ANNOTATE_USBAudioConfiguration_cpp5406_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemNTSTATUS -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5406
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5406 WPP_ANNOTATE_USBAudioConfiguration_cpp5406_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5406", \
    L"{", \
    L"__statusRet, ItemNTSTATUS -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5406

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5412_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 423 \"%0The memory size allocated by WdfUsbTargetDeviceCreateUrb is small.\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5412_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 423 \"%0The memory size allocated by WdfUsbTargetDeviceCreateUrb is small.\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5412
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5412 WPP_ANNOTATE_USBAudioConfiguration_cpp5412_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5412
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5412 WPP_ANNOTATE_USBAudioConfiguration_cpp5412_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5412", \
    L"{", \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5412

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5715_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 424 \"%0 - interface %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5715_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 424 \"%0 - interface %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5715
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5715 WPP_ANNOTATE_USBAudioConfiguration_cpp5715_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5715
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5715 WPP_ANNOTATE_USBAudioConfiguration_cpp5715_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5715", \
    L"{", \
    L"interfaceIndex, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5715

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5719_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 425 \"%0 - terminal link %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5719_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 425 \"%0 - terminal link %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5719
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5719 WPP_ANNOTATE_USBAudioConfiguration_cpp5719_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5719
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5719 WPP_ANNOTATE_USBAudioConfiguration_cpp5719_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5719", \
    L"{", \
    L"terminalLink, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5719

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5727_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 426 \"%0 - terminal link %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5727_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 426 \"%0 - terminal link %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5727
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5727 WPP_ANNOTATE_USBAudioConfiguration_cpp5727_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5727
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5727 WPP_ANNOTATE_USBAudioConfiguration_cpp5727_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5727", \
    L"{", \
    L"terminalLink, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5727

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5730_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 427 \"%0 - terminal link %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5730_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 427 \"%0 - terminal link %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5730
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5730 WPP_ANNOTATE_USBAudioConfiguration_cpp5730_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5730
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5730 WPP_ANNOTATE_USBAudioConfiguration_cpp5730_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5730", \
    L"{", \
    L"terminalLink, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5730

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5735_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 428 \"%0 - terminal link %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5735_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 428 \"%0 - terminal link %10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5735
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5735 WPP_ANNOTATE_USBAudioConfiguration_cpp5735_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5735
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5735 WPP_ANNOTATE_USBAudioConfiguration_cpp5735_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5735", \
    L"{", \
    L"terminalLink, ItemLong -- 10" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5735

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5747_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 429 \"%0The topology link is broken or the topology could not be analyzed. terminal link %10!u!, %11!s!\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5747_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 429 \"%0The topology link is broken or the topology could not be analyzed. terminal link %10!u!, %11!s!\" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DESCRIPTOR" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5747
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5747 WPP_ANNOTATE_USBAudioConfiguration_cpp5747_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemLong -- 10" , \
    L"Arg, ItemNTSTATUS -- 11" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5747
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5747 WPP_ANNOTATE_USBAudioConfiguration_cpp5747_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5747", \
    L"{", \
    L"terminalLink, ItemLong -- 10" , \
    L"status, ItemNTSTATUS -- 11" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5747

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5780_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 430 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetStreamChannelInfo(isInput, numOfChannels, terminalType, volumeUnitID, muteUnitID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5780_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 430 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetStreamChannelInfo(isInput, numOfChannels, terminalType, volumeUnitID, muteUnitID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5780
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5780 WPP_ANNOTATE_USBAudioConfiguration_cpp5780_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5780
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5780 WPP_ANNOTATE_USBAudioConfiguration_cpp5780_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5780", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5780

#ifdef WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5800_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    WPP_GUID_WTEXT WPP_USER_MSG_GUID L"uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 431 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetStreamChannelInfo(isInput, numOfChannels, terminalType, volumeUnitID, muteUnitID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#else // WPP_USER_MSG_GUID
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5800_FINAL(P, File, Name, ...) __annotation( \
    L ## P, \
    L"fc8099d9-4f20-3cf5-9e94-82fbe2d99990 uac2-driver // SRC=" _WPPW(File) \
    L" MJ= MN=", \
    L"#typev " _WPPW(Name) \
    L" 431 \"%0ERROR: File:%10!s!, Line:%11!d! - status=%12!s!\" //   LEVEL=LEVEL_ERROR FLAGS=FLAG_DEVICE_ALL IFRLOG=g_AudioDspLog RETSTATUS=GetStreamChannelInfo(isInput, numOfChannels, terminalType, volumeUnitID, muteUnitID)" \
    WPP_FUNC_NAME, \
    __VA_ARGS__)
#endif // WPP_USER_MSG_GUID

#ifdef WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5800
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5800 WPP_ANNOTATE_USBAudioConfiguration_cpp5800_FINAL( \
    "TMF:", \
    "Unknown_cxx00", \
    "Unknown_cxx00", \
    L"{", \
    L"Arg, ItemString -- 10" , \
    L"Arg, ItemLong -- 11" , \
    L"Arg, ItemNTSTATUS -- 12" , \
    L"}", \
    L"PUBLIC_TMF:")
# ifndef WPP_PUBLIC_TMC
#  define WPP_PUBLIC_TMC // Adds "PUBLIC_TMF:" to the control guid annotation
# endif
#else // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5800
# define WPP_ANNOTATE_USBAudioConfiguration_cpp5800 WPP_ANNOTATE_USBAudioConfiguration_cpp5800_FINAL( \
    "TMF:", \
    "USBAudioConfiguration.cpp", \
    "USBAudioConfiguration_cpp5800", \
    L"{", \
    L"__FILE__, ItemString -- 10" , \
    L"__LINE__, ItemLong -- 11" , \
    L"__statusRet, ItemNTSTATUS -- 12" , \
    L"}")
#endif // WPP_PUBLIC_ANNOT_USBAudioConfiguration_cpp5800

# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#endif // WPP_NO_ANNOTATIONS

#ifdef WPP_USER_MSG_GUID

#define WPP_LOCAL_MSG_VAR(Guid) WPP_XGLUE3(WPP_, WPP_GUID_NORM Guid, _Traceguids)

#define WPP_LOCAL_MSG_GUID(Guid) \
extern const __declspec(selectany) GUID WPP_LOCAL_MSG_VAR(Guid)[] = { WPP_GUID_STRUCT Guid }

WPP_LOCAL_MSG_GUID(WPP_USER_MSG_GUID);
#define WPP_LOCAL_TraceGuids WPP_LOCAL_MSG_VAR(WPP_USER_MSG_GUID)

#else // WPP_USER_MSG_GUID

#define WPP_LOCAL_TraceGuids WPP_fc8099d94f203cf59e9482fbe2d99990_Traceguids
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0xfc8099d9,0x4f20,0x3cf5,{0x9e,0x94,0x82,0xfb,0xe2,0xd9,0x99,0x90}}, };

#endif // WPP_USER_MSG_GUID

#ifndef WPP_ALREADY_INCLUDED

#ifndef WPP_TRACE_OPTIONS
enum { WPP_TRACE_OPTIONS =
    TRACE_MESSAGE_SEQUENCE   |
    TRACE_MESSAGE_GUID       |
    TRACE_MESSAGE_SYSTEMINFO |
    TRACE_MESSAGE_TIMESTAMP };
#endif // WPP_TRACE_OPTIONS

#ifndef WPP_LOGPAIR_SEPARATOR
# define WPP_LOGPAIR_SEPARATOR ,
#endif
#ifndef WPP_LOGPAIR_SIZET
# define WPP_LOGPAIR_SIZET SIZE_T
#endif
#ifndef WPP_LOGPAIR
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((WPP_LOGPAIR_SIZET)(_Size))WPP_LOGPAIR_SEPARATOR
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#ifndef WPP_LOGASTR
# ifdef WPP_CHECK_FOR_NULL_STRING
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( \
    (_value) ? strlen(_value) + 1 : 5, \
    (_value) ?       (_value)     : "NULL" )
# else // WPP_CHECK_FOR_NULL_STRING
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( \
    strlen(_value) + 1, \
    _value )
# endif // WPP_CHECK_FOR_NULL_STRING
#endif // WPP_LOGASTR

#ifndef WPP_LOGWSTR
# ifdef WPP_CHECK_FOR_NULL_STRING
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( \
    ((_value) ? wcslen(_value) + 1 : 5) * sizeof(WCHAR), \
     (_value) ?       (_value)     : L"NULL" )
# else // WPP_CHECK_FOR_NULL_STRING
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( \
    (wcslen(_value) + 1) * sizeof(WCHAR), \
    _value )
# endif // WPP_CHECK_FOR_NULL_STRING
#endif // WPP_LOGWSTR

#ifndef WPP_LOGPGUID
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif // WPP_LOGPGUID

#ifndef WPP_LOGPSID
# ifdef WPP_CHECK_FOR_NULL_STRING
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( \
    (_value) && WPP_IsValidSid(_value) ? WPP_GetLengthSid(_value) : 5, \
    (_value) && WPP_IsValidSid(_value) ? (_value) : (void const*)"NULL")
# else // WPP_CHECK_FOR_NULL_STRING
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( \
    WPP_GetLengthSid(_value), \
    (_value) )
#endif // WPP_CHECK_FOR_NULL_STRING
#endif // WPP_LOGPSID

#ifndef WPP_LOGCSTR
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof(USHORT),      &(_x).Length ) \
    WPP_LOGPAIR( (USHORT)(_x).Length, (USHORT)(_x).Length ? (_x).Buffer : "" )
#endif // WPP_LOGCSTR

#ifndef WPP_LOGUSTR
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof(USHORT),      &(_x).Length ) \
    WPP_LOGPAIR( (USHORT)(_x).Length, (USHORT)(_x).Length ? (_x).Buffer : L"" )
#endif // WPP_LOGUSTR

#ifndef WPP_LOGPUSTR
#ifdef WPP_CHECK_FOR_NULL_STRING
# define WPP_LOGPUSTR(_x) \
    WPP_LOGPAIR( \
        sizeof(USHORT), \
        (_x) ? &(_x)->Length : (void const*)L"\x08" ) \
    WPP_LOGPAIR( \
        (_x)                         ? (USHORT)(_x)->Length : 0x08, \
        (_x) && (USHORT)(_x)->Length ? (_x)->Buffer         : L"NULL" )
#else // WPP_CHECK_FOR_NULL_STRING
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#endif // WPP_CHECK_FOR_NULL_STRING
#endif // WPP_LOGPUSTR

#ifndef WPP_LOGPCSTR
#ifdef WPP_CHECK_FOR_NULL_STRING
# define WPP_LOGPCSTR(_x) \
    WPP_LOGPAIR( \
        sizeof(USHORT), \
        (_x) ? &(_x)->Length : (void const*)L"\x04" ) \
    WPP_LOGPAIR( \
        (_x)                         ? (USHORT)(_x)->Length : 0x04, \
        (_x) && (USHORT)(_x)->Length ? (_x)->Buffer         : "NULL" )
#else // WPP_CHECK_FOR_NULL_STRING
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#endif // WPP_CHECK_FOR_NULL_STRING
#endif // WPP_LOGPCSTR

#ifdef __cplusplus

#ifndef WPP_POINTER_TO_USHORT
struct WppPointerToUshort
{
    USHORT m_val;
    WPP_FORCEINLINE explicit WppPointerToUshort(USHORT val) : m_val(val) {}
    WPP_FORCEINLINE USHORT const* get() const { return &m_val; }
};
#define WPP_POINTER_TO_USHORT(val) (WppPointerToUshort((val)).get())
#endif // WPP_POINTER_TO_USHORT

#ifndef WPP_LOGCPPSTR
#define WPP_LOGCPPSTR(_value) \
    WPP_LOGPAIR( \
        sizeof(USHORT), \
        WPP_POINTER_TO_USHORT((USHORT)((_value).size()*sizeof(*(_value).c_str()))) ) \
    WPP_LOGPAIR( \
        (USHORT)((_value).size()*sizeof(*(_value).c_str())), \
        (_value).c_str() )
#endif // WPP_LOGCPPSTR

#ifndef WPP_LOGCPPVEC
#define WPP_LOGCPPVEC(_value) \
    WPP_LOGPAIR( \
        sizeof(USHORT), \
        WPP_POINTER_TO_USHORT((USHORT)((_value).size()*sizeof(*(_value).data()))) ) \
    WPP_LOGPAIR( \
        (USHORT)((_value).size()*sizeof(*(_value).data())), \
        (_value).data() + ((_value).data() == NULL) )
#endif // WPP_LOGCPPVEC

#endif // __cplusplus

#ifndef WPP_BINARY_def
# define WPP_BINARY_def
typedef struct tagWPP_BINARY
{
    _Field_size_bytes_(Length) void const* Buffer;
    USHORT Length;
} WPP_BINARY;
#endif // WPP_BINARY_def

#ifndef WPP_BINARY_func
# define WPP_BINARY_func
WPP_FORCEINLINE WPP_BINARY
WppBinary(_In_reads_bytes_(Length) void const* Buffer, USHORT Length)
{
    WPP_BINARY data;
    data.Buffer = Buffer;
    data.Length = Length;
    return data;
}
#endif // WPP_BINARY_func

#endif // WPP_ALREADY_INCLUDED

#ifndef WPP_ENABLE_FLAG_BIT
#define WPP_ENABLE_FLAG_BIT(flag) (WPP_CB[((flag) >> 16)].Control).Flags[( (0xFFFF & ((flag)-1) ) / 32)] & (1 << ( ((flag)-1) & 31 ))
#endif

#ifndef WPP_SF__def
# define WPP_SF__def
WPP_INLINE void WPP_SF_(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id,  (void*)0); }
#endif // WPP_SF__def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_ function
//
#ifndef WPP_RECORDER_AND_TRACE_SF__def
#define WPP_RECORDER_AND_TRACE_SF__def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                    (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id,  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF__def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_ function
//
#ifndef WPP_RECORDER_SF__def
#define WPP_RECORDER_SF__def
WPP_INLINE
VOID
WPP_RECORDER_SF_(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
             (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id,  (void*)0);
}
#endif // WPP_RECORDER_SF__def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_D_def
# define WPP_SF_D_def
WPP_INLINE void WPP_SF_D(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1)  (void*)0); }
#endif // WPP_SF_D_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_D function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_D_def
#define WPP_RECORDER_AND_TRACE_SF_D_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_D(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int, _a1)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_D_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_D function
//
#ifndef WPP_RECORDER_SF_D_def
#define WPP_RECORDER_SF_D_def
WPP_INLINE
VOID
WPP_RECORDER_SF_D(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(unsigned int, _a1)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1)  (void*)0);
}
#endif // WPP_RECORDER_SF_D_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_DD_def
# define WPP_SF_DD_def
WPP_INLINE void WPP_SF_DD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0); }
#endif // WPP_SF_DD_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_DD function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_DD_def
#define WPP_RECORDER_AND_TRACE_SF_DD_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_DD(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_DD_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_DD function
//
#ifndef WPP_RECORDER_SF_DD_def
#define WPP_RECORDER_SF_DD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_DD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0);
}
#endif // WPP_RECORDER_SF_DD_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_DDD_def
# define WPP_SF_DDD_def
WPP_INLINE void WPP_SF_DDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2, unsigned int _a3)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3)  (void*)0); }
#endif // WPP_SF_DDD_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_DDD function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_DDD_def
#define WPP_RECORDER_AND_TRACE_SF_DDD_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_DDD(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_DDD_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_DDD function
//
#ifndef WPP_RECORDER_SF_DDD_def
#define WPP_RECORDER_SF_DDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_DDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3)  (void*)0);
}
#endif // WPP_RECORDER_SF_DDD_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_DDDD_def
# define WPP_SF_DDDD_def
WPP_INLINE void WPP_SF_DDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4)  (void*)0); }
#endif // WPP_SF_DDDD_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_DDDD function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_DDDD_def
#define WPP_RECORDER_AND_TRACE_SF_DDDD_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_DDDD(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_DDDD_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_DDDD function
//
#ifndef WPP_RECORDER_SF_DDDD_def
#define WPP_RECORDER_SF_DDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_DDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4)  (void*)0);
}
#endif // WPP_RECORDER_SF_DDDD_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_DDDDD_def
# define WPP_SF_DDDDD_def
WPP_INLINE void WPP_SF_DDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5)  (void*)0); }
#endif // WPP_SF_DDDDD_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_DDDDD function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_DDDDD_def
#define WPP_RECORDER_AND_TRACE_SF_DDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_DDDDD(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_DDDDD_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_DDDDD function
//
#ifndef WPP_RECORDER_SF_DDDDD_def
#define WPP_RECORDER_SF_DDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_DDDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5)  (void*)0);
}
#endif // WPP_RECORDER_SF_DDDDD_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_DDDDDD_def
# define WPP_SF_DDDDDD_def
WPP_INLINE void WPP_SF_DDDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6)  (void*)0); }
#endif // WPP_SF_DDDDDD_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_DDDDDD function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_DDDDDD_def
#define WPP_RECORDER_AND_TRACE_SF_DDDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_DDDDDD(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_DDDDDD_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_DDDDDD function
//
#ifndef WPP_RECORDER_SF_DDDDDD_def
#define WPP_RECORDER_SF_DDDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_DDDDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6)  (void*)0);
}
#endif // WPP_RECORDER_SF_DDDDDD_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_DDDDDDD_def
# define WPP_SF_DDDDDDD_def
WPP_INLINE void WPP_SF_DDDDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6, unsigned int _a7)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6) WPP_LOGTYPEVAL(unsigned int, _a7)  (void*)0); }
#endif // WPP_SF_DDDDDDD_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_DDDDDDD function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_DDDDDDD_def
#define WPP_RECORDER_AND_TRACE_SF_DDDDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_DDDDDDD(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6, unsigned int _a7
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6) WPP_LOGTYPEVAL(unsigned int, _a7)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6) WPP_LOGTYPEVAL(unsigned int, _a7)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_DDDDDDD_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_DDDDDDD function
//
#ifndef WPP_RECORDER_SF_DDDDDDD_def
#define WPP_RECORDER_SF_DDDDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_DDDDDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6, unsigned int _a7
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6) WPP_LOGTYPEVAL(unsigned int, _a7)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6) WPP_LOGTYPEVAL(unsigned int, _a7)  (void*)0);
}
#endif // WPP_RECORDER_SF_DDDDDDD_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_DDDDDDs_def
# define WPP_SF_DDDDDDs_def
WPP_INLINE void WPP_SF_DDDDDDs(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6, LPCSTR _a7)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6) WPP_LOGASTR(_a7)  (void*)0); }
#endif // WPP_SF_DDDDDDs_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_DDDDDDs function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_DDDDDDs_def
#define WPP_RECORDER_AND_TRACE_SF_DDDDDDs_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_DDDDDDs(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6, LPCSTR _a7
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6) WPP_LOGASTR(_a7)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6) WPP_LOGASTR(_a7)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_DDDDDDs_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_DDDDDDs function
//
#ifndef WPP_RECORDER_SF_DDDDDDs_def
#define WPP_RECORDER_SF_DDDDDDs_def
WPP_INLINE
VOID
WPP_RECORDER_SF_DDDDDDs(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6, LPCSTR _a7
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6) WPP_LOGASTR(_a7)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5) WPP_LOGTYPEVAL(unsigned int, _a6) WPP_LOGASTR(_a7)  (void*)0);
}
#endif // WPP_RECORDER_SF_DDDDDDs_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_DDd_def
# define WPP_SF_DDd_def
WPP_INLINE void WPP_SF_DDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2, signed int _a3)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(signed int, _a3)  (void*)0); }
#endif // WPP_SF_DDd_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_DDd function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_DDd_def
#define WPP_RECORDER_AND_TRACE_SF_DDd_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_DDd(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, signed int _a3
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(signed int, _a3)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(signed int, _a3)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_DDd_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_DDd function
//
#ifndef WPP_RECORDER_SF_DDd_def
#define WPP_RECORDER_SF_DDd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_DDd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, signed int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(signed int, _a3)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(signed int, _a3)  (void*)0);
}
#endif // WPP_RECORDER_SF_DDd_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_Dd_def
# define WPP_SF_Dd_def
WPP_INLINE void WPP_SF_Dd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, signed int _a2)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(signed int, _a2)  (void*)0); }
#endif // WPP_SF_Dd_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_Dd function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_Dd_def
#define WPP_RECORDER_AND_TRACE_SF_Dd_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_Dd(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, signed int _a2
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(signed int, _a2)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(signed int, _a2)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_Dd_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_Dd function
//
#ifndef WPP_RECORDER_SF_Dd_def
#define WPP_RECORDER_SF_Dd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_Dd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, signed int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(signed int, _a2)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int, _a1) WPP_LOGTYPEVAL(signed int, _a2)  (void*)0);
}
#endif // WPP_RECORDER_SF_Dd_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_d_def
# define WPP_SF_d_def
WPP_INLINE void WPP_SF_d(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int, _a1)  (void*)0); }
#endif // WPP_SF_d_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_d function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_d_def
#define WPP_RECORDER_AND_TRACE_SF_d_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_d(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed int _a1
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(signed int, _a1)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed int, _a1)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_d_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_d function
//
#ifndef WPP_RECORDER_SF_d_def
#define WPP_RECORDER_SF_d_def
WPP_INLINE
VOID
WPP_RECORDER_SF_d(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed int _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(signed int, _a1)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed int, _a1)  (void*)0);
}
#endif // WPP_RECORDER_SF_d_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_dD_def
# define WPP_SF_dD_def
WPP_INLINE void WPP_SF_dD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1, unsigned int _a2)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0); }
#endif // WPP_SF_dD_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_dD function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_dD_def
#define WPP_RECORDER_AND_TRACE_SF_dD_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_dD(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed int _a1, unsigned int _a2
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(signed int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_dD_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_dD function
//
#ifndef WPP_RECORDER_SF_dD_def
#define WPP_RECORDER_SF_dD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_dD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed int _a1, unsigned int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(signed int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0);
}
#endif // WPP_RECORDER_SF_dD_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_dDD_def
# define WPP_SF_dDD_def
WPP_INLINE void WPP_SF_dDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1, unsigned int _a2, unsigned int _a3)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3)  (void*)0); }
#endif // WPP_SF_dDD_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_dDD function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_dDD_def
#define WPP_RECORDER_AND_TRACE_SF_dDD_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_dDD(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed int _a1, unsigned int _a2, unsigned int _a3
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(signed int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_dDD_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_dDD function
//
#ifndef WPP_RECORDER_SF_dDD_def
#define WPP_RECORDER_SF_dDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_dDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed int _a1, unsigned int _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(signed int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed int, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3)  (void*)0);
}
#endif // WPP_RECORDER_SF_dDD_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_l_def
# define WPP_SF_l_def
WPP_INLINE void WPP_SF_l(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed long _a1)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed long, _a1)  (void*)0); }
#endif // WPP_SF_l_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_l function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_l_def
#define WPP_RECORDER_AND_TRACE_SF_l_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_l(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed long _a1
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(signed long, _a1)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed long, _a1)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_l_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_l function
//
#ifndef WPP_RECORDER_SF_l_def
#define WPP_RECORDER_SF_l_def
WPP_INLINE
VOID
WPP_RECORDER_SF_l(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed long _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(signed long, _a1)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed long, _a1)  (void*)0);
}
#endif // WPP_RECORDER_SF_l_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_lDDDD_def
# define WPP_SF_lDDDD_def
WPP_INLINE void WPP_SF_lDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed long _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed long, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5)  (void*)0); }
#endif // WPP_SF_lDDDD_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_lDDDD function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_lDDDD_def
#define WPP_RECORDER_AND_TRACE_SF_lDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_lDDDD(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed long _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(signed long, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed long, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_lDDDD_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_lDDDD function
//
#ifndef WPP_RECORDER_SF_lDDDD_def
#define WPP_RECORDER_SF_lDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_lDDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed long _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(signed long, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed long, _a1) WPP_LOGTYPEVAL(unsigned int, _a2) WPP_LOGTYPEVAL(unsigned int, _a3) WPP_LOGTYPEVAL(unsigned int, _a4) WPP_LOGTYPEVAL(unsigned int, _a5)  (void*)0);
}
#endif // WPP_RECORDER_SF_lDDDD_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_ldSSS_def
# define WPP_SF_ldSSS_def
WPP_INLINE void WPP_SF_ldSSS(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed long _a1, signed int _a2, LPCWSTR _a3, LPCWSTR _a4, LPCWSTR _a5)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed long, _a1) WPP_LOGTYPEVAL(signed int, _a2) WPP_LOGWSTR(_a3) WPP_LOGWSTR(_a4) WPP_LOGWSTR(_a5)  (void*)0); }
#endif // WPP_SF_ldSSS_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_ldSSS function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_ldSSS_def
#define WPP_RECORDER_AND_TRACE_SF_ldSSS_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_ldSSS(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed long _a1, signed int _a2, LPCWSTR _a3, LPCWSTR _a4, LPCWSTR _a5
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(signed long, _a1) WPP_LOGTYPEVAL(signed int, _a2) WPP_LOGWSTR(_a3) WPP_LOGWSTR(_a4) WPP_LOGWSTR(_a5)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed long, _a1) WPP_LOGTYPEVAL(signed int, _a2) WPP_LOGWSTR(_a3) WPP_LOGWSTR(_a4) WPP_LOGWSTR(_a5)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_ldSSS_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_ldSSS function
//
#ifndef WPP_RECORDER_SF_ldSSS_def
#define WPP_RECORDER_SF_ldSSS_def
WPP_INLINE
VOID
WPP_RECORDER_SF_ldSSS(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed long _a1, signed int _a2, LPCWSTR _a3, LPCWSTR _a4, LPCWSTR _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(signed long, _a1) WPP_LOGTYPEVAL(signed int, _a2) WPP_LOGWSTR(_a3) WPP_LOGWSTR(_a4) WPP_LOGWSTR(_a5)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed long, _a1) WPP_LOGTYPEVAL(signed int, _a2) WPP_LOGWSTR(_a3) WPP_LOGWSTR(_a4) WPP_LOGWSTR(_a5)  (void*)0);
}
#endif // WPP_RECORDER_SF_ldSSS_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_q_def
# define WPP_SF_q_def
WPP_INLINE void WPP_SF_q(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*, _a1)  (void*)0); }
#endif // WPP_SF_q_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_q function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_q_def
#define WPP_RECORDER_AND_TRACE_SF_q_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_q(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const void* _a1
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(const void*, _a1)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(const void*, _a1)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_q_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_q function
//
#ifndef WPP_RECORDER_SF_q_def
#define WPP_RECORDER_SF_q_def
WPP_INLINE
VOID
WPP_RECORDER_SF_q(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const void* _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGTYPEVAL(const void*, _a1)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(const void*, _a1)  (void*)0);
}
#endif // WPP_RECORDER_SF_q_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_sD_def
# define WPP_SF_sD_def
WPP_INLINE void WPP_SF_sD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCSTR _a1, unsigned int _a2)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0); }
#endif // WPP_SF_sD_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_sD function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_sD_def
#define WPP_RECORDER_AND_TRACE_SF_sD_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_sD(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , LPCSTR _a1, unsigned int _a2
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_sD_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_sD function
//
#ifndef WPP_RECORDER_SF_sD_def
#define WPP_RECORDER_SF_sD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , LPCSTR _a1, unsigned int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int, _a2)  (void*)0);
}
#endif // WPP_RECORDER_SF_sD_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

#ifndef WPP_SF_sdd_def
# define WPP_SF_sdd_def
WPP_INLINE void WPP_SF_sdd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, LPCSTR _a1, signed int _a2, signed int _a3)
{ WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int, _a2) WPP_LOGTYPEVAL(signed int, _a3)  (void*)0); }
#endif // WPP_SF_sdd_def

#if ENABLE_WPP_RECORDER

#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_AND_TRACE_SF_sdd function
//
#ifndef WPP_RECORDER_AND_TRACE_SF_sdd_def
#define WPP_RECORDER_AND_TRACE_SF_sdd_def
WPP_INLINE
VOID
WPP_RECORDER_AND_TRACE_SF_sdd(
    WPP_LOGGER_ARG
    BOOLEAN  wppEnabled,
    BOOLEAN  recorderEnabled,
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , LPCSTR _a1, signed int _a2, signed int _a3
    )
{
    if (wppEnabled)
    {
        WPP_TRACE( WPP_GET_LOGGER,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int, _a2) WPP_LOGTYPEVAL(signed int, _a3)  (void*)0);
    }

    if (recorderEnabled)
    {
        WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int, _a2) WPP_LOGTYPEVAL(signed int, _a3)  (void*)0 );
    }
}
#endif // WPP_RECORDER_AND_TRACE_SF_sdd_def

#else  // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

//
// Generate the WPP_RECORDER_SP_sdd function
//
#ifndef WPP_RECORDER_SF_sdd_def
#define WPP_RECORDER_SF_sdd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sdd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , LPCSTR _a1, signed int _a2, signed int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
        (WPP_CONTROL(flags).Level >= level))
    {
        WPP_TRACE(
            WPP_CONTROL(flags).Logger,
            WPP_TRACE_OPTIONS,
            (LPGUID)traceGuid,
            id,
            WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int, _a2) WPP_LOGTYPEVAL(signed int, _a3)  (void*)0);
    }

    WPP_RECORDER(AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int, _a2) WPP_LOGTYPEVAL(signed int, _a3)  (void*)0);
}
#endif // WPP_RECORDER_SF_sdd_def

#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER

#endif // ENABLE_WPP_RECORDER

// WPP_LOG_ALWAYS:
// Called for each event: WPP_LOG_ALWAYS(EX, MSG, arg1, arg2, arg3...) Other()
// If defined, the definition needs to include a trailing comma or semicolon.
// In addition, you will need to define a WPP_EX_[args](args...) macro to
// extract any needed information from the other arguments (e.g. LEVEL).
#ifndef WPP_LOG_ALWAYS
#define WPP_LOG_ALWAYS(...)
#endif

// WPP_DEBUG:
// Called for each enabled event: WPP_DEBUG((MSG, arg1, arg2, arg3...)), Other()
// Potential definition: printf MsgArgs
// Definition should not include any trailing comma or semicolon.
#ifdef WPP_DEBUG
#define WPP_INVOKE_WPP_DEBUG(MsgArgs) WPP_DEBUG(MsgArgs)
#else // WPP_DEBUG
#define WPP_INVOKE_WPP_DEBUG(MsgArgs) (void)0
#endif // WPP_DEBUG

// WPP_CALL_USBAudioConfiguration_cpp48
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp48(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp48) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     10, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp48(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp48) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                10, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp48(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp48) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                10, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp49
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp49(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp49) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     11, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp49(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp49) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                11, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp49(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp49) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                11, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp59
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp59(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp59) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     12, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp59(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp59) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                12, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp59(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp59) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                12, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp68
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp68(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp68) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     13, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp68(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp68) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                13, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp68(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp68) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                13, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp109
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp109(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp109) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     14, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp109(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp109) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                14, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp109(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp109) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                14, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp130
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp130(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp130) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     15, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp130(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp130) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                15, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp130(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp130) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                15, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp131
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp131(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp131) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     16, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp131(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp131) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                16, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp131(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp131) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                16, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp169
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp169(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp169) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     17, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp169(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp169) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                17, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp169(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp169) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                17, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp170
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp170(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp170) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     18, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp170(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp170) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                18, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp170(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp170) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                18, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp171
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp171(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp171) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_q( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     19, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp171(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp171) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_q( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                19, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp171(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp171) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_q( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                19, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp177
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp177(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp177) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_dD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     20, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp177(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp177) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_dD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                20, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp177(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp177) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_dD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                20, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp198
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp198(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp198) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     21, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp198(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp198) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                21, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp198(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp198) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                21, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp204
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp204(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp204) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     22, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp204(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp204) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                22, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp204(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp204) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                22, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp221
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp221(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp221) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     23, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp221(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp221) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                23, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp221(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp221) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                23, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp223
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp223(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp223) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     24, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp223(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp223) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                24, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp223(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp223) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                24, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp232
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp232(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp232) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     25, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp232(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp232) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                25, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp232(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp232) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                25, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp234
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp234(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp234) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     26, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp234(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp234) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                26, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp234(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp234) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                26, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp246
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp246(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp246) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     27, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp246(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp246) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                27, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp246(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp246) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                27, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp250
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp250(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp250) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     28, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp250(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp250) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                28, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp250(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp250) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                28, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp338
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp338(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp338) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     29, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp338(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp338) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                29, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp338(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp338) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                29, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp340
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp340(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp340) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     30, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp340(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp340) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                30, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp340(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp340) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                30, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp349
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp349(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp349) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     31, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp349(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp349) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                31, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp349(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp349) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                31, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp351
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp351(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp351) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     32, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp351(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp351) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                32, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp351(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp351) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                32, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp363
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp363(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp363) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     33, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp363(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp363) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                33, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp363(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp363) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                33, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp367
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp367(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp367) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     34, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp367(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp367) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                34, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp367(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp367) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                34, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp401
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp401(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp401) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     35, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp401(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp401) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                35, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp401(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp401) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                35, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp403
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp403(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp403) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     36, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp403(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp403) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                36, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp403(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp403) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                36, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp412
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp412(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp412) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     37, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp412(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp412) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                37, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp412(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp412) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                37, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp452
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp452(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp452) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     38, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp452(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp452) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                38, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp452(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp452) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                38, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp461
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp461(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp461) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     39, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp461(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp461) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                39, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp461(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp461) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                39, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp463
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp463(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp463) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     40, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp463(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp463) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                40, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp463(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp463) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                40, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp472
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp472(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp472) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     41, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp472(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp472) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                41, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp472(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp472) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                41, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp474
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp474(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp474) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     42, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp474(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp474) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                42, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp474(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp474) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                42, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp479
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp479(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp479) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     43, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp479(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp479) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                43, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp479(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp479) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                43, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp482
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp482(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp482) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     44, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp482(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp482) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                44, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp482(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp482) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                44, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp679
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp679(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp679) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_sD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     45, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp679(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp679) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_sD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                45, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp679(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp679) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_sD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                45, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp751
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp751(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp751) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     46, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp751(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp751) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                46, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp751(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp751) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                46, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp753
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp753(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp753) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     47, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp753(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp753) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                47, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp753(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp753) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                47, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp762
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp762(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp762) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     48, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp762(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp762) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                48, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp762(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp762) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                48, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp764
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp764(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp764) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     49, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp764(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp764) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                49, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp764(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp764) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                49, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp769
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp769(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp769) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     50, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp769(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp769) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                50, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp769(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp769) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                50, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp772
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp772(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp772) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     51, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp772(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp772) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                51, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp772(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp772) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                51, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp807
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp807(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp807) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     52, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp807(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp807) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                52, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp807(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp807) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                52, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp895
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp895(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp895) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     53, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp895(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp895) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                53, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp895(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp895) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                53, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp897
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp897(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp897) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     54, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp897(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp897) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                54, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp897(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp897) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                54, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp906
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp906(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp906) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     55, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp906(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp906) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                55, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp906(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp906) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                55, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp908
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp908(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp908) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     56, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp908(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp908) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                56, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp908(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp908) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                56, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp940
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp940(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp940) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     57, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp940(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp940) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                57, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp940(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp940) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                57, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp942
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp942(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp942) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     58, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp942(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp942) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                58, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp942(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp942) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                58, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp943
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp943(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp943) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     59, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp943(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp943) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                59, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp943(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp943) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                59, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp945
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp945(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp945) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     60, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp945(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp945) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                60, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp945(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp945) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                60, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp946
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp946(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp946) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     61, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp946(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp946) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                61, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp946(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp946) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                61, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp947
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp947(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp947) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     62, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp947(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp947) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                62, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp947(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp947) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                62, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp950
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp950(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp950) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     63, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp950(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp950) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                63, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp950(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp950) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                63, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp968
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp968(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp968) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     64, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp968(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp968) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                64, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp968(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp968) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                64, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp970
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp970(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp970) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     65, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp970(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp970) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                65, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp970(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp970) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                65, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp979
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp979(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp979) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     66, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp979(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp979) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                66, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp979(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp979) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                66, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp981
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp981(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp981) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     67, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp981(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp981) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                67, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp981(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp981) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                67, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1022
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1022(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1022) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     68, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1022(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1022) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                68, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1022(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1022) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                68, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1024
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1024(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1024) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     69, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1024(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1024) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                69, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1024(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1024) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                69, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1033
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1033(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1033) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     70, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1033(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1033) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                70, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1033(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1033) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                70, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1035
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1035(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1035) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     71, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1035(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1035) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                71, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1035(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1035) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                71, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1047
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1047(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1047) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     72, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1047(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1047) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                72, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1047(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1047) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                72, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1051
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1051(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1051) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     73, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1051(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1051) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                73, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1051(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1051) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                73, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1256
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1256(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1256) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     74, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1256(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1256) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                74, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1256(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1256) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                74, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1258
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1258(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1258) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     75, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1258(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1258) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                75, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1258(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1258) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                75, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1267
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1267(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1267) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     76, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1267(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1267) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                76, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1267(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1267) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                76, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1269
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1269(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1269) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     77, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1269(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1269) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                77, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1269(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1269) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                77, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1281
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1281(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1281) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     78, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1281(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1281) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                78, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1281(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1281) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                78, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1285
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1285(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1285) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     79, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1285(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1285) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                79, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1285(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1285) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                79, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1340
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1340(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1340) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     80, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1340(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1340) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                80, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1340(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1340) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                80, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1342
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1342(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1342) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     81, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1342(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1342) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                81, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1342(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1342) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                81, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1343
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1343(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1343) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     82, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1343(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1343) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                82, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1343(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1343) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                82, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1347
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1347(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1347) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     83, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1347(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1347) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                83, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1347(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1347) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                83, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1358
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1358(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1358) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     84, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1358(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1358) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                84, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1358(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1358) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                84, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1530
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1530(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1530) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     85, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1530(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1530) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                85, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1530(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1530) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                85, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1532
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1532(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1532) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     86, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1532(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1532) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                86, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1532(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1532) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                86, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1541
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1541(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1541) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     87, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1541(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1541) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                87, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1541(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1541) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                87, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1543
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1543(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1543) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     88, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1543(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1543) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                88, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1543(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1543) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                88, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1555
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1555(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1555) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     89, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1555(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1555) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                89, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1555(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1555) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                89, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1559
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1559(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1559) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     90, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1559(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1559) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                90, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1559(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1559) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                90, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1573
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1573(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1573) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     91, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1573(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1573) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                91, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1573(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1573) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                91, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1575
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1575(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1575) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     92, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1575(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1575) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                92, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1575(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1575) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                92, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1576
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1576(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1576) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     93, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1576(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1576) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                93, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1576(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1576) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                93, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1580
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1580(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1580) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     94, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1580(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1580) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                94, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1580(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1580) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                94, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1581
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1581(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1581) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     95, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1581(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1581) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                95, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1581(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1581) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                95, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1582
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1582(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1582) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     96, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1582(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1582) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                96, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1582(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1582) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                96, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1583
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1583(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1583) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     97, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1583(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1583) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                97, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1583(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1583) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                97, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1584
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1584(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1584) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     98, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1584(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1584) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                98, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1584(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1584) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                98, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1585
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1585(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1585) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     99, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1585(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1585) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                99, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1585(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1585) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                99, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1588
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1588(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1588) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     100, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1588(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1588) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                100, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1588(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1588) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                100, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1602
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1602(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1602) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     101, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1602(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1602) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                101, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1602(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1602) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                101, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1604
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1604(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1604) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     102, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1604(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1604) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                102, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1604(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1604) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                102, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1605
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1605(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1605) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     103, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1605(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1605) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                103, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1605(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1605) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                103, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1614
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1614(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1614) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     104, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1614(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1614) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                104, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1614(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1614) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                104, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1617
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1617(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1617) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     105, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1617(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1617) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                105, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1617(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1617) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                105, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1631
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1631(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1631) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     106, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1631(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1631) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                106, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1631(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1631) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                106, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1633
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1633(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1633) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     107, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1633(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1633) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                107, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1633(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1633) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                107, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1634
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1634(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1634) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     108, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1634(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1634) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                108, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1634(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1634) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                108, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1643
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1643(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1643) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     109, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1643(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1643) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                109, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1643(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1643) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                109, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1646
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1646(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1646) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     110, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1646(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1646) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                110, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1646(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1646) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                110, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1659
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1659(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1659) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     111, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1659(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1659) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                111, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1659(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1659) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                111, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1661
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1661(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1661) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     112, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1661(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1661) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                112, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1661(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1661) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                112, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1662
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1662(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1662) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     113, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1662(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1662) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                113, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1662(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1662) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                113, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1664
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1664(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1664) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     114, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1664(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1664) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                114, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1664(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1664) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                114, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1677
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1677(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1677) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     115, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1677(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1677) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                115, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1677(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1677) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                115, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1679
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1679(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1679) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     116, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1679(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1679) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                116, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1679(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1679) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                116, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1680
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1680(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1680) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     117, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1680(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1680) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                117, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1680(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1680) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                117, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1682
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1682(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1682) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     118, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1682(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1682) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                118, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1682(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1682) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                118, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1696
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1696(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1696) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     119, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1696(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1696) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                119, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1696(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1696) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                119, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1698
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1698(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1698) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     120, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1698(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1698) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                120, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1698(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1698) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                120, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1699
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1699(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1699) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     121, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1699(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1699) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                121, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1699(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1699) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                121, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1703
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1703(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1703) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     122, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1703(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1703) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                122, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1703(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1703) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                122, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1707
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1707(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1707) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     123, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1707(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1707) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                123, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1707(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1707) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                123, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1720
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1720(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1720) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     124, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1720(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1720) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                124, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1720(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1720) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                124, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1722
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1722(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1722) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     125, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1722(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1722) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                125, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1722(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1722) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                125, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1723
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1723(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1723) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     126, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1723(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1723) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                126, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1723(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1723) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                126, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1725
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1725(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1725) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     127, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1725(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1725) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                127, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1725(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1725) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                127, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1738
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1738(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1738) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     128, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1738(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1738) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                128, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1738(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1738) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                128, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1740
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1740(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1740) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     129, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1740(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1740) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                129, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1740(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1740) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                129, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1741
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1741(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1741) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     130, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1741(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1741) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                130, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1741(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1741) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                130, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1743
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1743(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1743) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     131, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1743(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1743) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                131, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1743(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1743) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                131, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1756
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1756(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1756) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     132, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1756(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1756) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                132, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1756(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1756) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                132, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1758
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1758(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1758) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     133, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1758(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1758) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                133, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1758(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1758) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                133, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1759
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1759(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1759) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     134, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1759(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1759) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                134, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1759(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1759) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                134, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1766
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1766(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1766) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     135, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1766(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1766) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                135, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1766(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1766) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                135, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1769
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1769(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1769) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     136, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1769(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1769) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                136, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1769(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1769) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                136, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1782
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1782(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1782) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     137, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1782(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1782) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                137, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1782(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1782) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                137, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1784
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1784(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1784) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     138, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1784(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1784) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                138, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1784(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1784) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                138, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1785
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1785(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1785) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     139, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1785(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1785) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                139, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1785(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1785) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                139, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1787
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1787(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1787) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     140, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1787(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1787) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                140, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1787(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1787) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                140, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1800
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1800(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1800) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     141, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1800(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1800) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                141, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1800(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1800) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                141, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1802
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1802(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1802) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     142, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1802(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1802) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                142, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1802(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1802) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                142, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1803
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1803(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1803) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     143, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1803(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1803) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                143, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1803(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1803) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                143, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1805
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1805(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1805) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     144, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1805(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1805) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                144, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1805(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1805) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                144, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1822
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1822(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1822) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     145, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1822(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1822) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                145, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1822(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1822) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                145, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1828
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1828(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1828) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     146, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1828(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1828) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                146, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1828(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1828) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                146, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1830
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1830(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1830) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     147, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1830(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1830) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                147, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1830(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1830) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                147, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1839
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1839(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1839) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     148, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1839(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1839) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                148, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1839(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1839) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                148, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1855
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1855(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1855) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     149, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1855(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1855) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                149, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1855(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1855) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                149, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1865
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1865(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1865) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     150, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1865(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1865) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                150, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1865(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1865) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                150, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1880
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1880(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1880) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     151, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1880(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1880) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                151, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1880(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1880) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                151, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1897
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1897(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1897) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     152, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1897(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1897) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                152, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1897(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1897) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                152, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1899
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1899(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1899) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     153, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1899(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1899) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                153, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1899(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1899) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                153, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1908
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1908(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1908) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     154, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1908(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1908) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                154, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1908(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1908) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                154, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1920
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1920(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1920) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     155, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1920(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1920) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                155, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1920(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1920) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                155, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1929
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1929(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1929) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     156, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1929(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1929) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                156, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1929(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1929) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                156, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1935
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1935(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1935) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     157, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1935(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1935) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                157, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1935(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1935) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                157, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1951
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1951(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1951) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     158, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1951(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1951) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                158, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1951(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1951) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                158, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1966
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1966(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1966) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_dD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     159, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1966(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1966) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_dD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                159, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1966(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1966) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_dD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                159, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1984
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1984(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1984) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     160, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1984(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1984) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                160, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1984(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1984) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                160, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp1995
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1995(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp1995) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15)); \
            WPP_RECORDER_AND_TRACE_SF_DDDDDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     161, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1995(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1995) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15)), \
            WPP_RECORDER_SF_DDDDDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                161, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp1995(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp1995) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15)), \
            WPP_SF_DDDDDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                161, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2000
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2000(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2000) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     162, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2000(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2000) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                162, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2000(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2000) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                162, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2001
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2001(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2001) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     163, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2001(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2001) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                163, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2001(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2001) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                163, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2010
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2010(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2010) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     164, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2010(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2010) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                164, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2010(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2010) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                164, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2027
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2027(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2027) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     165, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2027(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2027) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                165, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2027(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2027) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                165, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2029
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2029(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2029) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     166, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2029(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2029) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                166, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2029(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2029) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                166, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2037
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2037(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2037) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     167, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2037(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2037) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                167, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2037(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2037) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                167, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2044
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2044(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2044) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     168, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2044(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2044) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                168, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2044(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2044) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                168, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2048
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2048(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2048) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     169, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2048(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2048) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                169, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2048(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2048) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                169, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2065
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2065(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2065) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     170, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2065(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2065) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                170, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2065(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2065) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                170, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2079
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2079(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2079) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     171, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2079(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2079) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                171, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2079(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2079) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                171, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2090
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2090(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2090) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     172, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2090(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2090) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                172, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2090(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2090) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                172, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2093
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2093(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2093) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15)); \
            WPP_RECORDER_AND_TRACE_SF_DDDDDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     173, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2093(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2093) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15)), \
            WPP_RECORDER_SF_DDDDDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                173, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2093(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2093) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15)), \
            WPP_SF_DDDDDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                173, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2100
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2100(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2100) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_dD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     174, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2100(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2100) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_dD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                174, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2100(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2100) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_dD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                174, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2109
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2109(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2109) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_dD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     175, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2109(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2109) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_dD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                175, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2109(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2109) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_dD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                175, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2116
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2116(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2116) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     176, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2116(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2116) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                176, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2116(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2116) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                176, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2131
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2131(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2131) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     177, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2131(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2131) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                177, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2131(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2131) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                177, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2133
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2133(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2133) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     178, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2133(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2133) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                178, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2133(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2133) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                178, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2136
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2136(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2136) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     179, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2136(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2136) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                179, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2136(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2136) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                179, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2150
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2150(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2150) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     180, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2150(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2150) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                180, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2150(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2150) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                180, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2161
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2161(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2161) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     181, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2161(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2161) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                181, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2161(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2161) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                181, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2164
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2164(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2164) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15)); \
            WPP_RECORDER_AND_TRACE_SF_DDDDDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     182, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2164(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2164) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15)), \
            WPP_RECORDER_SF_DDDDDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                182, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2164(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2164) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15)), \
            WPP_SF_DDDDDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                182, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2177
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2177(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2177) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16)); \
            WPP_RECORDER_AND_TRACE_SF_DDDDDDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     183, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15, _a16);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2177(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2177) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16)), \
            WPP_RECORDER_SF_DDDDDDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                183, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15, _a16), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2177(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2177) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16)), \
            WPP_SF_DDDDDDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                183, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15, _a16), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2186
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2186(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2186) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     184, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2186(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2186) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                184, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2186(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2186) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                184, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2201
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2201(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2201) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     185, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2201(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2201) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                185, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2201(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2201) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                185, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2215
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2215(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2215) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     186, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2215(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2215) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                186, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2215(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2215) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                186, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2221
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2221(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2221) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     187, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2221(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2221) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                187, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2221(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2221) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                187, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2225
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2225(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2225) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     188, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2225(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2225) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                188, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2225(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2225) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                188, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2237
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2237(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2237) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     189, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2237(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2237) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                189, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2237(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2237) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                189, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2240
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2240(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2240) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     190, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2240(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2240) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                190, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2240(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2240) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                190, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2245
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2245(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2245) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     191, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2245(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2245) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                191, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2245(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2245) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                191, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2247
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2247(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2247) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     192, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2247(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2247) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                192, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2247(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2247) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                192, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2250
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2250(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2250) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     193, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2250(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2250) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                193, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2250(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2250) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                193, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2267
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2267(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2267) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     194, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2267(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2267) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                194, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2267(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2267) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                194, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2283
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2283(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2283) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     195, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2283(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2283) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                195, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2283(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2283) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                195, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2301
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2301(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2301) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     196, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2301(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2301) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                196, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2301(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2301) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                196, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2310
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2310(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2310) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     197, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2310(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2310) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                197, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2310(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2310) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                197, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2313
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2313(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2313) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     198, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2313(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2313) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                198, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2313(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2313) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                198, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2330
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2330(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2330) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     199, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2330(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2330) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                199, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2330(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2330) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                199, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2335
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2335(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2335) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     200, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2335(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2335) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                200, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2335(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2335) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                200, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2336
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2336(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2336) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     201, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2336(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2336) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                201, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2336(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2336) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                201, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2338
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2338(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2338) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     202, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2338(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2338) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                202, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2338(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2338) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                202, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2353
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2353(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2353) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     203, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2353(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2353) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                203, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2353(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2353) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                203, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2364
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2364(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2364) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     204, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2364(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2364) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                204, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2364(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2364) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                204, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2365
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2365(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2365) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     205, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2365(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2365) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                205, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2365(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2365) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                205, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2424
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2424(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2424) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     206, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2424(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2424) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                206, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2424(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2424) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                206, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2434
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2434(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2434) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     207, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2434(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2434) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                207, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2434(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2434) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                207, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2435
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2435(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2435) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     208, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2435(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2435) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                208, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2435(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2435) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                208, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2440
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2440(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2440) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     209, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2440(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2440) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                209, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2440(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2440) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                209, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2455
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2455(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2455) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     210, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2455(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2455) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                210, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2455(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2455) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                210, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2457
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2457(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2457) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     211, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2457(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2457) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                211, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2457(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2457) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                211, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2477
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2477(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2477) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     212, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2477(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2477) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                212, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2477(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2477) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                212, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2482
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2482(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2482) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     213, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2482(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2482) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                213, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2482(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2482) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                213, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2497
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2497(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2497) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     214, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2497(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2497) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                214, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2497(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2497) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                214, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2500
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2500(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2500) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     215, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2500(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2500) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                215, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2500(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2500) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                215, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2506
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2506(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2506) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     216, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2506(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2506) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                216, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2506(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2506) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                216, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2508
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2508(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2508) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     217, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2508(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2508) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                217, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2508(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2508) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                217, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2528
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2528(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2528) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     218, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2528(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2528) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                218, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2528(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2528) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                218, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2529
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2529(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2529) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     219, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2529(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2529) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                219, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2529(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2529) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                219, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2543
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2543(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2543) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     220, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2543(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2543) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                220, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2543(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2543) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                220, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2553
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2553(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2553) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     221, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2553(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2553) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                221, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2553(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2553) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                221, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2560
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2560(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2560) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)); \
            WPP_RECORDER_AND_TRACE_SF_DDDDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     222, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2560(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2560) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)), \
            WPP_RECORDER_SF_DDDDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                222, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2560(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2560) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)), \
            WPP_SF_DDDDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                222, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2579
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2579(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2579) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     223, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2579(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2579) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                223, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2579(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2579) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                223, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2586
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2586(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2586) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     224, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2586(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2586) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                224, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2586(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2586) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                224, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2645
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2645(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2645) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     225, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2645(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2645) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                225, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2645(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2645) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                225, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2651
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2651(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2651) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     226, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2651(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2651) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                226, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2651(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2651) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                226, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2654
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2654(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2654) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     227, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2654(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2654) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                227, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2654(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2654) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                227, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2677
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2677(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2677) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     228, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2677(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2677) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                228, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2677(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2677) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                228, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2711
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2711(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2711) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     229, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2711(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2711) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                229, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2711(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2711) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                229, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2717
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2717(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2717) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     230, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2717(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2717) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                230, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2717(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2717) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                230, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2721
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2721(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2721) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     231, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2721(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2721) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                231, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2721(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2721) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                231, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2732
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2732(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2732) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     232, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2732(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2732) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                232, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2732(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2732) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                232, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2741
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2741(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2741) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     233, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2741(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2741) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                233, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2741(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2741) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                233, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2752
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2752(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2752) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     234, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2752(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2752) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                234, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2752(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2752) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                234, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2759
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2759(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2759) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)); \
            WPP_RECORDER_AND_TRACE_SF_DDDDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     235, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2759(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2759) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)), \
            WPP_RECORDER_SF_DDDDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                235, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2759(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2759) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)), \
            WPP_SF_DDDDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                235, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2769
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2769(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2769) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     236, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2769(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2769) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                236, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2769(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2769) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                236, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2791
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2791(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2791) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     237, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2791(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2791) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                237, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2791(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2791) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                237, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2811
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2811(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2811) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     238, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2811(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2811) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                238, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2811(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2811) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                238, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2813
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2813(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2813) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     239, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2813(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2813) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                239, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2813(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2813) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                239, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2822
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2822(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2822) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     240, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2822(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2822) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                240, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2822(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2822) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                240, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2824
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2824(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2824) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     241, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2824(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2824) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                241, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2824(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2824) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                241, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2836
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2836(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2836) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     242, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2836(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2836) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                242, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2836(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2836) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                242, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2840
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2840(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2840) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     243, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2840(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2840) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                243, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2840(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2840) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                243, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2887
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2887(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2887) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     244, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2887(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2887) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                244, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2887(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2887) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                244, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2892
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2892(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2892) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     245, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2892(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2892) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                245, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2892(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2892) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                245, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2900
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2900(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2900) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     246, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2900(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2900) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                246, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2900(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2900) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                246, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2905
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2905(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2905) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     247, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2905(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2905) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                247, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2905(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2905) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                247, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2921
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2921(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2921) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     248, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2921(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2921) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                248, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2921(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2921) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                248, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2923
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2923(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2923) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     249, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2923(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2923) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                249, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2923(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2923) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                249, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2924
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2924(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2924) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     250, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2924(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2924) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                250, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2924(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2924) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                250, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2931
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2931(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2931) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     251, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2931(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2931) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                251, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2931(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2931) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                251, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2957
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2957(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2957) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     252, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2957(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2957) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                252, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2957(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2957) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                252, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2965
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2965(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2965) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     253, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2965(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2965) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                253, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2965(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2965) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                253, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2967
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2967(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2967) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16)); \
            WPP_RECORDER_AND_TRACE_SF_DDDDDDs( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     254, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15, _a16);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2967(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2967) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16)), \
            WPP_RECORDER_SF_DDDDDDs( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                254, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15, _a16), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2967(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2967) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16)), \
            WPP_SF_DDDDDDs( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                254, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15, _a16), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2973
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2973(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2973) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     255, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2973(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2973) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                255, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2973(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2973) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                255, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp2998
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2998(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp2998) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     256, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2998(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2998) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                256, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp2998(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp2998) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                256, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3006
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3006(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3006) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     257, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3006(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3006) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                257, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3006(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3006) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                257, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3008
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3008(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3008) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16)); \
            WPP_RECORDER_AND_TRACE_SF_DDDDDDs( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     258, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15, _a16);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3008(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3008) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16)), \
            WPP_RECORDER_SF_DDDDDDs( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                258, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15, _a16), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3008(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3008) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16)), \
            WPP_SF_DDDDDDs( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                258, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15, _a16), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3017
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3017(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3017) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     259, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3017(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3017) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                259, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3017(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3017) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                259, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3030
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3030(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3030) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     260, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3030(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3030) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                260, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3030(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3030) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                260, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3032
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3032(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3032) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     261, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3032(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3032) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                261, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3032(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3032) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                261, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3033
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3033(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3033) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     262, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3033(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3033) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                262, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3033(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3033) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                262, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3037
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3037(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3037) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     263, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3037(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3037) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                263, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3037(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3037) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                263, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3044
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3044(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3044) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     264, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3044(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3044) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                264, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3044(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3044) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                264, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3051
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3051(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3051) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     265, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3051(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3051) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                265, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3051(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3051) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                265, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3066
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3066(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3066) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     266, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3066(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3066) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                266, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3066(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3066) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                266, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3068
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3068(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3068) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     267, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3068(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3068) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                267, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3068(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3068) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                267, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3069
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3069(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3069) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     268, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3069(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3069) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                268, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3069(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3069) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                268, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3073
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3073(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3073) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     269, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3073(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3073) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                269, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3073(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3073) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                269, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3084
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3084(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3084) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     270, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3084(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3084) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                270, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3084(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3084) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                270, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3194
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3194(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3194) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     271, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3194(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3194) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                271, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3194(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3194) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                271, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3203
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3203(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3203) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     272, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3203(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3203) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                272, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3203(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3203) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                272, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3215
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3215(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3215) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     273, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3215(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3215) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                273, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3215(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3215) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                273, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3249
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3249(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3249) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     274, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3249(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3249) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                274, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3249(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3249) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                274, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3305
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3305(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3305) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13)); \
            WPP_RECORDER_AND_TRACE_SF_DDDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     275, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3305(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3305) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13)), \
            WPP_RECORDER_SF_DDDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                275, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3305(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3305) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13)), \
            WPP_SF_DDDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                275, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3321
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3321(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3321) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     276, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3321(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3321) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                276, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3321(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3321) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                276, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3323
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3323(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3323) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     277, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3323(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3323) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                277, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3323(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3323) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                277, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3344
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3344(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3344) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     278, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3344(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3344) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                278, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3344(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3344) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                278, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3360
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3360(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3360) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     279, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3360(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3360) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                279, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3360(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3360) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                279, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3362
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3362(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3362) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     280, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3362(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3362) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                280, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3362(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3362) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                280, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3369
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3369(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3369) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     281, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3369(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3369) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                281, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3369(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3369) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                281, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3375
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3375(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3375) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDd( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     282, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3375(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3375) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDd( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                282, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3375(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3375) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDd( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                282, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3382
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3382(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3382) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     283, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3382(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3382) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                283, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3382(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3382) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                283, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3386
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3386(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3386) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     284, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3386(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3386) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                284, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3386(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3386) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                284, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3402
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3402(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3402) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     285, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3402(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3402) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                285, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3402(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3402) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                285, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3404
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3404(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3404) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     286, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3404(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3404) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                286, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3404(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3404) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                286, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3425
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3425(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3425) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     287, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3425(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3425) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                287, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3425(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3425) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                287, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3429
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3429(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3429) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     288, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3429(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3429) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                288, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3429(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3429) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                288, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3446
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3446(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3446) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     289, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3446(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3446) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                289, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3446(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3446) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                289, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3448
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3448(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3448) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     290, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3448(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3448) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                290, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3448(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3448) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                290, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3472
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3472(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3472) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     291, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3472(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3472) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                291, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3472(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3472) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                291, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3514
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3514(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3514) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     292, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3514(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3514) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                292, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3514(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3514) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                292, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3515
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3515(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3515) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     293, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3515(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3515) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                293, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3515(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3515) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                293, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3519
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3519(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3519) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     294, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3519(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3519) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                294, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3519(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3519) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                294, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3520
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3520(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3520) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     295, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3520(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3520) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                295, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3520(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3520) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                295, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3531
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3531(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3531) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     296, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3531(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3531) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                296, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3531(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3531) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                296, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3545
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3545(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3545) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     297, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3545(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3545) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                297, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3545(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3545) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                297, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3547
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3547(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3547) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     298, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3547(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3547) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                298, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3547(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3547) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                298, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3556
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3556(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3556) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     299, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3556(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3556) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                299, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3556(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3556) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                299, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3558
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3558(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3558) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     300, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3558(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3558) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                300, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3558(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3558) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                300, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3569
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3569(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3569) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     301, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3569(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3569) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                301, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3569(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3569) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                301, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3571
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3571(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3571) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     302, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3571(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3571) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                302, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3571(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3571) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                302, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3575
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3575(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3575) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     303, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3575(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3575) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                303, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3575(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3575) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                303, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3745
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3745(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3745) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     304, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3745(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3745) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                304, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3745(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3745) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                304, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3761
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3761(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3761) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     305, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3761(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3761) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                305, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3761(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3761) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                305, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3762
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3762(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3762) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     306, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3762(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3762) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                306, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3762(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3762) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                306, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3778
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3778(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3778) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     307, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3778(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3778) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                307, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3778(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3778) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                307, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3801
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3801(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3801) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     308, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3801(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3801) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                308, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3801(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3801) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                308, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3817
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3817(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3817) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     309, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3817(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3817) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                309, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3817(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3817) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                309, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3818
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3818(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3818) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     310, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3818(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3818) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                310, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3818(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3818) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                310, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3872
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3872(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3872) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     311, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3872(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3872) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                311, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3872(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3872) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                311, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3946
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3946(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3946) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     312, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3946(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3946) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                312, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3946(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3946) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                312, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3961
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3961(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3961) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     313, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3961(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3961) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                313, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3961(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3961) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                313, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3967
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3967(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3967) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     314, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3967(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3967) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                314, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3967(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3967) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                314, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3982
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3982(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3982) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     315, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3982(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3982) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                315, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3982(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3982) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                315, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp3985
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3985(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp3985) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)); \
            WPP_RECORDER_AND_TRACE_SF_DDDDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     316, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3985(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3985) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)), \
            WPP_RECORDER_SF_DDDDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                316, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp3985(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp3985) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)), \
            WPP_SF_DDDDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                316, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4022
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4022(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4022) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     317, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4022(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4022) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                317, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4022(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4022) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                317, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4040
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4040(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4040) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     318, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4040(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4040) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                318, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4040(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4040) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                318, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4047
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4047(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4047) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     319, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4047(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4047) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                319, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4047(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4047) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                319, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4065
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4065(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4065) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     320, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4065(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4065) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                320, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4065(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4065) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                320, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4073
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4073(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4073) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     321, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4073(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4073) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                321, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4073(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4073) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                321, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4093
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4093(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4093) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     322, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4093(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4093) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                322, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4093(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4093) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                322, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4114
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4114(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4114) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     323, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4114(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4114) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                323, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4114(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4114) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                323, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4130
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4130(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4130) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     324, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4130(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4130) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                324, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4130(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4130) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                324, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4134
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4134(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4134) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     325, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4134(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4134) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                325, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4134(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4134) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                325, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4146
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4146(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4146) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     326, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4146(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4146) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                326, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4146(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4146) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                326, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4148
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4148(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4148) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     327, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4148(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4148) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                327, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4148(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4148) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                327, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4157
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4157(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4157) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     328, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4157(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4157) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                328, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4157(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4157) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                328, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4166
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4166(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4166) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     329, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4166(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4166) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                329, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4166(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4166) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                329, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4178
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4178(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4178) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     330, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4178(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4178) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                330, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4178(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4178) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                330, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4180
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4180(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4180) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     331, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4180(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4180) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                331, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4180(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4180) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                331, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4181
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4181(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4181) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     332, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4181(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4181) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                332, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4181(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4181) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                332, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4182
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4182(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4182) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     333, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4182(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4182) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                333, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4182(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4182) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                333, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4239
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4239(RETSTATUS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), MSG) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4239) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     334, \
                     WPP_LOCAL_TraceGuids+0, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4239(RETSTATUS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), MSG) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4239) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                334, \
                WPP_LOCAL_TraceGuids+0, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4239(RETSTATUS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), MSG) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4239) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                334, \
                WPP_LOCAL_TraceGuids+0, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4242
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4242(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4242) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     335, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4242(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4242) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                335, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4242(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4242) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                335, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4256
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4256(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4256) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     336, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4256(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4256) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                336, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4256(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4256) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                336, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4268
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4268(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4268) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     337, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4268(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4268) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                337, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4268(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4268) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                337, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4269
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4269(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4269) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     338, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4269(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4269) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                338, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4269(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4269) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                338, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4270
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4270(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4270) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     339, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4270(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4270) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                339, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4270(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4270) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                339, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4271
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4271(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4271) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     340, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4271(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4271) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                340, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4271(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4271) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                340, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4272
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4272(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4272) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     341, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4272(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4272) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                341, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4272(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4272) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                341, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4282
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4282(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4282) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     342, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4282(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4282) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                342, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4282(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4282) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                342, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4296
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4296(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4296) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     343, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4296(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4296) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                343, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4296(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4296) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                343, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4298
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4298(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4298) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     344, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4298(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4298) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                344, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4298(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4298) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                344, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4299
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4299(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4299) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     345, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4299(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4299) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                345, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4299(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4299) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                345, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4310
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4310(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4310) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     346, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4310(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4310) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                346, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4310(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4310) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                346, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4324
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4324(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4324) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     347, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4324(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4324) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                347, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4324(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4324) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                347, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4326
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4326(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4326) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     348, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4326(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4326) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                348, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4326(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4326) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                348, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4327
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4327(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4327) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     349, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4327(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4327) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                349, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4327(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4327) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                349, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4334
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4334(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4334) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     350, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4334(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4334) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                350, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4334(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4334) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                350, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4348
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4348(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4348) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     351, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4348(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4348) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                351, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4348(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4348) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                351, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4419
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4419(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4419) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     352, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4419(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4419) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                352, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4419(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4419) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                352, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4433
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4433(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4433) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     353, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4433(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4433) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                353, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4433(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4433) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                353, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4439
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4439(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4439) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     354, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4439(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4439) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                354, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4439(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4439) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                354, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4454
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4454(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4454) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     355, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4454(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4454) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                355, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4454(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4454) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                355, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4460
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4460(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4460) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     356, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4460(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4460) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                356, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4460(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4460) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                356, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4464
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4464(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4464) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     357, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4464(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4464) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                357, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4464(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4464) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                357, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4479
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4479(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4479) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     358, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4479(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4479) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                358, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4479(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4479) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                358, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4486
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4486(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4486) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     359, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4486(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4486) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                359, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4486(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4486) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                359, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4490
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4490(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4490) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     360, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4490(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4490) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                360, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4490(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4490) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                360, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4512
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4512(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4512) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     361, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4512(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4512) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                361, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4512(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4512) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                361, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4513
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4513(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4513) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)); \
            WPP_RECORDER_AND_TRACE_SF_lDDDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     362, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4513(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4513) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)), \
            WPP_RECORDER_SF_lDDDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                362, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4513(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4513) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)), \
            WPP_SF_lDDDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                362, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4545
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4545(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4545) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     363, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4545(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4545) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                363, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4545(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4545) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                363, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4546
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4546(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4546) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     364, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4546(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4546) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                364, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4546(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4546) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                364, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4565
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4565(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4565) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     365, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4565(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4565) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                365, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4565(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4565) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                365, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4566
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4566(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4566) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     366, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4566(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4566) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                366, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4566(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4566) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                366, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4599
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4599(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4599) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     367, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4599(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4599) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                367, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4599(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4599) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                367, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4635
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4635(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4635) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     368, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4635(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4635) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                368, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4635(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4635) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                368, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4639
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4639(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4639) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     369, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4639(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4639) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                369, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4639(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4639) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                369, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4640
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4640(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4640) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     370, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4640(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4640) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                370, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4640(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4640) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                370, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4641
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4641(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4641) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     371, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4641(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4641) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                371, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4641(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4641) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                371, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4643
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4643(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4643) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     372, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4643(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4643) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                372, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4643(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4643) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                372, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4644
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4644(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4644) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     373, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4644(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4644) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                373, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4644(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4644) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                373, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4645
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4645(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4645) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     374, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4645(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4645) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                374, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4645(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4645) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                374, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4646
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4646(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4646) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     375, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4646(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4646) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                375, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4646(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4646) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                375, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4647
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4647(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4647) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     376, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4647(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4647) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                376, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4647(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4647) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                376, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4648
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4648(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4648) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     377, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4648(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4648) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                377, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4648(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4648) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                377, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4649
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4649(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4649) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     378, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4649(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4649) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                378, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4649(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4649) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                378, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4650
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4650(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4650) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     379, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4650(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4650) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                379, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4650(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4650) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                379, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4655
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4655(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4655) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     380, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4655(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4655) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                380, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4655(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4655) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                380, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4684
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4684(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4684) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     381, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4684(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4684) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                381, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4684(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4684) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                381, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4735
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4735(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4735) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     382, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4735(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4735) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                382, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4735(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4735) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                382, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4741
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4741(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4741) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     383, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4741(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4741) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                383, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4741(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4741) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                383, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4759
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4759(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4759) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     384, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4759(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4759) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                384, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4759(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4759) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                384, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4785
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4785(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4785) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     385, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4785(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4785) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                385, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4785(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4785) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                385, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4787
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4787(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4787) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     386, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4787(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4787) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                386, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4787(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4787) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                386, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4798
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4798(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4798) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     387, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4798(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4798) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                387, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4798(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4798) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                387, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4817
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4817(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4817) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     388, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4817(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4817) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                388, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4817(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4817) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                388, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4824
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4824(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4824) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     389, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4824(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4824) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                389, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4824(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4824) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                389, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4838
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4838(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4838) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     390, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4838(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4838) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                390, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4838(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4838) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                390, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4840
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4840(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4840) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     391, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4840(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4840) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                391, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4840(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4840) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                391, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4842
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4842(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4842) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     392, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4842(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4842) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                392, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4842(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4842) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                392, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4851
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4851(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4851) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     393, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4851(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4851) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                393, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4851(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4851) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                393, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4871
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4871(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4871) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     394, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4871(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4871) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                394, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4871(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4871) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                394, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4911
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4911(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4911) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     395, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4911(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4911) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                395, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4911(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4911) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                395, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4912
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4912(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4912) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16)); \
            WPP_RECORDER_AND_TRACE_SF_DDDDDDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     396, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15, _a16);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4912(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4912) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16)), \
            WPP_RECORDER_SF_DDDDDDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                396, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15, _a16), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4912(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4912) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14, _a15, _a16)), \
            WPP_SF_DDDDDDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                396, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14, _a15, _a16), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4914
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,POSCOND,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4914(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4914) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                     397, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4914(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4914) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), \
                397, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4914(POSCOND, RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS), " File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4914) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((" File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS) \
                397, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_POSCOND_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, POSCOND, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4916
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4916(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4916) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     398, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4916(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4916) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                398, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4916(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4916) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                398, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4917
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4917(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4917) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     399, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4917(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4917) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                399, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4917(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4917) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                399, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4918
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4918(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4918) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_DD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     400, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4918(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4918) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_DD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                400, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4918(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4918) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_DD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                400, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4921
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4921(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4921) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     401, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4921(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4921) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                401, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4921(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4921) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                401, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4935
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4935(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4935) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_DDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     402, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4935(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4935) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_DDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                402, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4935(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4935) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_DDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                402, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4940
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4940(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4940) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     403, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4940(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4940) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                403, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4940(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4940) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                403, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4943
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4943(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4943) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     404, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4943(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4943) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                404, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4943(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4943) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                404, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp4956
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4956(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp4956) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     405, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4956(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4956) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                405, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp4956(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp4956) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                405, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5063
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5063(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5063) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     406, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5063(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5063) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                406, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5063(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5063) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                406, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5081
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5081(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5081) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     407, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5081(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5081) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                407, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5081(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5081) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                407, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5082
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5082(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5082) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     408, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5082(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5082) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                408, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5082(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5082) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                408, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5088
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5088(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5088) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     409, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5088(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5088) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                409, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5088(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5088) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                409, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5092
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5092(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5092) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     410, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5092(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5092) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                410, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5092(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5092) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                410, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5101
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5101(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5101) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     411, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5101(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5101) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                411, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5101(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5101) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                411, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5127
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5127(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5127) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)); \
            WPP_RECORDER_AND_TRACE_SF_ldSSS( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     412, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5127(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5127) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)), \
            WPP_RECORDER_SF_ldSSS( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                412, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5127(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13, _a14) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5127) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13, _a14)), \
            WPP_SF_ldSSS( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                412, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13, _a14), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5129
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5129(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5129) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     413, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5129(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5129) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                413, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5129(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5129) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                413, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5144
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5144(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5144) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     414, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5144(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5144) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                414, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5144(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5144) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                414, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5161
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5161(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5161) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     415, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5161(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5161) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                415, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5161(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5161) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                415, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5186
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5186(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5186) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_l( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     416, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5186(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5186) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_l( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                416, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5186(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5186) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_l( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                416, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5194
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5194(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5194) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13)); \
            WPP_RECORDER_AND_TRACE_SF_DDDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     417, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5194(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5194) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13)), \
            WPP_RECORDER_SF_DDDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                417, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5194(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5194) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13)), \
            WPP_SF_DDDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                417, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5209
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5209(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5209) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_dDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     418, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5209(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5209) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_dDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                418, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5209(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5209) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_dDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                418, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5232
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5232(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5232) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_l( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     419, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5232(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5232) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_l( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                419, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5232(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5232) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_l( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                419, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5243
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5243(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5243) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13)); \
            WPP_RECORDER_AND_TRACE_SF_DDDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     420, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5243(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5243) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13)), \
            WPP_RECORDER_SF_DDDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                420, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5243(LEVEL, FLAGS, MSG, _a10, _a11, _a12, _a13) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12, _a13) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5243) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12, _a13)), \
            WPP_SF_DDDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                420, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12, _a13), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5296
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5296(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5296) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)); \
            WPP_RECORDER_AND_TRACE_SF_dDD( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     421, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5296(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5296) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_RECORDER_SF_dDD( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                421, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5296(LEVEL, FLAGS, MSG, _a10, _a11, _a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11, _a12) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5296) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11, _a12)), \
            WPP_SF_dDD( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                421, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11, _a12), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5406
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5406(RETSTATUS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), MSG) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5406) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_d( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     422, \
                     WPP_LOCAL_TraceGuids+0, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5406(RETSTATUS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), MSG) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5406) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_d( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                422, \
                WPP_LOCAL_TraceGuids+0, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5406(RETSTATUS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), MSG) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5406) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_d( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                422, \
                WPP_LOCAL_TraceGuids+0, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5412
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5412(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5412) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG)); \
            WPP_RECORDER_AND_TRACE_SF_( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     423, \
                     WPP_LOCAL_TraceGuids+0);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5412(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5412) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_RECORDER_SF_( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                423, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5412(LEVEL, FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5412) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG)), \
            WPP_SF_( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                423, \
                WPP_LOCAL_TraceGuids+0), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5715
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5715(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5715) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     424, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5715(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5715) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                424, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5715(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5715) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                424, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5719
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5719(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5719) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     425, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5719(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5719) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                425, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5719(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5719) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                425, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5727
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5727(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5727) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     426, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5727(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5727) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                426, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5727(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5727) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                426, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5730
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5730(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5730) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     427, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5730(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5730) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                427, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5730(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5730) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                427, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5735
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5735(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5735) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10)); \
            WPP_RECORDER_AND_TRACE_SF_D( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     428, \
                     WPP_LOCAL_TraceGuids+0, _a10);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5735(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5735) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_RECORDER_SF_D( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                428, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5735(LEVEL, FLAGS, MSG, _a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5735) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10)), \
            WPP_SF_D( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                428, \
                WPP_LOCAL_TraceGuids+0, _a10), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5747
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5747(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5747) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)); \
            WPP_RECORDER_AND_TRACE_SF_Dd( \
                     WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                     429, \
                     WPP_LOCAL_TraceGuids+0, _a10, _a11);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5747(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5747) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_FILTER(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_RECORDER_SF_Dd( \
                WPP_RECORDER_LEVEL_FLAGS_ARGS(LEVEL, FLAGS), \
                429, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5747(LEVEL, FLAGS, MSG, _a10, _a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(LEVEL, FLAGS), MSG, _a10, _a11) \
    WPP_LEVEL_FLAGS_PRE(LEVEL, FLAGS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5747) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(LEVEL, FLAGS) \
        ?   WPP_INVOKE_WPP_DEBUG((MSG, _a10, _a11)), \
            WPP_SF_Dd( \
                WPP_LEVEL_FLAGS_LOGGER(LEVEL, FLAGS) \
                429, \
                WPP_LOCAL_TraceGuids+0, _a10, _a11), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_POST(LEVEL, FLAGS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5780
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5780(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5780) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     430, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5780(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5780) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                430, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5780(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5780) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                430, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// WPP_CALL_USBAudioConfiguration_cpp5800
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#ifndef WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST
#  define WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL,FLAGS,IFRLOG,RETSTATUS)
#endif
#if ENABLE_WPP_RECORDER
#if ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5800(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    do {\
        WPP_ANNOTATE(USBAudioConfiguration_cpp5800) 0; \
        BOOLEAN wppEnabled = WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        BOOLEAN recorderEnabled = WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS); \
        if (wppEnabled || recorderEnabled) { \
            WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)); \
            WPP_RECORDER_AND_TRACE_SF_sdd( \
                     WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                     wppEnabled, recorderEnabled, \
                     WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                     431, \
                     WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet);\
        } \
    } \
    while(0) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#else // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5800(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5800) \
    (( \
        WPP_RECORDER_CHECK_INIT WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_FILTER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_RECORDER_SF_sdd( \
                WPP_RECORDER_LEVEL_FLAGS_IFRLOG_RETSTATUS_ARGS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), \
                431, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_TRACE_FILTERING_WITH_WPP_RECORDER
#else  // ENABLE_WPP_RECORDER
#define WPP_CALL_USBAudioConfiguration_cpp5800(RETSTATUS) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS_IFRLOG_RETSTATUS(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS), "ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_PRE(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
    WPP_ANNOTATE(USBAudioConfiguration_cpp5800) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_ENABLED(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
        ?   WPP_INVOKE_WPP_DEBUG(("ERROR: File:%s, Line:%d - status=%!STATUS!", __FILE__, __LINE__, __statusRet)), \
            WPP_SF_sdd( \
                WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_LOGGER(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS) \
                431, \
                WPP_LOCAL_TraceGuids+0, __FILE__, __LINE__, __statusRet), \
            1 \
        :   0 \
    )) \
    WPP_LEVEL_FLAGS_IFRLOG_RETSTATUS_POST(LEVEL_ERROR, FLAG_DEVICE_ALL, g_AudioDspLog, RETSTATUS)
#endif // ENABLE_WPP_RECORDER

// Functions
#undef DoDebugTrace
#ifdef __INTELLISENSE__
#define DoDebugTrace(TRACELEVEL, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define DoDebugTrace WPP_(CALL)
#endif
#undef DoTraceMessage
#ifdef __INTELLISENSE__
#define DoTraceMessage(LEVEL, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define DoTraceMessage WPP_(CALL)
#endif
#undef DrvLogCritical
#ifdef __INTELLISENSE__
#define DrvLogCritical(IFRLOG, FLAGS, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define DrvLogCritical WPP_(CALL)
#endif
#undef DrvLogError
#ifdef __INTELLISENSE__
#define DrvLogError(IFRLOG, FLAGS, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define DrvLogError WPP_(CALL)
#endif
#undef DrvLogInfo
#ifdef __INTELLISENSE__
#define DrvLogInfo(IFRLOG, FLAGS, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define DrvLogInfo WPP_(CALL)
#endif
#undef DrvLogVerbose
#ifdef __INTELLISENSE__
#define DrvLogVerbose(IFRLOG, FLAGS, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define DrvLogVerbose WPP_(CALL)
#endif
#undef DrvLogWarning
#ifdef __INTELLISENSE__
#define DrvLogWarning(IFRLOG, FLAGS, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define DrvLogWarning WPP_(CALL)
#endif
#undef RETURN_NTSTATUS_IF_FAILED_MSG
#ifdef __INTELLISENSE__
#define RETURN_NTSTATUS_IF_FAILED_MSG(RETSTATUS, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define RETURN_NTSTATUS_IF_FAILED_MSG WPP_(CALL)
#endif
#undef RETURN_NTSTATUS_IF_TRUE_MSG
#ifdef __INTELLISENSE__
#define RETURN_NTSTATUS_IF_TRUE_MSG(POSCOND, RETSTATUS, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define RETURN_NTSTATUS_IF_TRUE_MSG WPP_(CALL)
#endif
#undef RETURN_NTSTATUS_MSG
#ifdef __INTELLISENSE__
#define RETURN_NTSTATUS_MSG(RETSTATUS, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define RETURN_NTSTATUS_MSG WPP_(CALL)
#endif
#undef TRACE_HRESULT
#ifdef __INTELLISENSE__
#define TRACE_HRESULT(LEVEL, FLAGS, HR, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define TRACE_HRESULT WPP_(CALL)
#endif
#undef TRACE_LINE
#ifdef __INTELLISENSE__
#define TRACE_LINE(LEVEL, FLAGS, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define TRACE_LINE WPP_(CALL)
#endif
#undef TRACE_METHOD_LINE
#ifdef __INTELLISENSE__
#define TRACE_METHOD_LINE(LEVEL, FLAGS, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define TRACE_METHOD_LINE WPP_(CALL)
#endif
#undef Trace
#ifdef __INTELLISENSE__
#define Trace(LEVEL, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define Trace WPP_(CALL)
#endif
#undef TraceEvents
#ifdef __INTELLISENSE__
#define TraceEvents(LEVEL, FLAGS, MSG, ...) ((void)(MSG, ## __VA_ARGS__))
#else
#define TraceEvents WPP_(CALL)
#endif
#undef DrvLogEnter
#ifdef __INTELLISENSE__
#define DrvLogEnter(IFRLOG) ((void)0)
#else
#define DrvLogEnter WPP_(CALL)
#endif
#undef DrvLogExit
#ifdef __INTELLISENSE__
#define DrvLogExit(IFRLOG) ((void)0)
#else
#define DrvLogExit WPP_(CALL)
#endif
#undef RETURN_IF_FAILED
#ifdef __INTELLISENSE__
#define RETURN_IF_FAILED(RETSTATUS) ((void)0)
#else
#define RETURN_IF_FAILED WPP_(CALL)
#endif
#undef RETURN_NTSTATUS
#ifdef __INTELLISENSE__
#define RETURN_NTSTATUS(RETSTATUS) ((void)0)
#else
#define RETURN_NTSTATUS WPP_(CALL)
#endif
#undef RETURN_NTSTATUS_IF_FAILED
#ifdef __INTELLISENSE__
#define RETURN_NTSTATUS_IF_FAILED(RETSTATUS) ((void)0)
#else
#define RETURN_NTSTATUS_IF_FAILED WPP_(CALL)
#endif
#undef RETURN_NTSTATUS_IF_FAILED_UNLESS_ALLOWED
#ifdef __INTELLISENSE__
#define RETURN_NTSTATUS_IF_FAILED_UNLESS_ALLOWED(RETSTATUS, ALLOWEDSTATUS) ((void)0)
#else
#define RETURN_NTSTATUS_IF_FAILED_UNLESS_ALLOWED WPP_(CALL)
#endif
#undef RETURN_NTSTATUS_IF_FALSE
#ifdef __INTELLISENSE__
#define RETURN_NTSTATUS_IF_FALSE(RETSTATUS, NEGCOND) ((void)0)
#else
#define RETURN_NTSTATUS_IF_FALSE WPP_(CALL)
#endif
#undef RETURN_NTSTATUS_IF_NULL
#ifdef __INTELLISENSE__
#define RETURN_NTSTATUS_IF_NULL(RETSTATUS, RETPTR) ((void)0)
#else
#define RETURN_NTSTATUS_IF_NULL WPP_(CALL)
#endif
#undef RETURN_NTSTATUS_IF_NULL_ALLOC
#ifdef __INTELLISENSE__
#define RETURN_NTSTATUS_IF_NULL_ALLOC(RETPTR) ((void)0)
#else
#define RETURN_NTSTATUS_IF_NULL_ALLOC WPP_(CALL)
#endif
#undef RETURN_NTSTATUS_IF_TRUE
#ifdef __INTELLISENSE__
#define RETURN_NTSTATUS_IF_TRUE(POSCOND, RETSTATUS) ((void)0)
#else
#define RETURN_NTSTATUS_IF_TRUE WPP_(CALL)
#endif
#undef TRACE_FAILURE_INFO
#ifdef __INTELLISENSE__
#define TRACE_FAILURE_INFO(LEVEL, FLAGS, FI) ((void)0)
#else
#define TRACE_FAILURE_INFO WPP_(CALL)
#endif
#undef TRACE_FUNCTION_ENTRY
#ifdef __INTELLISENSE__
#define TRACE_FUNCTION_ENTRY(LEVEL, FLAGS) ((void)0)
#else
#define TRACE_FUNCTION_ENTRY WPP_(CALL)
#endif
#undef TRACE_FUNCTION_EXIT
#ifdef __INTELLISENSE__
#define TRACE_FUNCTION_EXIT(LEVEL, FLAGS) ((void)0)
#else
#define TRACE_FUNCTION_EXIT WPP_(CALL)
#endif
#undef TRACE_FUNCTION_EXIT_DWORD
#ifdef __INTELLISENSE__
#define TRACE_FUNCTION_EXIT_DWORD(LEVEL, FLAGS, RETVAL) ((void)0)
#else
#define TRACE_FUNCTION_EXIT_DWORD WPP_(CALL)
#endif
#undef TRACE_FUNCTION_EXIT_HR
#ifdef __INTELLISENSE__
#define TRACE_FUNCTION_EXIT_HR(LEVEL, FLAGS, HR) ((void)0)
#else
#define TRACE_FUNCTION_EXIT_HR WPP_(CALL)
#endif
#undef TRACE_FUNCTION_EXIT_PTR
#ifdef __INTELLISENSE__
#define TRACE_FUNCTION_EXIT_PTR(LEVEL, FLAGS, RETVAL) ((void)0)
#else
#define TRACE_FUNCTION_EXIT_PTR WPP_(CALL)
#endif
#undef TRACE_FUNCTION_EXIT_STATUS
#ifdef __INTELLISENSE__
#define TRACE_FUNCTION_EXIT_STATUS(LEVEL, FLAGS, STATUS) ((void)0)
#else
#define TRACE_FUNCTION_EXIT_STATUS WPP_(CALL)
#endif
#undef TRACE_METHOD_ENTRY
#ifdef __INTELLISENSE__
#define TRACE_METHOD_ENTRY(LEVEL, FLAGS) ((void)0)
#else
#define TRACE_METHOD_ENTRY WPP_(CALL)
#endif
#undef TRACE_METHOD_EXIT
#ifdef __INTELLISENSE__
#define TRACE_METHOD_EXIT(LEVEL, FLAGS) ((void)0)
#else
#define TRACE_METHOD_EXIT WPP_(CALL)
#endif
#undef TRACE_METHOD_EXIT_DWORD
#ifdef __INTELLISENSE__
#define TRACE_METHOD_EXIT_DWORD(LEVEL, FLAGS, RETVAL) ((void)0)
#else
#define TRACE_METHOD_EXIT_DWORD WPP_(CALL)
#endif
#undef TRACE_METHOD_EXIT_HR
#ifdef __INTELLISENSE__
#define TRACE_METHOD_EXIT_HR(LEVEL, FLAGS, HR) ((void)0)
#else
#define TRACE_METHOD_EXIT_HR WPP_(CALL)
#endif
#undef TRACE_METHOD_EXIT_PTR
#ifdef __INTELLISENSE__
#define TRACE_METHOD_EXIT_PTR(LEVEL, FLAGS, RETVAL) ((void)0)
#else
#define TRACE_METHOD_EXIT_PTR WPP_(CALL)
#endif
#undef TRACE_METHOD_EXIT_STATUS
#ifdef __INTELLISENSE__
#define TRACE_METHOD_EXIT_STATUS(LEVEL, FLAGS, STATUS) ((void)0)
#else
#define TRACE_METHOD_EXIT_STATUS WPP_(CALL)
#endif

#ifdef __cplusplus
} // extern "C"
#endif


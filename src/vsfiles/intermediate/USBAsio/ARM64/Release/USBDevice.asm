; Listing generated by Microsoft (R) Optimizing Compiler Version 19.44.35216.0 

	TTL	g:\github\microsoft\low-latency-audio\src\vsfiles\intermediate\usbasio\arm64\release\usbdevice.obj
	;ARM64

	AREA	|.drectve|, DRECTVE

	IMPORT	|__imp_SetupDiGetDeviceRegistryPropertyA|
	IMPORT	|_stricmp|
	IMPORT	|__imp_CreateFileA|
	IMPORT	|__imp_StrStrIA|
	IMPORT	|__imp_SetupDiGetDeviceInterfaceDetailA|
	IMPORT	|__imp_DeviceIoControl|
	IMPORT	|__imp_SetupDiGetClassDevsA|
	IMPORT	|__imp_SetupDiEnumDeviceInterfaces|
	IMPORT	|__imp_SetupDiDestroyDeviceInfoList|
	EXPORT	|?toInt@@YAHW4KsPropertyUACLowLatencyAudio@@@Z| ; toInt
	EXPORT	|?OpenUsbDevice@@YAPEAXQEAU_GUID@@PEBD11@Z| ; OpenUsbDevice
	EXPORT	|?ChangeSampleRate@@YAHPEAXK@Z|		; ChangeSampleRate
	EXPORT	|?SetAsioBuffer@@YAHPEAXPEAEK1K@Z|	; SetAsioBuffer
	EXPORT	|?GetAsioOwnership@@YAHPEAX@Z|		; GetAsioOwnership
	EXPORT	|?StopAsioStream@@YAHPEAX@Z|		; StopAsioStream
	EXPORT	|?SetClockSource@@YAHPEAXK@Z|		; SetClockSource
	EXPORT	|?GetClockInfo@@YAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| ; GetClockInfo
	EXPORT	|?SetFlags@@YAHPEAXAEBUUAC_SET_FLAGS_CONTEXT_@@@Z| ; SetFlags
	EXPORT	|?StartAsioStream@@YAHPEAX@Z|		; StartAsioStream
	EXPORT	|?UnsetAsioBuffer@@YAHPEAX@Z|		; UnsetAsioBuffer
	EXPORT	|?ReleaseAsioOwnership@@YAHPEAX@Z|	; ReleaseAsioOwnership
	EXPORT	|?SetSampleFormat@@YAHPEAXK@Z|		; SetSampleFormat
	EXPORT	|?GetChannelInfo@@YAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| ; GetChannelInfo
	EXPORT	|?GetAudioProperty@@YAHPEAXPEAU_UAC_AUDIO_PROPERTY@@@Z| ; GetAudioProperty

	AREA	|.pdata|, PDATA
|$pdata$?OpenUsbDeviceCore@@YAPEAXQEAU_GUID@@PEBD11@Z| DCD |?OpenUsbDeviceCore@@YAPEAXQEAU_GUID@@PEBD11@Z|
	DCD	|$unwind$?OpenUsbDeviceCore@@YAPEAXQEAU_GUID@@PEBD11@Z|

	AREA	|.pdata|, PDATA
|$pdata$?OpenUsbDevice@@YAPEAXQEAU_GUID@@PEBD11@Z| DCD |$LN10|
	DCD	0x1610035
	;Flags[SingleProEpi] functionLength[52] RegF[0] RegI[1] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$?ChangeSampleRate@@YAHPEAXK@Z| DCD |$LN6|
	DCD	|$unwind$?ChangeSampleRate@@YAHPEAXK@Z|

	AREA	|.pdata|, PDATA
|$pdata$?SetAsioBuffer@@YAHPEAXPEAEK1K@Z| DCD |$LN10|
	DCD	|$unwind$?SetAsioBuffer@@YAHPEAXPEAEK1K@Z|

	AREA	|.pdata|, PDATA
|$pdata$?GetAsioOwnership@@YAHPEAX@Z| DCD |$LN6|
	DCD	|$unwind$?GetAsioOwnership@@YAHPEAX@Z|

	AREA	|.pdata|, PDATA
|$pdata$?StopAsioStream@@YAHPEAX@Z| DCD |$LN6|
	DCD	|$unwind$?StopAsioStream@@YAHPEAX@Z|

	AREA	|.pdata|, PDATA
|$pdata$?SetClockSource@@YAHPEAXK@Z| DCD |$LN6|
	DCD	|$unwind$?SetClockSource@@YAHPEAXK@Z|

	AREA	|.pdata|, PDATA
|$pdata$?GetClockInfo@@YAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| DCD |$LN15|
	DCD	|$unwind$?GetClockInfo@@YAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$0$?GetClockInfo@@YAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| DCD |$LN15|+44
	DCD	|$unwind$0$?GetClockInfo@@YAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$1$?GetClockInfo@@YAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| DCD |$LN15|+276
	DCD	|$unwind$1$?GetClockInfo@@YAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$?SetFlags@@YAHPEAXAEBUUAC_SET_FLAGS_CONTEXT_@@@Z| DCD |$LN6|
	DCD	|$unwind$?SetFlags@@YAHPEAXAEBUUAC_SET_FLAGS_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$?StartAsioStream@@YAHPEAX@Z| DCD |$LN6|
	DCD	|$unwind$?StartAsioStream@@YAHPEAX@Z|

	AREA	|.pdata|, PDATA
|$pdata$?UnsetAsioBuffer@@YAHPEAX@Z| DCD |$LN6|
	DCD	|$unwind$?UnsetAsioBuffer@@YAHPEAX@Z|

	AREA	|.pdata|, PDATA
|$pdata$?ReleaseAsioOwnership@@YAHPEAX@Z| DCD |$LN6|
	DCD	|$unwind$?ReleaseAsioOwnership@@YAHPEAX@Z|

	AREA	|.pdata|, PDATA
|$pdata$?SetSampleFormat@@YAHPEAXK@Z| DCD |$LN6|
	DCD	|$unwind$?SetSampleFormat@@YAHPEAXK@Z|

	AREA	|.pdata|, PDATA
|$pdata$?GetChannelInfo@@YAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| DCD |$LN14|
	DCD	|$unwind$?GetChannelInfo@@YAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$0$?GetChannelInfo@@YAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| DCD |$LN14|+44
	DCD	|$unwind$0$?GetChannelInfo@@YAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$1$?GetChannelInfo@@YAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| DCD |$LN14|+264
	DCD	|$unwind$1$?GetChannelInfo@@YAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$?GetAudioProperty@@YAHPEAXPEAU_UAC_AUDIO_PROPERTY@@@Z| DCD |$LN6|
	DCD	|$unwind$?GetAudioProperty@@YAHPEAXPEAU_UAC_AUDIO_PROPERTY@@@Z|

	AREA	|.xdata|, DATA
|$unwind$?GetAudioProperty@@YAHPEAXPEAU_UAC_AUDIO_PROPERTY@@@Z| DCD 0x1130001a
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[26]=104 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$1$?GetChannelInfo@@YAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| DCD 0x19700004
	DCD	0x85e101e5
	DCD	0x850103e4
	DCD	0xe3e3e3e4
	DCD	|__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[3], Epilog Start Index[5], E[1], X[1], Function Length[4]=16 bytes
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$0$?GetChannelInfo@@YAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| DCD 0x18500037
	DCD	0x35
	DCD	0xac88cd0
	DCD	0x85e101e5
	DCD	0xe3e3e3e4
	DCD	|__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[3], Epilog Count[1], E[0], X[1], Function Length[55]=220 bytes
	;Epilog Start Index[0], Epilog Start Offset[53]=212 bytes
	;save_reg
	;save_regp
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$?GetChannelInfo@@YAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| DCD 0x1130000b
	DCD	0xe485e101
	DCD	0xe4850103
	DCD	|__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[11]=44 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?SetSampleFormat@@YAHPEAXK@Z| DCD 0x1130001b
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[27]=108 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?ReleaseAsioOwnership@@YAHPEAX@Z| DCD 0x1130001b
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[27]=108 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?UnsetAsioBuffer@@YAHPEAX@Z| DCD 0x1130001b
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[27]=108 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?StartAsioStream@@YAHPEAX@Z| DCD 0x1130001b
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[27]=108 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?SetFlags@@YAHPEAXAEBUUAC_SET_FLAGS_CONTEXT_@@@Z| DCD 0x11300023
	DCD	0xe481e101
	DCD	0xe4810107
	DCD	|__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[35]=140 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$1$?GetClockInfo@@YAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| DCD 0x19700004
	DCD	0x85e101e5
	DCD	0x850103e4
	DCD	0xe3e3e3e4
	DCD	|__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[3], Epilog Start Index[5], E[1], X[1], Function Length[4]=16 bytes
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$0$?GetClockInfo@@YAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| DCD 0x1850003a
	DCD	0x38
	DCD	0xac88cd0
	DCD	0x85e101e5
	DCD	0xe3e3e3e4
	DCD	|__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[3], Epilog Count[1], E[0], X[1], Function Length[58]=232 bytes
	;Epilog Start Index[0], Epilog Start Offset[56]=224 bytes
	;save_reg
	;save_regp
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$?GetClockInfo@@YAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| DCD 0x1130000b
	DCD	0xe485e101
	DCD	0xe4850103
	DCD	|__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[11]=44 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?SetClockSource@@YAHPEAXK@Z| DCD 0x1130001b
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[27]=108 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?StopAsioStream@@YAHPEAX@Z| DCD 0x1130001b
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[27]=108 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?GetAsioOwnership@@YAHPEAX@Z| DCD 0x1130001b
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[27]=108 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?SetAsioBuffer@@YAHPEAXPEAEK1K@Z| DCD 0x1130001e
	DCD	0xe481e101
	DCD	0xe3e48101
	DCD	|__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[30]=120 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;save_fplr_x
	;end
	;nop

	AREA	|.xdata|, DATA
|$unwind$?ChangeSampleRate@@YAHPEAXK@Z| DCD 0x1130001b
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[27]=108 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?OpenUsbDeviceCore@@YAPEAXQEAU_GUID@@PEBD11@Z| DCD 0x405000ad
	DCD	0x3800098
	DCD	0xacae101
	DCD	0x6c988c9
	DCD	0x2c884c8
	DCD	0x29c0e48b
	DCD	0xc90aca01
	DCD	0xc806c988
	DCD	0x8b02c884
	DCD	0xe3e3e3e4
	DCD	|__GSHandlerCheck|
	DCD	0xffffff98
	;Code Words[8], Epilog Count[1], E[0], X[1], Function Length[173]=692 bytes
	;Epilog Start Index[14], Epilog Start Offset[152]=608 bytes
	;alloc_s
	;set_fp
	;save_regp
	;save_regp
	;save_regp
	;save_regp
	;save_regp
	;save_fplr_x
	;end
	;alloc_m
	;alloc_s
	;save_regp
	;save_regp
	;save_regp
	;save_regp
	;save_regp
	;save_fplr_x
	;end
	;nop
	;nop
	;nop
; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?GetAudioProperty@@YAHPEAXPEAU_UAC_AUDIO_PROPERTY@@@Z| PROC ; GetAudioProperty

; 172  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x30
	mov         x4,x1

; 173  :     BOOL       result = FALSE;
; 174  :     KSPROPERTY privateProperty{};
; 175  :     ULONG      bytesReturned = 0;

	str         wzr,[sp]

; 176  : 
; 177  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 178  :     privateProperty.Flags = KSPROPERTY_TYPE_GET;
; 179  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::GetAudioProperty);
; 180  : 
; 181  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), audioProperty, sizeof(UAC_AUDIO_PROPERTY), &bytesReturned, nullptr);

	mov         x7,#0
	mov         x6,sp
	mov         w5,#0x198
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q16,[x8]
	mov         x8,#0x100000000
	str         x8,[sp,#0x20]
	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	str         q16,[sp,#0x10]
	blr         x8
	add         sp,sp,#0x30
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?GetAudioProperty@@YAHPEAXPEAU_UAC_AUDIO_PROPERTY@@@Z|, GetAudioProperty

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?GetChannelInfo@@YAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| PROC ; GetChannelInfo

; 191  : {

|$LN14|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x30

; 192  :     BOOL       result = FALSE;
; 193  :     KSPROPERTY privateProperty{};
; 194  :     ULONG      bytesReturned = 0;

	str         wzr,[sp]

; 195  : 
; 196  :     if (channelInfo == nullptr)

	cbnz        x1,|$LN11@GetChannel|

; 197  :     {
; 198  :         return result;

	mov         w0,#0
	add         sp,sp,#0x30
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x30
	ret
|$LN11@GetChannel|
	stp         x19,x20,[sp,#0x50]
	str         x21,[sp,#0x60]

; 195  : 
; 196  :     if (channelInfo == nullptr)

	mov         x21,x0
	mov         x20,x1

; 199  :     }
; 200  : 
; 201  :     *channelInfo = {};

	str         xzr,[x20]

; 202  : 
; 203  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;

	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q16,[x8]
	str         q16,[sp,#0x10]

; 204  :     privateProperty.Flags = KSPROPERTY_TYPE_GET;
; 205  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::GetChannelInfo);

	movi        x8,#0x100000001
	str         x8,[sp,#0x20]

; 206  : 
; 207  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	mov         x0,x21
	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	blr         x8
	mov         w19,w0

; 208  : 
; 209  :     if (!result)

	cbnz        w19,|$LN7@GetChannel|

; 210  :     {
; 211  :         DWORD error = GetLastError();

	adrp        x8,__imp_GetLastError
	ldr         x8,[x8,__imp_GetLastError]
	blr         x8
	mov         w8,#0x54

; 212  :         if ((error == ERROR_MORE_DATA) && (bytesReturned >= sizeof(UAC_GET_CHANNEL_INFO_CONTEXT)))

	cmp         w0,#0xEA
	ldr         w0,[sp]
	ccmpeq      w0,w8,#0
	blo         |$LN7@GetChannel|

; 213  :         {
; 214  :             *channelInfo = (PUAC_GET_CHANNEL_INFO_CONTEXT)(new BYTE[bytesReturned]);

	bl          |??_U@YAPEAX_K@Z|

; 215  :             if (channelInfo != nullptr)
; 216  :             {
; 217  :                 result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), *channelInfo, bytesReturned, &bytesReturned, nullptr);

	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	ldr         w5,[sp]
	str         x0,[x20]
	mov         x4,x0
	mov         x7,#0
	mov         x6,sp
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	mov         x0,x21
	blr         x8
	mov         w19,w0

; 218  :                 if (!result)

	cbnz        w19,|$LN7@GetChannel|

; 219  :                 {
; 220  :                     delete[] (BYTE *)(*channelInfo);

	ldr         x0,[x20]
	bl          |??_V@YAXPEAX@Z|

; 221  :                     *channelInfo = nullptr;

	str         xzr,[x20]
|$LN7@GetChannel|

; 222  :                 }
; 223  :             }
; 224  :             else
; 225  :             {
; 226  :                 result = FALSE;
; 227  :             }
; 228  :         }
; 229  :     }
; 230  : 
; 231  :     return result;

	mov         w0,w19
	ldr         x21,[sp,#0x60]
	ldp         x19,x20,[sp,#0x50]
	add         sp,sp,#0x30
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |?GetChannelInfo@@YAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z|, GetChannelInfo

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?SetSampleFormat@@YAHPEAXK@Z| PROC			; SetSampleFormat

; 331  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x30

; 332  :     BOOL       result = FALSE;
; 333  :     KSPROPERTY privateProperty{};
; 334  :     ULONG      bytesReturned = 0;
; 335  : 
; 336  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 337  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 338  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::SetSampleFormat);
; 339  : 
; 340  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), &sampleFormat, sizeof(ULONG), &bytesReturned, nullptr);

	mov         x7,#0
	stp         wzr,w1,[sp]
	mov         x6,sp
	mov         w5,#4
	add         x4,sp,#4
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q16,[x8]
	mov         x8,#6
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	str         q16,[sp,#0x10]
	blr         x8
	add         sp,sp,#0x30
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?SetSampleFormat@@YAHPEAXK@Z|, SetSampleFormat

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?ReleaseAsioOwnership@@YAHPEAX@Z| PROC			; ReleaseAsioOwnership

; 465  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x30

; 466  :     BOOL       result = FALSE;
; 467  :     KSPROPERTY privateProperty{};
; 468  :     ULONG      bytesReturned = 0;
; 469  : 
; 470  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 471  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 472  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::ReleaseAsioOwnership);
; 473  : 
; 474  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	str         wzr,[sp]
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q16,[x8]
	mov         x8,#0xD
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	str         q16,[sp,#0x10]
	blr         x8
	add         sp,sp,#0x30
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?ReleaseAsioOwnership@@YAHPEAX@Z|, ReleaseAsioOwnership

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?UnsetAsioBuffer@@YAHPEAX@Z| PROC			; UnsetAsioBuffer

; 447  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x30

; 448  :     BOOL       result = FALSE;
; 449  :     KSPROPERTY privateProperty{};
; 450  :     ULONG      bytesReturned = 0;
; 451  : 
; 452  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 453  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 454  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::UnsetAsioBuffer);
; 455  : 
; 456  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	str         wzr,[sp]
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q16,[x8]
	mov         x8,#0xC
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	str         q16,[sp,#0x10]
	blr         x8
	add         sp,sp,#0x30
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?UnsetAsioBuffer@@YAHPEAX@Z|, UnsetAsioBuffer

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?StartAsioStream@@YAHPEAX@Z| PROC			; StartAsioStream

; 386  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x30

; 387  :     BOOL       result = FALSE;
; 388  :     KSPROPERTY privateProperty{};
; 389  :     ULONG      bytesReturned = 0;
; 390  : 
; 391  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 392  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 393  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::StartAsioStream);
; 394  : 
; 395  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	str         wzr,[sp]
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q16,[x8]
	mov         x8,#9
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	str         q16,[sp,#0x10]
	blr         x8
	add         sp,sp,#0x30
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?StartAsioStream@@YAHPEAX@Z|, StartAsioStream

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?SetFlags@@YAHPEAXAEBUUAC_SET_FLAGS_CONTEXT_@@@Z| PROC	; SetFlags

; 311  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x70

; 312  :     BOOL                  result = FALSE;
; 313  :     KSPROPERTY            privateProperty{};
; 314  :     ULONG                 bytesReturned = 0;
; 315  :     UAC_SET_FLAGS_CONTEXT setFlagsContext = flags;
; 316  : 
; 317  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 318  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 319  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::SetFlags);
; 320  : 
; 321  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), &setFlagsContext, sizeof(UAC_SET_FLAGS_CONTEXT), &bytesReturned, nullptr);

	mov         x7,#0
	ldr         x8,[x1,#0x30]
	str         wzr,[sp]
	mov         x6,sp
	ldp         q17,q16,[x1]
	mov         w5,#0x3C
	add         x4,sp,#0x30
	mov         w3,#0x18
	str         x8,[sp,#0x60]
	ldr         w8,[x1,#0x38]
	add         x2,sp,#0x10
	stp         q17,q16,[sp,#0x30]
	ldr         q16,[x1,#0x20]
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	str         w8,[sp,#0x68]
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	str         q16,[sp,#0x50]
	ldr         q16,[x8]
	mov         x8,#5
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	str         q16,[sp,#0x10]
	blr         x8
	add         sp,sp,#0x70
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?SetFlags@@YAHPEAXAEBUUAC_SET_FLAGS_CONTEXT_@@@Z|, SetFlags

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?GetClockInfo@@YAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| PROC ; GetClockInfo

; 239  : {

|$LN15|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x30

; 240  :     BOOL       result = FALSE;
; 241  :     KSPROPERTY privateProperty{};
; 242  :     ULONG      bytesReturned = 0;

	str         wzr,[sp]

; 243  : 
; 244  :     if (clockInfo == nullptr)

	cbnz        x1,|$LN12@GetClockIn|

; 245  :     {
; 246  :         return result;

	mov         w0,#0
	add         sp,sp,#0x30
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x30
	ret
|$LN12@GetClockIn|
	stp         x19,x20,[sp,#0x50]
	str         x21,[sp,#0x60]

; 243  : 
; 244  :     if (clockInfo == nullptr)

	mov         x21,x0
	mov         x20,x1

; 247  :     }
; 248  : 
; 249  :     *clockInfo = {};

	str         xzr,[x20]

; 250  : 
; 251  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;

	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q16,[x8]
	str         q16,[sp,#0x10]

; 252  :     privateProperty.Flags = KSPROPERTY_TYPE_GET;
; 253  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::GetClockInfo);

	mov         x8,#2
	movk        x8,#1,lsl #0x20
	str         x8,[sp,#0x20]

; 254  : 
; 255  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	mov         x0,x21
	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	blr         x8
	mov         w19,w0

; 256  : 
; 257  :     if (!result)

	cbnz        w19,|$LN5@GetClockIn|

; 258  :     {
; 259  :         DWORD error = GetLastError();

	adrp        x8,__imp_GetLastError
	ldr         x8,[x8,__imp_GetLastError]
	blr         x8
	mov         w8,#0x58

; 260  :         if ((error == ERROR_MORE_DATA) && (bytesReturned >= sizeof(UAC_GET_CLOCK_INFO_CONTEXT)))

	cmp         w0,#0xEA
	ldr         w0,[sp]
	ccmpeq      w0,w8,#0
	blo         |$LN4@GetClockIn|

; 261  :         {
; 262  :             *clockInfo = (PUAC_GET_CLOCK_INFO_CONTEXT)(new BYTE[bytesReturned]);

	bl          |??_U@YAPEAX_K@Z|

; 263  :             if (clockInfo != nullptr)
; 264  :             {
; 265  :                 result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), *clockInfo, bytesReturned, &bytesReturned, nullptr);

	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	ldr         w5,[sp]
	str         x0,[x20]
	mov         x4,x0
	mov         x7,#0
	mov         x6,sp
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	mov         x0,x21
	blr         x8
	mov         w19,w0

; 266  :                 if (!result)

	cbnz        w19,|$LN5@GetClockIn|

; 267  :                 {
; 268  :                     delete[] (BYTE *)(*clockInfo);

	ldr         x0,[x20]
	bl          |??_V@YAXPEAX@Z|

; 269  :                     *clockInfo = nullptr;

	str         xzr,[x20]

; 270  :                 }
; 271  :             }
; 272  :             else
; 273  :             {
; 274  :                 result = FALSE;
; 275  :             }
; 276  :         }

	b           |$LN5@GetClockIn|
|$LN4@GetClockIn|

; 277  :         else
; 278  :         {
; 279  :             result = FALSE;

	mov         w19,#0
|$LN5@GetClockIn|

; 280  :         }
; 281  :     }
; 282  : 
; 283  :     return result;

	mov         w0,w19
	ldr         x21,[sp,#0x60]
	ldp         x19,x20,[sp,#0x50]
	add         sp,sp,#0x30
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |?GetClockInfo@@YAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z|, GetClockInfo

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?SetClockSource@@YAHPEAXK@Z| PROC			; SetClockSource

; 291  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x30

; 292  :     BOOL                         result = FALSE;
; 293  :     KSPROPERTY                   privateProperty{};
; 294  :     ULONG                        bytesReturned = 0;
; 295  :     UAC_SET_CLOCK_SOURCE_CONTEXT setClockSourceContext = {index};
; 296  : 
; 297  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 298  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 299  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::SetClockSource);
; 300  : 
; 301  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), &setClockSourceContext, sizeof(UAC_SET_CLOCK_SOURCE_CONTEXT), &bytesReturned, nullptr);

	mov         x7,#0
	stp         wzr,w1,[sp]
	mov         x6,sp
	mov         w5,#4
	add         x4,sp,#4
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q16,[x8]
	mov         x8,#4
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	str         q16,[sp,#0x10]
	blr         x8
	add         sp,sp,#0x30
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?SetClockSource@@YAHPEAXK@Z|, SetClockSource

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?StopAsioStream@@YAHPEAX@Z| PROC			; StopAsioStream

; 404  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x30

; 405  :     BOOL       result = FALSE;
; 406  :     KSPROPERTY privateProperty{};
; 407  :     ULONG      bytesReturned = 0;
; 408  : 
; 409  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 410  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 411  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::StopAsioStream);
; 412  : 
; 413  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	str         wzr,[sp]
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q16,[x8]
	mov         x8,#0xA
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	str         q16,[sp,#0x10]
	blr         x8
	add         sp,sp,#0x30
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?StopAsioStream@@YAHPEAX@Z|, StopAsioStream

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?GetAsioOwnership@@YAHPEAX@Z| PROC			; GetAsioOwnership

; 368  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x30

; 369  :     BOOL       result = FALSE;
; 370  :     KSPROPERTY privateProperty{};
; 371  :     ULONG      bytesReturned = 0;
; 372  : 
; 373  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 374  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 375  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::GetAsioOwnership);
; 376  : 
; 377  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	str         wzr,[sp]
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q16,[x8]
	mov         x8,#8
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	str         q16,[sp,#0x10]
	blr         x8
	add         sp,sp,#0x30
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?GetAsioOwnership@@YAHPEAX@Z|, GetAsioOwnership

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?SetAsioBuffer@@YAHPEAXPEAEK1K@Z| PROC			; SetAsioBuffer

; 426  : {

|$LN10|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          __security_push_cookie
	mov         x8,x0

; 427  :     BOOL        result = FALSE;
; 428  :     PKSPROPERTY privateProperty = (PKSPROPERTY)driverPlayBufferWithKsProperty;
; 429  :     ULONG       bytesReturned = 0;

	str         wzr,[sp]
	mov         w0,#0

; 430  : 
; 431  :     if (driverPlayBufferWithKsPropertySize > sizeof(KSPROPERTY))

	cmp         w2,#0x18
	bls         |$LN8@SetAsioBuf|
	mov         x0,x8

; 432  :     {
; 433  :         privateProperty->Set = KSPROPSETID_LowLatencyAudio;

	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q16,[x8]

; 434  :         privateProperty->Flags = KSPROPERTY_TYPE_SET;
; 435  :         privateProperty->Id = toInt(KsPropertyUACLowLatencyAudio::SetAsioBuffer);

	mov         x8,#0xB
	movk        x8,#2,lsl #0x20
	mov         w5,w4
	str         x8,[x1,#0x10]

; 436  : 
; 437  :         result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, privateProperty, driverPlayBufferWithKsPropertySize, driverRecBuffer, driverRecBufferSize, &bytesReturned, nullptr);

	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	mov         x4,x3
	str         q16,[x1]
	mov         w3,w2
	mov         x2,x1
	mov         x7,#0
	mov         x6,sp
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	blr         x8
|$LN8@SetAsioBuf|
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?SetAsioBuffer@@YAHPEAXPEAEK1K@Z|, SetAsioBuffer

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?ChangeSampleRate@@YAHPEAXK@Z| PROC			; ChangeSampleRate

; 350  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x30

; 351  :     BOOL       result = FALSE;
; 352  :     KSPROPERTY privateProperty{};
; 353  :     ULONG      bytesReturned = 0;
; 354  : 
; 355  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 356  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 357  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::ChangeSampleRate);
; 358  : 
; 359  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), &sampleRate, sizeof(ULONG), &bytesReturned, nullptr);

	mov         x7,#0
	stp         wzr,w1,[sp]
	mov         x6,sp
	mov         w5,#4
	add         x4,sp,#4
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q16,[x8]
	mov         x8,#7
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	str         q16,[sp,#0x10]
	blr         x8
	add         sp,sp,#0x30
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?ChangeSampleRate@@YAHPEAXK@Z|, ChangeSampleRate

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?OpenUsbDevice@@YAPEAXQEAU_GUID@@PEBD11@Z| PROC	; OpenUsbDevice

; 156  : {

|$LN10|
	str         x19,[sp,#-0x10]!
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	mov         x19,x3

; 157  :     HANDLE targetHandle = OpenUsbDeviceCore(classGuid, serviceName, referenceString, desiredPath);

	bl          |?OpenUsbDeviceCore@@YAPEAXQEAU_GUID@@PEBD11@Z|

; 158  : 
; 159  :     if ((targetHandle == INVALID_HANDLE_VALUE) && (desiredPath != nullptr))

	cmn         x0,#1
	ccmpeq      x19,#0,#4
	beq         |$LN8@OpenUsbDev|

; 160  :     {
; 161  :         // force open
; 162  :         targetHandle = OpenUsbDeviceCore(classGuid, serviceName, referenceString, nullptr);

	mov         x3,#0
	bl          |?OpenUsbDeviceCore@@YAPEAXQEAU_GUID@@PEBD11@Z|
|$LN8@OpenUsbDev|
	ldp         fp,lr,[sp],#0x10
	ldr         x19,[sp],#0x10
	ret

	ENDP  ; |?OpenUsbDevice@@YAPEAXQEAU_GUID@@PEBD11@Z|, OpenUsbDevice

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\shared\UAC_User.h

	AREA	|.text$mn|, CODE, ARM64

|?toInt@@YAHW4KsPropertyUACLowLatencyAudio@@@Z| PROC	; toInt

; 125  : {

	ret

	ENDP  ; |?toInt@@YAHW4KsPropertyUACLowLatencyAudio@@@Z|, toInt

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?OpenUsbDeviceCore@@YAPEAXQEAU_GUID@@PEBD11@Z| PROC	; OpenUsbDeviceCore

; 41   : {

	stp         fp,lr,[sp,#-0x60]!
	stp         x19,x20,[sp,#0x10]
	stp         x21,x22,[sp,#0x20]
	stp         x23,x24,[sp,#0x30]
	stp         x25,x26,[sp,#0x40]
	stp         x27,x28,[sp,#0x50]
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x290

; 42   :     BOOL result = FALSE;
; 43   : 
; 44   :     HDEVINFO deviceInfo = SetupDiGetClassDevs(classGuid, nullptr, nullptr, DIGCF_PRESENT | DIGCF_DEVICEINTERFACE);

	adrp        x8,_GUID_6994ad04_93ef_11d0_a3cc_00a0c9223196
	add         x0,x8,_GUID_6994ad04_93ef_11d0_a3cc_00a0c9223196
	str         x3,[sp]
	adrp        x8,__imp_SetupDiGetClassDevsA
	ldr         x8,[x8,__imp_SetupDiGetClassDevsA]
	mov         w3,#0x12
	mov         x2,#0
	mov         x1,#0
	blr         x8

; 45   : 
; 46   :     if (deviceInfo == INVALID_HANDLE_VALUE)

	cmn         x0,#1
	beq         |$LN44@OpenUsbDev|

; 47   :     {
; 48   :         return INVALID_HANDLE_VALUE;
; 49   :     }
; 50   : 
; 51   :     for (DWORD index = 0;; index++)
; 52   :     {
; 53   :         SP_DEVICE_INTERFACE_DATA deviceInterfaceData;
; 54   :         deviceInterfaceData.cbSize = sizeof(SP_DEVICE_INTERFACE_DATA);
; 55   : 
; 56   :         result = SetupDiEnumDeviceInterfaces(deviceInfo, nullptr, classGuid, index, &deviceInterfaceData);

	adrp        x8,__imp_SetupDiEnumDeviceInterfaces
	ldr         x8,[x8,__imp_SetupDiEnumDeviceInterfaces]
	adrp        x24,_GUID_6994ad04_93ef_11d0_a3cc_00a0c9223196
	add         x2,x24,_GUID_6994ad04_93ef_11d0_a3cc_00a0c9223196
	mov         w22,#0x20
	add         x4,sp,#0x18
	mov         w3,#0
	str         w22,[sp,#0x18]
	mov         x1,#0
	mov         x19,x0
	mov         w20,#0
	blr         x8

; 57   : 
; 58   :         if (!result)

	cbz         w0,|$LN41@OpenUsbDev|
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x28,x8,KSPROPSETID_LowLatencyAudio
	adrp        x26,__imp_SetupDiGetDeviceInterfaceDetailA
	adrp        x25,__imp_GetLastError
	adrp        x27,__imp_SetupDiGetDeviceRegistryPropertyA
|$LL4@OpenUsbDev|

; 61   :             {
; 62   :                 goto OpenUsbDeviceCore_Error;
; 63   :             }
; 64   :             else
; 65   :             {
; 66   :                 break;
; 67   :             }
; 68   :         }
; 69   : 
; 70   :         BOOL            success = TRUE;
; 71   :         DWORD           deviceInterfaceDetailDataSize = 0;
; 72   :         TCHAR           serviceName[128];
; 73   :         SP_DEVINFO_DATA deviceInfoData;
; 74   :         deviceInfoData.cbSize = sizeof(deviceInfoData);
; 75   : 
; 76   :         success = SetupDiGetDeviceInterfaceDetail(deviceInfo, &deviceInterfaceData, nullptr, 0, &deviceInterfaceDetailDataSize, &deviceInfoData);

	ldr         x8,[x26,__imp_SetupDiGetDeviceInterfaceDetailA]
	add         x5,sp,#0x60
	str         wzr,[sp,#8]
	add         x4,sp,#8
	str         w22,[sp,#0x60]
	mov         w3,#0
	mov         x2,#0
	add         x1,sp,#0x18
	mov         x0,x19
	blr         x8

; 77   :         // Check for error.
; 78   :         if ((GetLastError() != ERROR_INSUFFICIENT_BUFFER) || (!deviceInterfaceDetailDataSize))

	ldr         x8,[x25,__imp_GetLastError]
	blr         x8
	ldr         w8,[sp,#8]
	cmp         w0,#0x7A
	mov         x0,x19
	ccmpeq      w8,#0,#4
	beq         |$LN39@OpenUsbDev|

; 81   :             break;
; 82   :         }
; 83   : 
; 84   :         if (SetupDiGetDeviceRegistryProperty(deviceInfo, &deviceInfoData, SPDRP_SERVICE, nullptr, (PBYTE)serviceName, sizeof(serviceName), nullptr))

	ldr         x8,[x27,__imp_SetupDiGetDeviceRegistryPropertyA]
	mov         x6,#0
	mov         w5,#0x80
	add         x4,sp,#0x218
	mov         x3,#0
	mov         w2,#4
	add         x1,sp,#0x60
	blr         x8
	cbz         w0,|$LN2@OpenUsbDev|

; 85   :         {
; 86   :             if (_tcsicmp(serviceName, serviceName) == 0)

	add         x1,sp,#0x218
	add         x0,sp,#0x218
	bl          _stricmp
	cbnz        w0,|$LN2@OpenUsbDev|

; 87   :             {
; 88   :                 // Allocate the buffer for the device interface detail data.
; 89   :                 PSP_DEVICE_INTERFACE_DETAIL_DATA deviceInterfaceDetailData = nullptr;
; 90   : 
; 91   :                 deviceInterfaceDetailData = (PSP_DEVICE_INTERFACE_DETAIL_DATA) new BYTE[deviceInterfaceDetailDataSize];

	ldr         w0,[sp,#8]
	bl          |??_U@YAPEAX_K@Z|

; 92   : 
; 93   :                 if (!deviceInterfaceDetailData)
; 94   :                 {
; 95   :                     break;
; 96   :                 }
; 97   :                 (deviceInterfaceDetailData)->cbSize = sizeof(SP_DEVICE_INTERFACE_DETAIL_DATA);

	mov         w8,#8
	mov         x21,x0
	str         w8,[x21]

; 98   : 
; 99   :                 if (SetupDiGetDeviceInterfaceDetail(deviceInfo, &deviceInterfaceData, deviceInterfaceDetailData, deviceInterfaceDetailDataSize, nullptr, nullptr))

	adrp        x8,__imp_SetupDiGetDeviceInterfaceDetailA
	ldr         x8,[x8,__imp_SetupDiGetDeviceInterfaceDetailA]
	ldr         w3,[sp,#8]
	mov         x5,#0
	mov         x4,#0
	mov         x2,x21
	add         x1,sp,#0x18
	mov         x0,x19
	blr         x8
	cbz         w0,|$LN21@OpenUsbDev|

; 100  :                 {
; 101  :                     info_print_("compare %s, %s\n", deviceInterfaceDetailData->DevicePath, referenceString);
; 102  :                     if (StrStrI(deviceInterfaceDetailData->DevicePath, referenceString) != nullptr)

	adrp        x8,|??_C@_0O@LGMBKNOO@RenderDevice0@|
	add         x1,x8,|??_C@_0O@LGMBKNOO@RenderDevice0@|
	adrp        x8,__imp_StrStrIA
	ldr         x8,[x8,__imp_StrStrIA]
	add         x0,x21,#4
	blr         x8
	cbz         x0,|$LN21@OpenUsbDev|

; 103  :                     {
; 104  :                         if ((desiredPath == nullptr) || ((desiredPath != nullptr && _tcsicmp(deviceInterfaceDetailData->DevicePath, desiredPath) == 0)))

	ldr         x1,[sp]
	cbz         x1,|$LN18@OpenUsbDev|
	add         x0,x21,#4
	bl          _stricmp
	cbnz        w0,|$LN21@OpenUsbDev|
|$LN18@OpenUsbDev|

; 105  :                         {
; 106  :                             HANDLE targetHandle = CreateFile(deviceInterfaceDetailData->DevicePath, GENERIC_READ, FILE_SHARE_READ | FILE_SHARE_WRITE, nullptr, OPEN_EXISTING, 0, nullptr);

	adrp        x8,__imp_CreateFileA
	ldr         x8,[x8,__imp_CreateFileA]
	mov         x6,#0
	mov         w5,#0
	mov         w4,#3
	mov         x3,#0
	mov         w2,#3
	mov         w1,#0x80000000
	add         x0,x21,#4
	blr         x8
	mov         x23,x0

; 107  : 
; 108  :                             if (targetHandle != INVALID_HANDLE_VALUE)

	cmn         x23,#1
	beq         |$LN21@OpenUsbDev|

; 179  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::GetAudioProperty);

	mov         x8,#0x100000000
	ldr         q16,[x28]
	str         x8,[sp,#0x50]

; 180  : 
; 181  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), audioProperty, sizeof(UAC_AUDIO_PROPERTY), &bytesReturned, nullptr);

	adrp        x8,__imp_DeviceIoControl
	ldr         x8,[x8,__imp_DeviceIoControl]
	mov         x7,#0
	str         wzr,[sp,#0x10]
	add         x6,sp,#0x10
	mov         w5,#0x198
	str         q16,[sp,#0x40]
	add         x4,sp,#0x80
	mov         w3,#0x18
	add         x2,sp,#0x40
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	blr         x8

; 109  :                             {
; 110  :                                 UAC_AUDIO_PROPERTY audioProp;
; 111  :                                 result = GetAudioProperty(targetHandle, &audioProp);
; 112  :                                 if (result && (audioProp.OutputAsioChannels != 0))

	cbz         w0,|$LN20@OpenUsbDev|
	ldr         w8,[sp,#0x1DC]
	cbnz        w8,|$LN40@OpenUsbDev|
|$LN20@OpenUsbDev|

; 120  :                                 }
; 121  :                                 else
; 122  :                                 {
; 123  :                                     CloseHandle(targetHandle);

	adrp        x8,__imp_CloseHandle
	ldr         x8,[x8,__imp_CloseHandle]
	mov         x0,x23
	blr         x8
|$LN21@OpenUsbDev|

; 124  :                                     targetHandle = INVALID_HANDLE_VALUE;
; 125  :                                 }
; 126  :                             }
; 127  :                         }
; 128  :                     }
; 129  :                 }
; 130  :                 if (deviceInterfaceDetailData != nullptr)
; 131  :                 {
; 132  :                     delete[] (BYTE *)deviceInterfaceDetailData;

	mov         x0,x21
	bl          |??_V@YAXPEAX@Z|
|$LN2@OpenUsbDev|

; 47   :     {
; 48   :         return INVALID_HANDLE_VALUE;
; 49   :     }
; 50   : 
; 51   :     for (DWORD index = 0;; index++)
; 52   :     {
; 53   :         SP_DEVICE_INTERFACE_DATA deviceInterfaceData;
; 54   :         deviceInterfaceData.cbSize = sizeof(SP_DEVICE_INTERFACE_DATA);
; 55   : 
; 56   :         result = SetupDiEnumDeviceInterfaces(deviceInfo, nullptr, classGuid, index, &deviceInterfaceData);

	adrp        x8,__imp_SetupDiEnumDeviceInterfaces
	ldr         x8,[x8,__imp_SetupDiEnumDeviceInterfaces]
	str         w22,[sp,#0x18]
	add         w20,w20,#1
	add         x4,sp,#0x18
	mov         w3,w20
	add         x2,x24,_GUID_6994ad04_93ef_11d0_a3cc_00a0c9223196
	mov         x1,#0
	mov         x0,x19
	blr         x8

; 57   : 
; 58   :         if (!result)

	cbnz        w0,|$LL4@OpenUsbDev|
|$LN41@OpenUsbDev|

; 59   :         {
; 60   :             if (ERROR_NO_MORE_ITEMS != GetLastError())

	adrp        x8,__imp_GetLastError
	ldr         x8,[x8,__imp_GetLastError]
	blr         x8
|$OpenUsbDeviceCore_Error$46|

; 133  :                     deviceInterfaceDetailData = nullptr;
; 134  :                 }
; 135  :             }
; 136  :         }
; 137  :     }
; 138  : 
; 139  : OpenUsbDeviceCore_Error:
; 140  :     if (deviceInfo != INVALID_HANDLE_VALUE)
; 141  :     {
; 142  :         SetupDiDestroyDeviceInfoList(deviceInfo);

	adrp        x8,__imp_SetupDiDestroyDeviceInfoList
	ldr         x8,[x8,__imp_SetupDiDestroyDeviceInfoList]
	mov         x0,x19
	blr         x8
|$LN44@OpenUsbDev|

; 143  :         deviceInfo = INVALID_HANDLE_VALUE;
; 144  :     }
; 145  : 
; 146  :     return INVALID_HANDLE_VALUE;
; 147  : }

	mov         x0,#-1
|$LN1@OpenUsbDev|
	add         sp,sp,#0x290
	bl          __security_pop_cookie
	ldp         x27,x28,[sp,#0x50]
	ldp         x25,x26,[sp,#0x40]
	ldp         x23,x24,[sp,#0x30]
	ldp         x21,x22,[sp,#0x20]
	ldp         x19,x20,[sp,#0x10]
	ldp         fp,lr,[sp],#0x60
	ret
|$LN40@OpenUsbDev|

; 113  :                                 {
; 114  :                                     info_print_("successfully opened %s\n", deviceInterfaceDetailData->DevicePath);
; 115  :                                     delete[] (BYTE *)deviceInterfaceDetailData;

	mov         x0,x21
	bl          |??_V@YAXPEAX@Z|

; 116  :                                     deviceInterfaceDetailData = nullptr;
; 117  :                                     SetupDiDestroyDeviceInfoList(deviceInfo);

	adrp        x8,__imp_SetupDiDestroyDeviceInfoList
	ldr         x8,[x8,__imp_SetupDiDestroyDeviceInfoList]
	mov         x0,x19
	blr         x8

; 118  :                                     deviceInfo = INVALID_HANDLE_VALUE;
; 119  :                                     return targetHandle;

	mov         x0,x23
	b           |$LN1@OpenUsbDev|
|$LN39@OpenUsbDev|

; 79   :         {
; 80   :             SetupDiDestroyDeviceInfoList(deviceInfo);

	adrp        x8,__imp_SetupDiDestroyDeviceInfoList
	ldr         x8,[x8,__imp_SetupDiDestroyDeviceInfoList]
	blr         x8
	b           |$OpenUsbDeviceCore_Error$46|

	ENDP  ; |?OpenUsbDeviceCore@@YAPEAXQEAU_GUID@@PEBD11@Z|, OpenUsbDeviceCore

	END

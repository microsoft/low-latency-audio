; Listing generated by Microsoft (R) Optimizing Compiler Version 19.44.35216.0 

	TTL	g:\github\microsoft\low-latency-audio\src\vsfiles\intermediate\usbasio\arm64\release\register.obj
	;ARM64

	AREA	|.drectve|, DRECTVE

	EXPORT	|??_C@_08KMINELBC@CLSID?2?$CFs@| [ DATA ] ; `string'
	EXPORT	|??_C@_0O@KEDGEIPK@SOFTWARE?2ASIO@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BB@PEAGLIBC@SOFTWARE?2ASIO?2?$CFs@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BI@EJPDCOGH@CLSID?2?$CFs?2InprocServer32@| [ DATA ] ; `string'
	EXPORT	|??_C@_0P@FAEGJAHE@ThreadingModel@| [ DATA ] ; `string'
	EXPORT	|??_C@_05GIBEAPNE@CLSID@| [ DATA ]	; `string'
	EXPORT	|??_C@_0M@OHKMKKDH@Description@| [ DATA ] ; `string'
	IMPORT	|__imp_RegDeleteTreeA|
	IMPORT	|__imp_RegCloseKey|
	IMPORT	|__imp_WideCharToMultiByte|
	IMPORT	|__imp_RegQueryValueExA|
	IMPORT	|__imp_RegCreateKeyExA|
	IMPORT	|__imp_GetModuleHandleA|
	IMPORT	|__imp_RegSetValueExA|
	IMPORT	|__imp_CoTaskMemFree|
	IMPORT	|__imp_RegOpenKeyExA|
	IMPORT	|__imp_CharLowerA|
	IMPORT	|__imp_StringFromCLSID|
	IMPORT	|__imp_GetModuleFileNameA|

	AREA	|.rdata|, DATA, READONLY
|??_C@_0M@OHKMKKDH@Description@| DCB "Description", 0x0	; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_05GIBEAPNE@CLSID@| DCB "CLSID", 0x0		; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_0P@FAEGJAHE@ThreadingModel@| DCB "ThreadingModel", 0x0 ; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_0BI@EJPDCOGH@CLSID?2?$CFs?2InprocServer32@| DCB "CLSID\\%s\\Inproc"
	DCB	"Server32", 0x0				; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_0BB@PEAGLIBC@SOFTWARE?2ASIO?2?$CFs@| DCB "SOFTWARE\\ASIO\\%s", 0x0 ; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_0O@KEDGEIPK@SOFTWARE?2ASIO@| DCB "SOFTWARE\\ASIO", 0x0 ; `string'

	AREA	|.rdata|, DATA, READONLY
|??_C@_08KMINELBC@CLSID?2?$CFs@| DCB "CLSID\\%s", 0x0	; `string'
	EXPORT	|?RegisterAsioDriver@@YAJU_GUID@@PEBD111@Z| ; RegisterAsioDriver
	EXPORT	|?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z| ; UnregisterAsioDriver
	EXPORT	|sprintf_s|
	EXPORT	|HRESULT_FROM_WIN32|

	AREA	|.pdata|, PDATA
|$pdata$?RegisterAsioDriver@@YAJU_GUID@@PEBD111@Z| DCD |$LN94|
	DCD	|$unwind$?RegisterAsioDriver@@YAJU_GUID@@PEBD111@Z|

	AREA	|.pdata|, PDATA
|$pdata$?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z| DCD |$LN35|
	DCD	|$unwind$?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z|

	AREA	|.pdata|, PDATA
|$pdata$0$?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z| DCD |$LN35|+116
	DCD	|$unwind$0$?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z|

	AREA	|.pdata|, PDATA
|$pdata$1$?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z| DCD |$LN35|+556
	DCD	|$unwind$1$?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z|

	AREA	|.pdata|, PDATA
|$pdata$?CreateRegistryKeyAndSetValue@@YAJPEAUHKEY__@@PEBD11@Z| DCD |?CreateRegistryKeyAndSetValue@@YAJPEAUHKEY__@@PEBD11@Z|
	DCD	|$unwind$?CreateRegistryKeyAndSetValue@@YAJPEAUHKEY__@@PEBD11@Z|

	AREA	|.pdata|, PDATA
|$pdata$?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z| DCD |?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z|
	DCD	|$unwind$?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z|

	AREA	|.pdata|, PDATA
|$pdata$0$?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z| DCD |?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z|+24
	DCD	|$unwind$0$?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z|

	AREA	|.pdata|, PDATA
|$pdata$1$?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z| DCD |?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z|+188
	DCD	|$unwind$1$?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z|

	AREA	|.pdata|, PDATA
|$pdata$?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z| DCD |?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z|
	DCD	|$unwind$?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z|

	AREA	|.pdata|, PDATA
|$pdata$0$?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z| DCD |?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z|+24
	DCD	|$unwind$0$?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z|

	AREA	|.pdata|, PDATA
|$pdata$1$?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z| DCD |?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z|+100
	DCD	|$unwind$1$?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z|

	AREA	|.pdata|, PDATA
|$pdata$sprintf_s| DCD |$LN8|
	DCD	|$unwind$sprintf_s|

	AREA	|.xdata|, DATA
|$unwind$sprintf_s| DCD 0x22600019
	DCD	0xe3e381e1
	DCD	0x2a82c8e3
	DCD	0x82c881e4
	DCD	0xe3e3e42a
	;Code Words[4], Epilog Start Index[9], E[1], X[0], Function Length[25]=100 bytes
	;set_fp
	;save_fplr_x
	;nop
	;nop
	;nop
	;save_regp
	;save_r19r20_x
	;end
	;save_fplr_x
	;save_regp
	;save_r19r20_x
	;end
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$1$?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z| DCD 0x11700003
	DCD	0x83e101e5
	DCD	0xe48301e4
	DCD	|__GSHandlerCheck|
	DCD	0xffffffd8
	;Code Words[2], Epilog Start Index[5], E[1], X[1], Function Length[3]=12 bytes
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$0$?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z| DCD 0x10500013
	DCD	0x12
	DCD	0x1e504d0
	DCD	0xe3e483e1
	DCD	|__GSHandlerCheck|
	DCD	0xffffffd8
	;Code Words[2], Epilog Count[1], E[0], X[1], Function Length[19]=76 bytes
	;Epilog Start Index[0], Epilog Start Offset[18]=72 bytes
	;save_reg
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;nop

	AREA	|.xdata|, DATA
|$unwind$?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z| DCD 0x8100006
	DCD	0xe483e101
	DCD	|__GSHandlerCheck|
	DCD	0xffffffd8
	;Code Words[1], Epilog Count[0], E[0], X[1], Function Length[6]=24 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$1$?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z| DCD 0x19700004
	DCD	0x83e101e5
	DCD	0x830101e4
	DCD	0xe3e3e3e4
	DCD	|__GSHandlerCheck|
	DCD	0xffffffd8
	;Code Words[3], Epilog Start Index[5], E[1], X[1], Function Length[4]=16 bytes
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$0$?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z| DCD 0x10500029
	DCD	0x28
	DCD	0x1e506c8
	DCD	0xe3e483e1
	DCD	|__GSHandlerCheck|
	DCD	0xffffffd8
	;Code Words[2], Epilog Count[1], E[0], X[1], Function Length[41]=164 bytes
	;Epilog Start Index[0], Epilog Start Offset[40]=160 bytes
	;save_regp
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;nop

	AREA	|.xdata|, DATA
|$unwind$?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z| DCD 0x8100006
	DCD	0xe483e101
	DCD	|__GSHandlerCheck|
	DCD	0xffffffd8
	;Code Words[1], Epilog Count[0], E[0], X[1], Function Length[6]=24 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?CreateRegistryKeyAndSetValue@@YAJPEAUHKEY__@@PEBD11@Z| DCD 0x2230003b
	DCD	0x84d0e101
	DCD	0xe48502c8
	DCD	0x84d00101
	DCD	0xe48502c8
	DCD	|__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[4], Epilog Start Index[8], E[1], X[1], Function Length[59]=236 bytes
	;alloc_s
	;set_fp
	;save_reg
	;save_regp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_reg
	;save_regp
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$1$?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z| DCD 0x18500007
	DCD	0x1400000
	DCD	0x85e101e5
	DCD	0x85011ae4
	DCD	0xe3e3e3e4
	DCD	|__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[3], Epilog Count[1], E[0], X[1], Function Length[7]=28 bytes
	;Epilog Start Index[5], Epilog Start Offset[0]=0 bytes
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$0$?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z| DCD 0x1850006e
	DCD	0x6c
	DCD	0x38c8bad0
	DCD	0x85e101e5
	DCD	0xe3e3e3e4
	DCD	|__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[3], Epilog Count[1], E[0], X[1], Function Length[110]=440 bytes
	;Epilog Start Index[0], Epilog Start Offset[108]=432 bytes
	;save_reg
	;save_regp
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z| DCD 0x810001d
	DCD	0xe485e101
	DCD	|__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[1], Epilog Count[0], E[0], X[1], Function Length[29]=116 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?RegisterAsioDriver@@YAJU_GUID@@PEBD111@Z| DCD 0x4050017a
	DCD	0x380016f
	DCD	0xad2e101
	DCD	0x6c988c9
	DCD	0x2c884c8
	DCD	0x66c0e48b
	DCD	0xc90ad201
	DCD	0xc806c988
	DCD	0x8b02c884
	DCD	0xe3e3e3e4
	DCD	|__GSHandlerCheck|
	DCD	0xffffff98
	;Code Words[8], Epilog Count[1], E[0], X[1], Function Length[378]=1512 bytes
	;Epilog Start Index[14], Epilog Start Offset[367]=1468 bytes
	;alloc_s
	;set_fp
	;save_reg
	;save_regp
	;save_regp
	;save_regp
	;save_regp
	;save_fplr_x
	;end
	;alloc_m
	;alloc_s
	;save_reg
	;save_regp
	;save_regp
	;save_regp
	;save_regp
	;save_fplr_x
	;end
	;nop
	;nop
	;nop
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h

	AREA	|.text$mn|, CODE, ARM64

|HRESULT_FROM_WIN32| PROC

; 30274: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	and         w9,w0,#0xFFFF
	mov         w8,#0x80070000
	orr         w8,w9,w8
	cmp         w0,#0
	cselle      w0,w0,w8
	ret

	ENDP  ; |HRESULT_FROM_WIN32|

; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\stdio.h

	AREA	|.text$mn|, CODE, ARM64

|sprintf_s| PROC

; 1823 :         {

|$LN8|
	stp         x19,x20,[sp,#-0x50]!
	stp         x21,x22,[sp,#0x10]
	stp         x3,x4,[sp,#0x28]
	stp         x5,x6,[sp,#0x38]
	str         x7,[sp,#0x48]
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	mov         x22,x0
	mov         x21,x1
	mov         x20,x2

; 1824 :             int _Result;
; 1825 :             va_list _ArgList;
; 1826 :             __crt_va_start(_ArgList, _Format);

	add         x19,sp,#0x38

; 1491 :         int const _Result = __stdio_common_vsprintf_s(

	bl          __local_stdio_printf_options
	ldr         x0,[x0]
	mov         x5,x19
	mov         x3,x20
	mov         x2,x21
	mov         x1,x22
	mov         x4,#0
	bl          __stdio_common_vsprintf_s

; 1492 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1493 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1494 : 
; 1495 :         return _Result < 0 ? -1 : _Result;

	cmp         w0,#0
	csinvge     w0,w0,wzr
	ldp         fp,lr,[sp],#0x10
	ldp         x21,x22,[sp,#0x10]
	ldp         x19,x20,[sp],#0x50
	ret

	ENDP  ; |sprintf_s|

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp

	AREA	|.text$mn|, CODE, ARM64

|?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z| PROC		; FindRegPath

; 52   : {

	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	bl          __security_push_cookie
	mov         x5,x0

; 53   :     bool find = false;

	mov         w0,#0

; 54   : 
; 55   :     if (regPath != nullptr)

	cbz         x1,|$LN3@FindRegPat|
	str         x19,[sp,#0x20]
	mov         w19,w0
	mov         x0,x5

; 56   :     {
; 57   :         HKEY    subKey = 0;

	str         xzr,[sp]

; 58   :         LSTATUS status = RegOpenKeyEx(key, regPath, 0, KEY_ALL_ACCESS, &subKey);

	mov         x4,sp
	mov         w3,#0x3F
	movk        w3,#0xF,lsl #0x10
	mov         w2,#0
	adrp        x8,__imp_RegOpenKeyExA
	ldr         x8,[x8,__imp_RegOpenKeyExA]
	blr         x8

; 59   :         if (status == ERROR_SUCCESS)

	cbnz        w0,|$LN9@FindRegPat|

; 60   :         {
; 61   :             RegCloseKey(subKey);

	adrp        x8,__imp_RegCloseKey
	ldr         x8,[x8,__imp_RegCloseKey]
	ldr         x0,[sp]
	blr         x8

; 62   :             find = true;

	mov         w19,#1
|$LN9@FindRegPat|

; 59   :         if (status == ERROR_SUCCESS)

	mov         w0,w19
	ldr         x19,[sp,#0x20]
|$LN3@FindRegPat|
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |?FindRegPath@@YA_NPEAUHKEY__@@PEBD@Z|, FindRegPath

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp

	AREA	|.text$mn|, CODE, ARM64

|?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z| PROC	; GetRegString

; 70   : {

	stp         fp,lr,[sp,#-0x20]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x10

; 71   :     HKEY  key;
; 72   :     DWORD valueSize, valueType;
; 73   :     bool  result = false;

	mov         w0,#0

; 74   : 
; 75   :     if (regPath)

	cbz         x1,|$LN3@GetRegStri|
	stp         x19,x20,[sp,#0x30]
	mov         x20,x3
	mov         w19,w0

; 76   :     {
; 77   :         if (RegOpenKeyEx(mainKey, regPath, 0, KEY_ALL_ACCESS, &key) == ERROR_SUCCESS)

	mov         x4,sp
	mov         w3,#0x3F
	movk        w3,#0xF,lsl #0x10
	mov         w2,#0
	mov         x0,#-0x80000000
	adrp        x8,__imp_RegOpenKeyExA
	ldr         x8,[x8,__imp_RegOpenKeyExA]
	blr         x8
	cbnz        w0,|$LN11@GetRegStri|

; 78   :         {
; 79   :             if (RegQueryValueEx(key, valueName, 0, &valueType, 0, &valueSize) == ERROR_SUCCESS)

	adrp        x8,__imp_RegQueryValueExA
	ldr         x8,[x8,__imp_RegQueryValueExA]
	ldr         x0,[sp]
	add         x5,sp,#8
	mov         x4,#0
	add         x3,sp,#0xC
	mov         x2,#0
	mov         x1,#0
	blr         x8

; 80   :             {
; 81   :                 if (valueSize <= dataSize)

	ldr         w8,[sp,#8]
	cmp         w8,#0x104
	ccmpls      w0,#0,#0
	bne         |$LN5@GetRegStri|

; 82   :                 {
; 83   :                     RegQueryValueEx(key, valueName, 0, &valueType, (LPBYTE)data, &valueSize);

	adrp        x8,__imp_RegQueryValueExA
	ldr         x8,[x8,__imp_RegQueryValueExA]
	ldr         x0,[sp]
	add         x5,sp,#8
	mov         x4,x20
	add         x3,sp,#0xC
	mov         x2,#0
	mov         x1,#0
	blr         x8

; 84   :                     result = true;

	mov         w19,#1
|$LN5@GetRegStri|

; 85   :                 }
; 86   :             }
; 87   :             RegCloseKey(key);

	adrp        x8,__imp_RegCloseKey
	ldr         x8,[x8,__imp_RegCloseKey]
	ldr         x0,[sp]
	blr         x8
|$LN11@GetRegStri|

; 76   :     {
; 77   :         if (RegOpenKeyEx(mainKey, regPath, 0, KEY_ALL_ACCESS, &key) == ERROR_SUCCESS)

	mov         w0,w19
	ldp         x19,x20,[sp,#0x30]
|$LN3@GetRegStri|
	add         sp,sp,#0x10
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x20
	ret

	ENDP  ; |?GetRegString@@YA_NPEAUHKEY__@@PEBD1PEAXK@Z|, GetRegString

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp

	AREA	|.text$mn|, CODE, ARM64

|?CreateRegistryKeyAndSetValue@@YAJPEAUHKEY__@@PEBD11@Z| PROC ; CreateRegistryKeyAndSetValue

; 99   : {

	stp         fp,lr,[sp,#-0x30]!
	stp         x19,x20,[sp,#0x10]
	str         x21,[sp,#0x20]
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x10

; 100  :     HRESULT result = S_OK;
; 101  :     LONG    ret;
; 102  :     HKEY    key;
; 103  : 
; 104  :     ret = RegCreateKeyEx(rootKey, keyName, 0, nullptr, REG_OPTION_NON_VOLATILE, KEY_ALL_ACCESS, nullptr, &key, nullptr);

	adrp        x8,__imp_RegCreateKeyExA
	ldr         x8,[x8,__imp_RegCreateKeyExA]
	str         xzr,[sp]
	mov         x20,x2
	mov         x19,x3
	add         x7,sp,#0x10
	mov         x6,#0
	mov         w5,#0x3F
	movk        w5,#0xF,lsl #0x10
	mov         w4,#0
	mov         x3,#0
	mov         w2,#0
	mov         w21,#0
	blr         x8

; 105  :     if (ret != ERROR_SUCCESS)

	cbz         w0,|$LN2@CreateRegi|
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h

; 30274: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	and         w9,w0,#0xFFFF
	mov         w8,#0x80070000
	orr         w8,w9,w8
	cmp         w0,#0
	cselle      w21,w0,w8
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp

; 108  :     }

	b           |$LN3@CreateRegi|
|$LN2@CreateRegi|

; 109  :     else
; 110  :     {
; 111  :         if (data != nullptr)

	cbz         x19,|$LN4@CreateRegi|

; 112  :         {
; 113  :             ret = RegSetValueEx(key, valueName, 0, REG_SZ, (LPBYTE)data, (DWORD)((_tcslen(data) + 1) * sizeof(TCHAR)));

	mov         x8,x19
	ldrsb       w9,[x8]
	cbz         w9,|$LN16@CreateRegi|
|$LL15@CreateRegi|
	ldrsb       w9,[x8,#1]!
	cbnz        w9,|$LL15@CreateRegi|
|$LN16@CreateRegi|
	sub         x8,x8,x19
	ldr         x0,[sp,#0x10]
	add         w5,w8,#1
	adrp        x8,__imp_RegSetValueExA
	ldr         x8,[x8,__imp_RegSetValueExA]
	mov         x4,x19
	mov         w3,#1
	mov         w2,#0
	mov         x1,x20
	blr         x8
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h

; 30274: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	mov         w8,#0x80070000
	and         w9,w0,#0xFFFF
	orr         w8,w9,w8
	cmp         w0,#0
	cselle      w21,w0,w8
|$LN4@CreateRegi|
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp

; 116  :         RegCloseKey(key);

	adrp        x8,__imp_RegCloseKey
	ldr         x8,[x8,__imp_RegCloseKey]
	ldr         x0,[sp,#0x10]
	blr         x8
|$LN3@CreateRegi|

; 117  :     }
; 118  :     return result;

	mov         w0,w21
	add         sp,sp,#0x10
	bl          __security_pop_cookie
	ldr         x21,[sp,#0x20]
	ldp         x19,x20,[sp,#0x10]
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |?CreateRegistryKeyAndSetValue@@YAJPEAUHKEY__@@PEBD11@Z|, CreateRegistryKeyAndSetValue

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp

	AREA	|.text$mn|, CODE, ARM64

|?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z| PROC	; UnregisterAsioDriver

; 126  : {

|$LN35|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x1A0
	dup         v16.2d,x0

; 127  :     HRESULT  result = S_OK;
; 128  :     TCHAR    regpath[_MAX_PATH] = {0};
; 129  :     TCHAR    clsid[CLSID_STRING_LEN] = {0};
; 130  :     LPOLESTR wszCLSID = nullptr;
; 131  : 
; 132  :     result = StringFromCLSID(clsId, &wszCLSID);

	adrp        x8,__imp_StringFromCLSID
	ldr         x8,[x8,__imp_StringFromCLSID]
	add         x0,sp,#0x10
	str         xzr,[sp,#8]
	ins         v16.d[1],x1
	add         x1,sp,#8
	str         q16,[sp,#0x10]
	movi        v16.16b,#0
	stp         q16,q16,[sp,#0x90]
	stp         q16,q16,[sp,#0xB0]
	stp         q16,q16,[sp,#0xD0]
	stp         q16,q16,[sp,#0xF0]
	stp         q16,q16,[sp,#0x110]
	stp         q16,q16,[sp,#0x130]
	stp         q16,q16,[sp,#0x150]
	stp         q16,q16,[sp,#0x170]
	str         s16,[sp,#0x190]
	movi        v16.16b,#0
	stp         q16,q16,[sp,#0x20]
	stp         q16,q16,[sp,#0x40]
	stp         q16,q16,[sp,#0x60]
	str         s16,[sp,#0x80]
	blr         x8

; 133  :     if (!SUCCEEDED(result))

	tbnz        w0,#0x1F,|$LN1@Unregister|
	stp         x19,x20,[sp,#0x1C0]
	str         x21,[sp,#0x1D0]
	mov         w21,w0

; 134  :     {
; 135  :         return result;
; 136  :     }
; 137  : #ifdef _UNICODE
; 138  :     wcsncpy_s(clsid, CLSID_STRING_LEN - 1, wszCLSID, _TRUNCATE);
; 139  : #else
; 140  :     if (WideCharToMultiByte(CP_ACP, 0, (LPWSTR)wszCLSID, -1, clsid, CLSID_STRING_LEN, 0, 0) == 0)

	mov         x7,#0
	mov         x6,#0
	mov         w5,#0x64
	add         x4,sp,#0x20
	mov         w3,#-1
	ldr         x2,[sp,#8]
	mov         w1,#0
	mov         w0,#0
	adrp        x8,__imp_WideCharToMultiByte
	ldr         x8,[x8,__imp_WideCharToMultiByte]
	blr         x8
	adrp        x8,__imp_CoTaskMemFree
	ldr         x8,[x8,__imp_CoTaskMemFree]
	cbnz        w0,|$LN3@Unregister|

; 141  :     {
; 142  :         CoTaskMemFree(wszCLSID);

	ldr         x0,[sp,#8]
	blr         x8

; 143  :         return HRESULT_FROM_WIN32(GetLastError());

	adrp        x8,__imp_GetLastError
	ldr         x8,[x8,__imp_GetLastError]
	blr         x8
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h

; 30274: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	mov         w8,#0x80070000
	and         w9,w0,#0xFFFF
	orr         w8,w9,w8
	cmp         w0,#0
	cselle      w0,w0,w8
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp

; 143  :         return HRESULT_FROM_WIN32(GetLastError());

	b           |$LN32@Unregister|
|$LN3@Unregister|

; 144  :     }
; 145  : #endif
; 146  :     CoTaskMemFree(wszCLSID);

	ldr         x0,[sp,#8]
	blr         x8

; 147  : 
; 148  :     _stprintf_s(regpath, _MAX_PATH, REGSTR_CLSID _T("\\%s"), clsid);

	adrp        x8,|??_C@_08KMINELBC@CLSID?2?$CFs@|
	add         x2,x8,|??_C@_08KMINELBC@CLSID?2?$CFs@|
	add         x3,sp,#0x20
	mov         x1,#0x104
	add         x0,sp,#0x90
	bl          sprintf_s

; 58   :         LSTATUS status = RegOpenKeyEx(key, regPath, 0, KEY_ALL_ACCESS, &subKey);

	adrp        x8,__imp_RegOpenKeyExA
	ldr         x8,[x8,__imp_RegOpenKeyExA]
	mov         w19,#0x3F
	movk        w19,#0xF,lsl #0x10
	str         xzr,[sp]
	mov         x4,sp
	mov         w3,w19
	mov         w2,#0
	add         x1,sp,#0x90
	mov         x0,#-0x80000000
	blr         x8

; 59   :         if (status == ERROR_SUCCESS)

	mov         w20,#0x80070000
	cbnz        w0,|$LN4@Unregister|

; 60   :         {
; 61   :             RegCloseKey(subKey);

	adrp        x8,__imp_RegCloseKey
	ldr         x8,[x8,__imp_RegCloseKey]
	ldr         x0,[sp]
	blr         x8

; 149  :     if (FindRegPath(HKEY_CLASSES_ROOT, regpath))
; 150  :     {
; 151  :         result = HRESULT_FROM_WIN32(RegDeleteTree(HKEY_CLASSES_ROOT, regpath));

	adrp        x8,__imp_RegDeleteTreeA
	ldr         x8,[x8,__imp_RegDeleteTreeA]
	add         x1,sp,#0x90
	mov         x0,#-0x80000000
	blr         x8
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h

; 30274: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	and         w8,w0,#0xFFFF
	orr         w8,w8,w20
	cmp         w0,#0
	cselle      w21,w0,w8
|$LN4@Unregister|
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp

; 58   :         LSTATUS status = RegOpenKeyEx(key, regPath, 0, KEY_ALL_ACCESS, &subKey);

	adrp        x8,|??_C@_0O@KEDGEIPK@SOFTWARE?2ASIO@|
	add         x1,x8,|??_C@_0O@KEDGEIPK@SOFTWARE?2ASIO@|
	str         xzr,[sp]
	adrp        x8,__imp_RegOpenKeyExA
	ldr         x8,[x8,__imp_RegOpenKeyExA]
	mov         x4,sp
	mov         w3,w19
	mov         w2,#0
	ldr         x0,|$LN34@Unregister|
	blr         x8

; 59   :         if (status == ERROR_SUCCESS)

	cbnz        w0,|$LN6@Unregister|

; 60   :         {
; 61   :             RegCloseKey(subKey);

	adrp        x8,__imp_RegCloseKey
	ldr         x8,[x8,__imp_RegCloseKey]
	ldr         x0,[sp]
	blr         x8

; 152  :         // ASSERT(SUCCEEDED(result));
; 153  :     }
; 154  : 
; 155  :     if (FindRegPath(HKEY_LOCAL_MACHINE, REGSTR_SOFTWAREASIO))
; 156  :     {
; 157  :         _stprintf_s(regpath, _MAX_PATH, REGSTR_SOFTWAREASIO _T("\\%s"), regName);

	adrp        x8,|??_C@_0BC@LDCENIFA@USB?5ASIO?5?$CIARM64X?$CJ@|
	add         x3,x8,|??_C@_0BC@LDCENIFA@USB?5ASIO?5?$CIARM64X?$CJ@|
	adrp        x8,|??_C@_0BB@PEAGLIBC@SOFTWARE?2ASIO?2?$CFs@|
	add         x2,x8,|??_C@_0BB@PEAGLIBC@SOFTWARE?2ASIO?2?$CFs@|
	mov         x1,#0x104
	add         x0,sp,#0x90
	bl          sprintf_s

; 58   :         LSTATUS status = RegOpenKeyEx(key, regPath, 0, KEY_ALL_ACCESS, &subKey);

	adrp        x8,__imp_RegOpenKeyExA
	ldr         x8,[x8,__imp_RegOpenKeyExA]
	mov         x4,sp
	str         xzr,[sp]
	mov         w3,w19
	mov         w2,#0
	add         x1,sp,#0x90
	ldr         x0,|$LN34@Unregister|
	blr         x8

; 59   :         if (status == ERROR_SUCCESS)

	cbnz        w0,|$LN6@Unregister|

; 60   :         {
; 61   :             RegCloseKey(subKey);

	adrp        x8,__imp_RegCloseKey
	ldr         x8,[x8,__imp_RegCloseKey]
	ldr         x0,[sp]
	blr         x8

; 158  :         if (FindRegPath(HKEY_LOCAL_MACHINE, regpath))
; 159  :         {
; 160  :             result = HRESULT_FROM_WIN32(RegDeleteTree(HKEY_LOCAL_MACHINE, regpath));

	adrp        x8,__imp_RegDeleteTreeA
	ldr         x8,[x8,__imp_RegDeleteTreeA]
	add         x1,sp,#0x90
	ldr         x0,|$LN34@Unregister|
	blr         x8
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h

; 30274: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	and         w8,w0,#0xFFFF
	orr         w8,w8,w20
	cmp         w0,#0
	cselle      w21,w0,w8
|$LN6@Unregister|
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp

; 165  :     return result;

	mov         w0,w21
|$LN32@Unregister|
	ldr         x21,[sp,#0x1D0]
	ldp         x19,x20,[sp,#0x1C0]
|$LN1@Unregister|
	add         sp,sp,#0x1A0
	bl          __security_pop_cookie
	ldp         fp,lr,[sp],#0x30
	ret
	nop
|$LN34@Unregister|
	DCQ         0xffffffff80000002

	ENDP  ; |?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z|, UnregisterAsioDriver

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp

	AREA	|.text$mn|, CODE, ARM64

|?RegisterAsioDriver@@YAJU_GUID@@PEBD111@Z| PROC	; RegisterAsioDriver

; 175  : {

|$LN94|
	stp         fp,lr,[sp,#-0x60]!
	stp         x19,x20,[sp,#0x10]
	stp         x21,x22,[sp,#0x20]
	stp         x23,x24,[sp,#0x30]
	stp         x25,x26,[sp,#0x40]
	str         x27,[sp,#0x50]
	mov         fp,sp
	bl          __security_push_cookie
	sub         sp,sp,#0x660
	dup         v16.2d,x0

; 176  :     HRESULT  result = S_OK;
; 177  :     HMODULE  module = nullptr;
; 178  :     bool     newregentry = false;
; 179  :     TCHAR    dllPath[_MAX_PATH] = {0};
; 180  :     TCHAR    moduleName[_MAX_PATH] = {0};
; 181  :     TCHAR    classRegistryPath[_MAX_PATH] = {0};
; 182  :     TCHAR    InprocServer32RegistryPath[_MAX_PATH] = {0};
; 183  :     TCHAR    asioRegistryPath[_MAX_PATH] = {0};
; 184  :     TCHAR    clsid[CLSID_STRING_LEN] = {0};
; 185  :     LPOLESTR wszCLSID = nullptr;
; 186  : 
; 187  :     module = GetModuleHandle(dllName);

	adrp        x8,|??_C@_0M@BFGLKKGE@USBAsio?4dll@|
	add         x0,x8,|??_C@_0M@BFGLKKGE@USBAsio?4dll@|
	adrp        x8,__imp_GetModuleHandleA
	ldr         x8,[x8,__imp_GetModuleHandleA]
	str         xzr,[sp,#0x78]
	ins         v16.d[1],x1
	str         q16,[sp,#0x90]
	movi        v16.16b,#0
	add         xip1,sp,#0x550
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x570
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x590
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x5B0
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x5D0
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x5F0
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x610
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x630
	stp         q16,q16,[xip1]
	str         s16,[sp,#0x650]
	movi        v16.16b,#0
	stp         q16,q16,[sp,#0x220]
	stp         q16,q16,[sp,#0x240]
	stp         q16,q16,[sp,#0x260]
	stp         q16,q16,[sp,#0x280]
	stp         q16,q16,[sp,#0x2A0]
	stp         q16,q16,[sp,#0x2C0]
	stp         q16,q16,[sp,#0x2E0]
	stp         q16,q16,[sp,#0x300]
	str         s16,[sp,#0x320]
	movi        v16.16b,#0
	stp         q16,q16,[sp,#0x330]
	stp         q16,q16,[sp,#0x350]
	stp         q16,q16,[sp,#0x370]
	stp         q16,q16,[sp,#0x390]
	stp         q16,q16,[sp,#0x3B0]
	stp         q16,q16,[sp,#0x3D0]
	stp         q16,q16,[sp,#0x3F0]
	add         xip1,sp,#0x410
	stp         q16,q16,[xip1]
	str         s16,[sp,#0x430]
	movi        v16.16b,#0
	add         xip1,sp,#0x440
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x460
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x480
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x4A0
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x4C0
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x4E0
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x500
	stp         q16,q16,[xip1]
	add         xip1,sp,#0x520
	stp         q16,q16,[xip1]
	str         s16,[sp,#0x540]
	movi        v16.16b,#0
	stp         q16,q16,[sp,#0x110]
	stp         q16,q16,[sp,#0x130]
	stp         q16,q16,[sp,#0x150]
	stp         q16,q16,[sp,#0x170]
	stp         q16,q16,[sp,#0x190]
	stp         q16,q16,[sp,#0x1B0]
	stp         q16,q16,[sp,#0x1D0]
	stp         q16,q16,[sp,#0x1F0]
	str         s16,[sp,#0x210]
	movi        v16.16b,#0
	stp         q16,q16,[sp,#0xA0]
	stp         q16,q16,[sp,#0xC0]
	stp         q16,q16,[sp,#0xE0]
	str         s16,[sp,#0x100]
	blr         x8

; 188  :     if (module == nullptr)

	cbz         x0,|$LN91@RegisterAs|

; 189  :     {
; 190  :         return HRESULT_FROM_WIN32(GetLastError());
; 191  :     }
; 192  : 
; 193  :     GetModuleFileName(module, moduleName, _MAX_PATH);

	adrp        x8,__imp_GetModuleFileNameA
	ldr         x8,[x8,__imp_GetModuleFileNameA]
	mov         w2,#0x104
	add         x1,sp,#0x220
	blr         x8

; 194  :     if (moduleName[0] == 0)

	ldrsb       w8,[sp,#0x220]
	cbz         w8,|$LN91@RegisterAs|

; 195  :     {
; 196  :         return HRESULT_FROM_WIN32(GetLastError());
; 197  :     }
; 198  :     CharLower(moduleName);

	adrp        x8,__imp_CharLowerA
	ldr         x8,[x8,__imp_CharLowerA]
	add         x0,sp,#0x220
	blr         x8

; 199  : 
; 200  :     result = StringFromCLSID(clsId, &wszCLSID);

	adrp        x8,__imp_StringFromCLSID
	ldr         x8,[x8,__imp_StringFromCLSID]
	add         x1,sp,#0x78
	add         x0,sp,#0x90
	blr         x8
	mov         w19,w0

; 201  :     if (!SUCCEEDED(result))

	tbnz        w19,#0x1F,|$LN22@RegisterAs|

; 202  :     {
; 203  :         return result;
; 204  :     }
; 205  : #ifdef _UNICODE
; 206  :     wcsncpy_s(clsid, CLSID_STRING_LEN - 1, wszCLSID, _TRUNCATE);
; 207  : #else
; 208  :     if (WideCharToMultiByte(CP_ACP, 0, (LPWSTR)wszCLSID, -1, clsid, CLSID_STRING_LEN, 0, 0) == 0)

	adrp        x8,__imp_WideCharToMultiByte
	ldr         x8,[x8,__imp_WideCharToMultiByte]
	ldr         x2,[sp,#0x78]
	mov         x7,#0
	mov         x6,#0
	mov         w5,#0x64
	add         x4,sp,#0xA0
	mov         w3,#-1
	mov         w1,#0
	mov         w0,#0
	blr         x8
	adrp        x8,__imp_CoTaskMemFree
	ldr         x8,[x8,__imp_CoTaskMemFree]
	cbnz        w0,|$LN11@RegisterAs|

; 209  :     {
; 210  :         CoTaskMemFree(wszCLSID);

	ldr         x0,[sp,#0x78]
	blr         x8
|$LN91@RegisterAs|

; 298  :     }
; 299  : 
; 300  :     return result;
; 301  : }

	adrp        x8,__imp_GetLastError
	ldr         x8,[x8,__imp_GetLastError]
	blr         x8
	mov         w8,#0x80070000
	and         w9,w0,#0xFFFF
	orr         w8,w9,w8
	cmp         w0,#0
	cselle      w0,w0,w8
	b           |$LN1@RegisterAs|
|$LN11@RegisterAs|

; 211  :         return HRESULT_FROM_WIN32(GetLastError());
; 212  :     }
; 213  : #endif
; 214  :     CoTaskMemFree(wszCLSID);

	ldr         x0,[sp,#0x78]
	blr         x8

; 215  : 
; 216  :     _stprintf_s(classRegistryPath, _countof(classRegistryPath), REGSTR_CLSID _T("\\%s"), clsid);

	adrp        x8,|??_C@_08KMINELBC@CLSID?2?$CFs@|
	add         x2,x8,|??_C@_08KMINELBC@CLSID?2?$CFs@|
	add         x3,sp,#0xA0
	mov         x1,#0x104
	add         x0,sp,#0x330
	bl          sprintf_s

; 217  :     _stprintf_s(InprocServer32RegistryPath, _countof(InprocServer32RegistryPath), REGSTR_CLSID _T("\\%s\\") REGSTR_INPROCSERVER32, clsid);

	adrp        x8,|??_C@_0BI@EJPDCOGH@CLSID?2?$CFs?2InprocServer32@|
	add         x2,x8,|??_C@_0BI@EJPDCOGH@CLSID?2?$CFs?2InprocServer32@|
	add         x3,sp,#0xA0
	mov         x1,#0x104
	add         x0,sp,#0x440
	bl          sprintf_s

; 218  :     _stprintf_s(asioRegistryPath, _countof(asioRegistryPath), REGSTR_SOFTWAREASIO _T("\\%s"), regName);

	adrp        x8,|??_C@_0BC@LDCENIFA@USB?5ASIO?5?$CIARM64X?$CJ@|
	add         x21,x8,|??_C@_0BC@LDCENIFA@USB?5ASIO?5?$CIARM64X?$CJ@|
	adrp        x8,|??_C@_0BB@PEAGLIBC@SOFTWARE?2ASIO?2?$CFs@|
	add         x2,x8,|??_C@_0BB@PEAGLIBC@SOFTWARE?2ASIO?2?$CFs@|
	mov         x3,x21
	mov         x1,#0x104
	add         x0,sp,#0x110
	bl          sprintf_s

; 58   :         LSTATUS status = RegOpenKeyEx(key, regPath, 0, KEY_ALL_ACCESS, &subKey);

	adrp        x8,__imp_RegOpenKeyExA
	ldr         x8,[x8,__imp_RegOpenKeyExA]
	mov         w24,#0x3F
	movk        w24,#0xF,lsl #0x10
	str         xzr,[sp,#0x70]
	add         x4,sp,#0x70
	mov         w3,w24
	mov         w2,#0
	add         x1,sp,#0x330
	mov         x0,#-0x80000000
	blr         x8

; 59   :         if (status == ERROR_SUCCESS)

	ldr         x20,|$LN93@RegisterAs|
	cbnz        w0,|$LN12@RegisterAs|

; 60   :         {
; 61   :             RegCloseKey(subKey);

	adrp        x8,__imp_RegCloseKey
	ldr         x8,[x8,__imp_RegCloseKey]
	ldr         x0,[sp,#0x70]
	blr         x8

; 77   :         if (RegOpenKeyEx(mainKey, regPath, 0, KEY_ALL_ACCESS, &key) == ERROR_SUCCESS)

	adrp        x8,__imp_RegOpenKeyExA
	ldr         x8,[x8,__imp_RegOpenKeyExA]
	add         x4,sp,#0x70
	mov         w3,w24
	mov         w2,#0
	add         x1,sp,#0x440
	mov         x0,#-0x80000000
	blr         x8
	cbnz        w0,|$LN72@RegisterAs|

; 78   :         {
; 79   :             if (RegQueryValueEx(key, valueName, 0, &valueType, 0, &valueSize) == ERROR_SUCCESS)

	adrp        x8,__imp_RegQueryValueExA
	ldr         x8,[x8,__imp_RegQueryValueExA]
	ldr         x0,[sp,#0x70]
	add         x5,sp,#0x80
	mov         x4,#0
	add         x3,sp,#0x84
	mov         x2,#0
	mov         x1,#0
	blr         x8

; 80   :             {
; 81   :                 if (valueSize <= dataSize)

	ldr         w8,[sp,#0x80]
	cmp         w8,#0x104
	ccmpls      w0,#0,#0
	ldr         x0,[sp,#0x70]
	bne         |$LN38@RegisterAs|

; 82   :                 {
; 83   :                     RegQueryValueEx(key, valueName, 0, &valueType, (LPBYTE)data, &valueSize);

	adrp        x8,__imp_RegQueryValueExA
	ldr         x8,[x8,__imp_RegQueryValueExA]
	add         x5,sp,#0x80
	add         x4,sp,#0x550
	add         x3,sp,#0x84
	mov         x2,#0
	mov         x1,#0
	blr         x8

; 84   :                     result = true;

	adrp        x8,__imp_RegCloseKey
	ldr         x8,[x8,__imp_RegCloseKey]
	ldr         x0,[sp,#0x70]
	blr         x8

; 219  : 
; 220  :     // If class registry already exists and another dll has been registered, delete it.
; 221  :     // If class registry already exists and another dll is registered, reuse it.
; 222  :     if (FindRegPath(HKEY_CLASSES_ROOT, classRegistryPath))
; 223  :     {
; 224  :         if (GetRegString(HKEY_CLASSES_ROOT, InprocServer32RegistryPath, 0, (LPVOID)dllPath, _MAX_PATH))
; 225  :         {
; 226  :             CharLower((LPTSTR)dllPath);

	adrp        x8,__imp_CharLowerA
	ldr         x8,[x8,__imp_CharLowerA]
	add         x0,sp,#0x550
	blr         x8

; 227  :             if (_tcscmp(dllPath, moduleName))

	add         x1,sp,#0x220
	add         x0,sp,#0x550
	bl          strcmp
	cbz         w0,|$LN72@RegisterAs|

; 228  :             {
; 229  :                 RegDeleteTree(HKEY_LOCAL_MACHINE, classRegistryPath);

	adrp        x8,__imp_RegDeleteTreeA
	ldr         x8,[x8,__imp_RegDeleteTreeA]
	add         x1,sp,#0x330
	mov         x0,x20
	blr         x8
|$LN12@RegisterAs|

; 230  :                 // ASSERT(SUCCEEDED(result));
; 231  :                 newregentry = true;
; 232  :             }
; 233  :         }
; 234  :     }
; 235  :     else
; 236  :     {
; 237  :         newregentry = true;
; 238  :     }
; 239  : 
; 240  :     if (newregentry && SUCCEEDED(result))
; 241  :     {
; 242  :         REGISTRY_ELEMENT registryElements[] = {
; 243  :             {HKEY_CLASSES_ROOT, classRegistryPath, nullptr, asioDescriptor},

	mov         x9,#-0x80000000
	stp         xzr,x21,[sp,#0x20]
	add         x8,sp,#0x330
	stp         x9,x8,[sp,#0x10]

; 244  :             {HKEY_CLASSES_ROOT, InprocServer32RegistryPath, nullptr, moduleName},

	add         x8,sp,#0x440
	stp         x9,x8,[sp,#0x30]
	add         x8,sp,#0x220
	stp         xzr,x8,[sp,#0x40]

; 245  :             {HKEY_CLASSES_ROOT, InprocServer32RegistryPath, REGSTR_THREADINGMODEL, threadModel}

	add         x8,sp,#0x440
	stp         x9,x8,[sp,#0x50]
	adrp        x8,|??_C@_0P@FAEGJAHE@ThreadingModel@|
	add         x9,x8,|??_C@_0P@FAEGJAHE@ThreadingModel@|
	adrp        x8,|??_C@_09OOLPICH@Apartment@|
	add         x8,x8,|??_C@_09OOLPICH@Apartment@|
	stp         x9,x8,[sp,#0x60]

; 246  :         };
; 247  : 
; 248  :         for (int index = 0; (index < _countof(registryElements)) && SUCCEEDED(result); index++)

	mov         w22,#0
	add         x23,sp,#0x20
|$LL4@RegisterAs|
	tbnz        w19,#0x1F,|$LN87@RegisterAs|

; 249  :         {
; 250  :             result = CreateRegistryKeyAndSetValue(

	ldr         x3,[x23,#8]
	ldr         x2,[x23],#0x20
	ldp         x0,x1,[x23,#-0x30]
	bl          |?CreateRegistryKeyAndSetValue@@YAJPEAUHKEY__@@PEBD11@Z|
	add         w22,w22,#1
	cmp         w22,#3
	mov         w19,w0
	blo         |$LL4@RegisterAs|

; 251  :                 registryElements[index].RootKey,
; 252  :                 registryElements[index].KeyName,
; 253  :                 registryElements[index].ValueName,
; 254  :                 registryElements[index].Data
; 255  :             );
; 256  :         }
; 257  :     }
; 258  :     if (SUCCEEDED(result))

	tbnz        w19,#0x1F,|$LN87@RegisterAs|
|$LN72@RegisterAs|

; 58   :         LSTATUS status = RegOpenKeyEx(key, regPath, 0, KEY_ALL_ACCESS, &subKey);

	adrp        x8,__imp_RegOpenKeyExA
	ldr         x8,[x8,__imp_RegOpenKeyExA]
	str         xzr,[sp,#0x70]
	adrp        x22,|??_C@_0O@KEDGEIPK@SOFTWARE?2ASIO@|
	add         x1,x22,|??_C@_0O@KEDGEIPK@SOFTWARE?2ASIO@|
	add         x4,sp,#0x70
	mov         w3,w24
	mov         w2,#0
	mov         x0,x20
	blr         x8

; 59   :         if (status == ERROR_SUCCESS)

	mov         w23,#0x80070000
	cbnz        w0,|$LN18@RegisterAs|

; 60   :         {
; 61   :             RegCloseKey(subKey);

	adrp        x8,__imp_RegCloseKey
	ldr         x8,[x8,__imp_RegCloseKey]
	ldr         x0,[sp,#0x70]
	blr         x8

; 58   :         LSTATUS status = RegOpenKeyEx(key, regPath, 0, KEY_ALL_ACCESS, &subKey);

	adrp        x8,__imp_RegOpenKeyExA
	ldr         x8,[x8,__imp_RegOpenKeyExA]
	add         x4,sp,#0x70
	str         xzr,[sp,#0x70]
	mov         w3,w24
	mov         w2,#0
	add         x1,sp,#0x110
	mov         x0,x20
	blr         x8

; 59   :         if (status == ERROR_SUCCESS)

	cbnz        w0,|$LN19@RegisterAs|

; 60   :         {
; 61   :             RegCloseKey(subKey);

	adrp        x8,__imp_RegCloseKey
	ldr         x8,[x8,__imp_RegCloseKey]
	ldr         x0,[sp,#0x70]
	blr         x8

; 259  :     {
; 260  :         // HKEY_LOCAL_MACHINE\SOFTWARE\ASIO
; 261  :         if (FindRegPath(HKEY_LOCAL_MACHINE, REGSTR_SOFTWAREASIO))
; 262  :         {
; 263  :             if (FindRegPath(HKEY_LOCAL_MACHINE, asioRegistryPath))
; 264  :             {
; 265  :                 result = HRESULT_FROM_WIN32(RegDeleteTree(HKEY_LOCAL_MACHINE, asioRegistryPath));

	adrp        x8,__imp_RegDeleteTreeA
	ldr         x8,[x8,__imp_RegDeleteTreeA]
	add         x1,sp,#0x110
	mov         x0,x20
	blr         x8
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h

; 30274: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	and         w8,w0,#0xFFFF
	orr         w8,w8,w23
	cmp         w0,#0
	cselle      w19,w0,w8
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp

; 268  :         }

	b           |$LN19@RegisterAs|
|$LN38@RegisterAs|

; 87   :             RegCloseKey(key);

	adrp        x8,__imp_RegCloseKey
	ldr         x8,[x8,__imp_RegCloseKey]
	blr         x8
	b           |$LN72@RegisterAs|
|$LN18@RegisterAs|

; 269  :         else
; 270  :         {
; 271  :             // HKEY_LOCAL_MACHINE\SOFTWARE\ASIO
; 272  :             result = CreateRegistryKeyAndSetValue(HKEY_LOCAL_MACHINE, REGSTR_SOFTWAREASIO, nullptr, nullptr);

	mov         x3,#0
	mov         x2,#0
	add         x1,x22,|??_C@_0O@KEDGEIPK@SOFTWARE?2ASIO@|
	mov         x0,x20
	bl          |?CreateRegistryKeyAndSetValue@@YAJPEAUHKEY__@@PEBD11@Z|
	mov         w19,w0
|$LN19@RegisterAs|

; 273  :         }
; 274  :     }
; 275  : 
; 276  :     if (SUCCEEDED(result))

	tbnz        w19,#0x1F,|$LN87@RegisterAs|

; 277  :     {
; 278  :         REGISTRY_ELEMENT registryElements[] = {
; 279  :             {HKEY_LOCAL_MACHINE, asioRegistryPath, nullptr, nullptr},

	add         x8,sp,#0x110
	stp         xzr,xzr,[sp,#0x20]
	stp         x20,x8,[sp,#0x10]

; 280  :             {HKEY_LOCAL_MACHINE, asioRegistryPath, REGSTR_CLSID, clsid},

	add         x8,sp,#0x110
	stp         x20,x8,[sp,#0x30]
	adrp        x8,|??_C@_05GIBEAPNE@CLSID@|
	add         x9,x8,|??_C@_05GIBEAPNE@CLSID@|
	add         x8,sp,#0xA0
	adrp        x22,__imp_RegCreateKeyExA
	stp         x9,x8,[sp,#0x40]

; 281  :             {HKEY_LOCAL_MACHINE, asioRegistryPath, REGSTR_DESCRIPTION, asioDescriptor}

	add         x8,sp,#0x110
	adrp        x27,__imp_RegSetValueExA
	stp         x20,x8,[sp,#0x50]
	adrp        x8,|??_C@_0M@OHKMKKDH@Description@|
	add         x8,x8,|??_C@_0M@OHKMKKDH@Description@|
	stp         x8,x21,[sp,#0x60]
	add         x20,sp,#0x18

; 282  :         };
; 283  : 
; 284  :         for (int index = 0; (index < _countof(registryElements)) && SUCCEEDED(result); index++)

	mov         w21,#0
	adrp        x26,__imp_RegCloseKey
|$LL7@RegisterAs|
	tbnz        w19,#0x1F,|$LN87@RegisterAs|

; 285  :         {
; 286  :             result = CreateRegistryKeyAndSetValue(

	ldr         x25,[x20,#0x10]

; 104  :     ret = RegCreateKeyEx(rootKey, keyName, 0, nullptr, REG_OPTION_NON_VOLATILE, KEY_ALL_ACCESS, nullptr, &key, nullptr);

	add         x7,sp,#0x70
	ldr         x1,[x20],#0x20
	mov         x6,#0
	str         xzr,[sp]
	ldr         x8,[x22,__imp_RegCreateKeyExA]
	mov         w5,w24
	mov         w4,#0
	mov         x3,#0
	ldur        x0,[x20,#-0x28]
	mov         w2,#0
	mov         w19,#0
	blr         x8

; 105  :     if (ret != ERROR_SUCCESS)

	cbz         w0,|$LN51@RegisterAs|
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h

; 30274: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	and         w8,w0,#0xFFFF
	orr         w8,w8,w23
	cmp         w0,#0
	cselle      w19,w0,w8
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp

; 108  :     }

	b           |$LN52@RegisterAs|
|$LN51@RegisterAs|

; 109  :     else
; 110  :     {
; 111  :         if (data != nullptr)

	cbz         x25,|$LN53@RegisterAs|

; 112  :         {
; 113  :             ret = RegSetValueEx(key, valueName, 0, REG_SZ, (LPBYTE)data, (DWORD)((_tcslen(data) + 1) * sizeof(TCHAR)));

	mov         x8,x25
	ldrsb       w9,[x8]
	cbz         w9,|$LN85@RegisterAs|
|$LL84@RegisterAs|
	ldrsb       w9,[x8,#1]!
	cbnz        w9,|$LL84@RegisterAs|
|$LN85@RegisterAs|
	sub         x8,x8,x25
	ldur        x1,[x20,#-0x18]
	add         w5,w8,#1
	ldr         x0,[sp,#0x70]
	ldr         x8,[x27,__imp_RegSetValueExA]
	mov         x4,x25
	mov         w3,#1
	mov         w2,#0
	blr         x8
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winerror.h

; 30274: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	and         w8,w0,#0xFFFF
	orr         w8,w8,w23
	cmp         w0,#0
	cselle      w19,w0,w8
|$LN53@RegisterAs|
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\Register.cpp

; 116  :         RegCloseKey(key);

	ldr         x0,[sp,#0x70]
	ldr         x8,[x26,__imp_RegCloseKey]
	blr         x8
|$LN52@RegisterAs|

; 282  :         };
; 283  : 
; 284  :         for (int index = 0; (index < _countof(registryElements)) && SUCCEEDED(result); index++)

	add         w21,w21,#1
	cmp         w21,#3
	blo         |$LL7@RegisterAs|

; 287  :                 registryElements[index].RootKey,
; 288  :                 registryElements[index].KeyName,
; 289  :                 registryElements[index].ValueName,
; 290  :                 registryElements[index].Data
; 291  :             );
; 292  :         }
; 293  :     }
; 294  : 
; 295  :     if (!SUCCEEDED(result))

	tbz         w19,#0x1F,|$LN22@RegisterAs|
|$LN87@RegisterAs|

; 296  :     {
; 297  :         UnregisterAsioDriver(clsId, dllName, regName);

	ldp         x0,x1,[sp,#0x90]
	bl          |?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z|
|$LN22@RegisterAs|

; 298  :     }
; 299  : 
; 300  :     return result;
; 301  : }

	mov         w0,w19
|$LN1@RegisterAs|
	add         sp,sp,#0x660
	bl          __security_pop_cookie
	ldr         x27,[sp,#0x50]
	ldp         x25,x26,[sp,#0x40]
	ldp         x23,x24,[sp,#0x30]
	ldp         x21,x22,[sp,#0x20]
	ldp         x19,x20,[sp,#0x10]
	ldp         fp,lr,[sp],#0x60
	ret
|$LN93@RegisterAs|
	DCQ         0xffffffff80000002

	ENDP  ; |?RegisterAsioDriver@@YAJU_GUID@@PEBD111@Z|, RegisterAsioDriver

	END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.44.35216.0 

	TTL	g:\github\microsoft\low-latency-audio\src\vsfiles\intermediate\usbasio\arm64ec\release\usbdevice.obj
	;ARM64

	AREA	|.drectve|, DRECTVE

	IMPORT	|__imp_SetupDiGetDeviceRegistryPropertyA|
	IMPORT	|#_stricmp|
	IMPORT	|__imp_CreateFileA|
	IMPORT	|__imp_StrStrIA|
	IMPORT	|__imp_SetupDiGetDeviceInterfaceDetailA|
	IMPORT	|__imp_DeviceIoControl|
	IMPORT	|__imp_SetupDiGetClassDevsA|
	IMPORT	|__imp_SetupDiEnumDeviceInterfaces|
	IMPORT	|__imp_SetupDiDestroyDeviceInfoList|
	EXPORT	|#_stricmp$exit_thunk|
	EXPORT	|?toInt@@$$hYAHW4KsPropertyUACLowLatencyAudio@@@Z| ; toInt
	EXPORT	|?OpenUsbDevice@@$$hYAPEAXQEAU_GUID@@PEBD11@Z| ; OpenUsbDevice
	EXPORT	|?ChangeSampleRate@@$$hYAHPEAXK@Z|	; ChangeSampleRate
	EXPORT	|?SetAsioBuffer@@$$hYAHPEAXPEAEK1K@Z|	; SetAsioBuffer
	EXPORT	|?GetAsioOwnership@@$$hYAHPEAX@Z|	; GetAsioOwnership
	EXPORT	|?StopAsioStream@@$$hYAHPEAX@Z|		; StopAsioStream
	EXPORT	|?SetClockSource@@$$hYAHPEAXK@Z|	; SetClockSource
	EXPORT	|?GetClockInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| ; GetClockInfo
	EXPORT	|?SetFlags@@$$hYAHPEAXAEBUUAC_SET_FLAGS_CONTEXT_@@@Z| ; SetFlags
	EXPORT	|?StartAsioStream@@$$hYAHPEAX@Z|	; StartAsioStream
	EXPORT	|?UnsetAsioBuffer@@$$hYAHPEAX@Z|	; UnsetAsioBuffer
	EXPORT	|?ReleaseAsioOwnership@@$$hYAHPEAX@Z|	; ReleaseAsioOwnership
	EXPORT	|?SetSampleFormat@@$$hYAHPEAXK@Z|	; SetSampleFormat
	EXPORT	|?GetChannelInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| ; GetChannelInfo
	EXPORT	|?GetAudioProperty@@$$hYAHPEAXPEAU_UAC_AUDIO_PROPERTY@@@Z| ; GetAudioProperty
	IMPORT	|#SetupDiDestroyDeviceInfoList|
	IMPORT	|#SetupDiEnumDeviceInterfaces|
	IMPORT	|#SetupDiGetClassDevsA|
	IMPORT	|#DeviceIoControl|
	IMPORT	|#SetupDiGetDeviceInterfaceDetailA|
	IMPORT	|#StrStrIA|
	IMPORT	|#CreateFileA|
	IMPORT	|#SetupDiGetDeviceRegistryPropertyA|
	IMPORT	|?toInt@@YAHW4KsPropertyUACLowLatencyAudio@@@Z| ; toInt
	IMPORT	|SetupDiDestroyDeviceInfoList|
	IMPORT	|SetupDiEnumDeviceInterfaces|
	IMPORT	|SetupDiGetClassDevsA|
	IMPORT	|DeviceIoControl|
	IMPORT	|SetupDiGetDeviceInterfaceDetailA|
	IMPORT	|StrStrIA|
	IMPORT	|CreateFileA|
	IMPORT	|SetupDiGetDeviceRegistryPropertyA|
	IMPORT	|?GetAudioProperty@@YAHPEAXPEAU_UAC_AUDIO_PROPERTY@@@Z| ; GetAudioProperty
	IMPORT	|?GetChannelInfo@@YAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| ; GetChannelInfo
	IMPORT	|?SetSampleFormat@@YAHPEAXK@Z|		; SetSampleFormat
	IMPORT	|?ReleaseAsioOwnership@@YAHPEAX@Z|	; ReleaseAsioOwnership
	IMPORT	|?UnsetAsioBuffer@@YAHPEAX@Z|		; UnsetAsioBuffer
	IMPORT	|?StartAsioStream@@YAHPEAX@Z|		; StartAsioStream
	IMPORT	|?SetFlags@@YAHPEAXAEBUUAC_SET_FLAGS_CONTEXT_@@@Z| ; SetFlags
	IMPORT	|?GetClockInfo@@YAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| ; GetClockInfo
	IMPORT	|?SetClockSource@@YAHPEAXK@Z|		; SetClockSource
	IMPORT	|?StopAsioStream@@YAHPEAX@Z|		; StopAsioStream
	IMPORT	|?GetAsioOwnership@@YAHPEAX@Z|		; GetAsioOwnership
	IMPORT	|?SetAsioBuffer@@YAHPEAXPEAEK1K@Z|	; SetAsioBuffer
	IMPORT	|?ChangeSampleRate@@YAHPEAXK@Z|		; ChangeSampleRate
	IMPORT	|?OpenUsbDevice@@YAPEAXQEAU_GUID@@PEBD11@Z| ; OpenUsbDevice

	AREA	|.pdata|, PDATA
|$pdata$#_stricmp$exit_thunk| DCD |$LN1|
	DCD	|$unwind$#_stricmp$exit_thunk|

	AREA	|.pdata|, PDATA
|$pdata$?OpenUsbDevice@@$$hYAPEAXQEAU_GUID@@PEBD11@Z| DCD |$LN10|
	DCD	0x1610035
	;Flags[SingleProEpi] functionLength[52] RegF[0] RegI[1] H[0] frameChainReturn[Chained] frameSize[32]

	AREA	|.pdata|, PDATA
|$pdata$?ChangeSampleRate@@$$hYAHPEAXK@Z| DCD |$LN6|
	DCD	|$unwind$?ChangeSampleRate@@$$hYAHPEAXK@Z|

	AREA	|.pdata|, PDATA
|$pdata$?SetAsioBuffer@@$$hYAHPEAXPEAEK1K@Z| DCD |$LN10|
	DCD	|$unwind$?SetAsioBuffer@@$$hYAHPEAXPEAEK1K@Z|

	AREA	|.pdata|, PDATA
|$pdata$?GetAsioOwnership@@$$hYAHPEAX@Z| DCD |$LN6|
	DCD	|$unwind$?GetAsioOwnership@@$$hYAHPEAX@Z|

	AREA	|.pdata|, PDATA
|$pdata$?StopAsioStream@@$$hYAHPEAX@Z| DCD |$LN6|
	DCD	|$unwind$?StopAsioStream@@$$hYAHPEAX@Z|

	AREA	|.pdata|, PDATA
|$pdata$?SetClockSource@@$$hYAHPEAXK@Z| DCD |$LN6|
	DCD	|$unwind$?SetClockSource@@$$hYAHPEAXK@Z|

	AREA	|.pdata|, PDATA
|$pdata$?GetClockInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| DCD |$LN15|
	DCD	|$unwind$?GetClockInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$0$?GetClockInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| DCD |$LN15|+44
	DCD	|$unwind$0$?GetClockInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$1$?GetClockInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| DCD |$LN15|+252
	DCD	|$unwind$1$?GetClockInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$?SetFlags@@$$hYAHPEAXAEBUUAC_SET_FLAGS_CONTEXT_@@@Z| DCD |$LN6|
	DCD	|$unwind$?SetFlags@@$$hYAHPEAXAEBUUAC_SET_FLAGS_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$?StartAsioStream@@$$hYAHPEAX@Z| DCD |$LN6|
	DCD	|$unwind$?StartAsioStream@@$$hYAHPEAX@Z|

	AREA	|.pdata|, PDATA
|$pdata$?UnsetAsioBuffer@@$$hYAHPEAX@Z| DCD |$LN6|
	DCD	|$unwind$?UnsetAsioBuffer@@$$hYAHPEAX@Z|

	AREA	|.pdata|, PDATA
|$pdata$?ReleaseAsioOwnership@@$$hYAHPEAX@Z| DCD |$LN6|
	DCD	|$unwind$?ReleaseAsioOwnership@@$$hYAHPEAX@Z|

	AREA	|.pdata|, PDATA
|$pdata$?SetSampleFormat@@$$hYAHPEAXK@Z| DCD |$LN6|
	DCD	|$unwind$?SetSampleFormat@@$$hYAHPEAXK@Z|

	AREA	|.pdata|, PDATA
|$pdata$?GetChannelInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| DCD |$LN14|
	DCD	|$unwind$?GetChannelInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$0$?GetChannelInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| DCD |$LN14|+44
	DCD	|$unwind$0$?GetChannelInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$1$?GetChannelInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| DCD |$LN14|+240
	DCD	|$unwind$1$?GetChannelInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$?GetAudioProperty@@$$hYAHPEAXPEAU_UAC_AUDIO_PROPERTY@@@Z| DCD |$LN6|
	DCD	|$unwind$?GetAudioProperty@@$$hYAHPEAXPEAU_UAC_AUDIO_PROPERTY@@@Z|

	AREA	|.pdata|, PDATA
|$pdata$?OpenUsbDeviceCore@@$$hYAPEAXQEAU_GUID@@PEBD11@Z| DCD |?OpenUsbDeviceCore@@$$hYAPEAXQEAU_GUID@@PEBD11@Z|
	DCD	|$unwind$?OpenUsbDeviceCore@@$$hYAPEAXQEAU_GUID@@PEBD11@Z|

	AREA	|.xdata|, DATA
|$unwind$?OpenUsbDeviceCore@@$$hYAPEAXQEAU_GUID@@PEBD11@Z| DCD 0x3850008e
	DCD	0x300007e
	DCD	0x8d2e101
	DCD	0x84c886c9
	DCD	0xe48902c8
	DCD	0xd20129c0
	DCD	0xc886c908
	DCD	0x8902c884
	DCD	0xe3e3e3e4
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffa8
	;Code Words[7], Epilog Count[1], E[0], X[1], Function Length[142]=568 bytes
	;Epilog Start Index[12], Epilog Start Offset[126]=504 bytes
	;alloc_s
	;set_fp
	;save_reg
	;save_regp
	;save_regp
	;save_regp
	;save_fplr_x
	;end
	;alloc_m
	;alloc_s
	;save_reg
	;save_regp
	;save_regp
	;save_regp
	;save_fplr_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$?GetAudioProperty@@$$hYAHPEAXPEAU_UAC_AUDIO_PROPERTY@@@Z| DCD 0x11300018
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[24]=96 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$1$?GetChannelInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| DCD 0x19700004
	DCD	0x85e101e5
	DCD	0x850103e4
	DCD	0xe3e3e3e4
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[3], Epilog Start Index[5], E[1], X[1], Function Length[4]=16 bytes
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$0$?GetChannelInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| DCD 0x18500031
	DCD	0x2f
	DCD	0xac88cd0
	DCD	0x85e101e5
	DCD	0xe3e3e3e4
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[3], Epilog Count[1], E[0], X[1], Function Length[49]=196 bytes
	;Epilog Start Index[0], Epilog Start Offset[47]=188 bytes
	;save_reg
	;save_regp
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$?GetChannelInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| DCD 0x1130000b
	DCD	0xe485e101
	DCD	0xe4850103
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[11]=44 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?SetSampleFormat@@$$hYAHPEAXK@Z| DCD 0x11300019
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[25]=100 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?ReleaseAsioOwnership@@$$hYAHPEAX@Z| DCD 0x11300019
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[25]=100 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?UnsetAsioBuffer@@$$hYAHPEAX@Z| DCD 0x11300019
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[25]=100 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?StartAsioStream@@$$hYAHPEAX@Z| DCD 0x11300019
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[25]=100 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?SetFlags@@$$hYAHPEAXAEBUUAC_SET_FLAGS_CONTEXT_@@@Z| DCD 0x11300021
	DCD	0xe481e101
	DCD	0xe4810107
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[33]=132 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$1$?GetClockInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| DCD 0x19700004
	DCD	0x85e101e5
	DCD	0x850103e4
	DCD	0xe3e3e3e4
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[3], Epilog Start Index[5], E[1], X[1], Function Length[4]=16 bytes
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$0$?GetClockInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| DCD 0x18500034
	DCD	0x32
	DCD	0xac88cd0
	DCD	0x85e101e5
	DCD	0xe3e3e3e4
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[3], Epilog Count[1], E[0], X[1], Function Length[52]=208 bytes
	;Epilog Start Index[0], Epilog Start Offset[50]=200 bytes
	;save_reg
	;save_regp
	;end_c
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;nop
	;nop
	;nop

	AREA	|.xdata|, DATA
|$unwind$?GetClockInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| DCD 0x1130000b
	DCD	0xe485e101
	DCD	0xe4850103
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffc8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[11]=44 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?SetClockSource@@$$hYAHPEAXK@Z| DCD 0x11300019
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[25]=100 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?StopAsioStream@@$$hYAHPEAX@Z| DCD 0x11300019
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[25]=100 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?GetAsioOwnership@@$$hYAHPEAX@Z| DCD 0x11300019
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[25]=100 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$?SetAsioBuffer@@$$hYAHPEAXPEAEK1K@Z| DCD 0x1130001c
	DCD	0xe481e101
	DCD	0xe3e48101
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[28]=112 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;save_fplr_x
	;end
	;nop

	AREA	|.xdata|, DATA
|$unwind$?ChangeSampleRate@@$$hYAHPEAXK@Z| DCD 0x11300019
	DCD	0xe481e101
	DCD	0xe4810103
	DCD	|#__GSHandlerCheck|
	DCD	0xffffffe8
	;Code Words[2], Epilog Start Index[4], E[1], X[1], Function Length[25]=100 bytes
	;alloc_s
	;set_fp
	;save_fplr_x
	;end
	;alloc_s
	;alloc_s
	;save_fplr_x
	;end

	AREA	|.xdata|, DATA
|$unwind$#_stricmp$exit_thunk| DCD 0x18e0000f
	DCD	0x81e4fc81
	DCD	0xe3e3e3fc
	DCD	0xe3e3e3e4
	;Code Words[3], Epilog Start Index[3], E[1], X[0], Function Length[15]=60 bytes
	;save_fplr_x
	;pac_sign_return_address
	;end
	;save_fplr_x
	;pac_sign_return_address
	;nop
	;nop
	;nop
	;end
	;nop
	;nop
	;nop
; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?OpenUsbDeviceCore@@$$hYAPEAXQEAU_GUID@@PEBD11@Z| PROC	; OpenUsbDeviceCore

; 41   : {

	stp         fp,lr,[sp,#-0x50]!
	stp         x19,x20,[sp,#0x10]
	stp         x21,x22,[sp,#0x20]
	stp         x25,x26,[sp,#0x30]
	str         x27,[sp,#0x40]
	mov         fp,sp
	bl          |#__security_push_cookie|
	sub         sp,sp,#0x290

; 42   :     BOOL result = FALSE;
; 43   : 
; 44   :     HDEVINFO deviceInfo = SetupDiGetClassDevs(classGuid, nullptr, nullptr, DIGCF_PRESENT | DIGCF_DEVICEINTERFACE);

	adrp        x8,_GUID_6994ad04_93ef_11d0_a3cc_00a0c9223196
	add         x0,x8,_GUID_6994ad04_93ef_11d0_a3cc_00a0c9223196
	str         x3,[sp]
	mov         w3,#0x12
	mov         x2,#0
	mov         x1,#0
	bl          |#SetupDiGetClassDevsA|

; 45   : 
; 46   :     if (deviceInfo == INVALID_HANDLE_VALUE)

	cmn         x0,#1
	beq         |$LN45@OpenUsbDev|
	adrp        x26,_GUID_6994ad04_93ef_11d0_a3cc_00a0c9223196

; 55   : 
; 56   :         result = SetupDiEnumDeviceInterfaces(deviceInfo, nullptr, classGuid, index, &deviceInterfaceData);

	add         x2,x26,_GUID_6994ad04_93ef_11d0_a3cc_00a0c9223196
	mov         w22,#0x20
	add         x4,sp,#0x18
	mov         w3,#0
	str         w22,[sp,#0x18]
	mov         x1,#0
	mov         x19,x0
	mov         w21,#0
	bl          |#SetupDiEnumDeviceInterfaces|

; 57   : 
; 58   :         if (!result)

	cbz         w0,|$LN42@OpenUsbDev|
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x27,x8,KSPROPSETID_LowLatencyAudio
|$LL4@OpenUsbDev|

; 61   :             {
; 62   :                 goto OpenUsbDeviceCore_Error;
; 63   :             }
; 64   :             else
; 65   :             {
; 66   :                 break;
; 67   :             }
; 68   :         }
; 69   : 
; 70   :         BOOL            success = TRUE;
; 71   :         DWORD           deviceInterfaceDetailDataSize = 0;
; 72   :         TCHAR           serviceName[128];
; 73   :         SP_DEVINFO_DATA deviceInfoData;
; 74   :         deviceInfoData.cbSize = sizeof(deviceInfoData);
; 75   : 
; 76   :         success = SetupDiGetDeviceInterfaceDetail(deviceInfo, &deviceInterfaceData, nullptr, 0, &deviceInterfaceDetailDataSize, &deviceInfoData);

	add         x5,sp,#0x60
	str         wzr,[sp,#8]
	add         x4,sp,#8
	str         w22,[sp,#0x60]
	mov         w3,#0
	mov         x2,#0
	add         x1,sp,#0x18
	mov         x0,x19
	bl          |#SetupDiGetDeviceInterfaceDetailA|

; 77   :         // Check for error.
; 78   :         if ((GetLastError() != ERROR_INSUFFICIENT_BUFFER) || (!deviceInterfaceDetailDataSize))

	bl          |#GetLastError|
	ldr         w8,[sp,#8]
	cmp         w0,#0x7A
	mov         x0,x19
	ccmpeq      w8,#0,#4
	beq         |$LN39@OpenUsbDev|

; 81   :             break;
; 82   :         }
; 83   : 
; 84   :         if (SetupDiGetDeviceRegistryProperty(deviceInfo, &deviceInfoData, SPDRP_SERVICE, nullptr, (PBYTE)serviceName, sizeof(serviceName), nullptr))

	mov         x6,#0
	mov         w5,#0x80
	add         x4,sp,#0x218
	mov         x3,#0
	mov         w2,#4
	add         x1,sp,#0x60
	bl          |#SetupDiGetDeviceRegistryPropertyA|
	cbz         w0,|$LN2@OpenUsbDev|

; 85   :         {
; 86   :             if (_tcsicmp(serviceName, serviceName) == 0)

	add         x1,sp,#0x218
	add         x0,sp,#0x218
	bl          |#_stricmp|
	cbnz        w0,|$LN2@OpenUsbDev|

; 87   :             {
; 88   :                 // Allocate the buffer for the device interface detail data.
; 89   :                 PSP_DEVICE_INTERFACE_DETAIL_DATA deviceInterfaceDetailData = nullptr;
; 90   : 
; 91   :                 deviceInterfaceDetailData = (PSP_DEVICE_INTERFACE_DETAIL_DATA) new BYTE[deviceInterfaceDetailDataSize];

	ldr         w0,[sp,#8]
	bl          |??_U@$$hYAPEAX_K@Z|
	mov         x20,x0

; 92   : 
; 93   :                 if (!deviceInterfaceDetailData)

	cbz         x20,|$OpenUsbDeviceCore_Error$47|

; 94   :                 {
; 95   :                     break;
; 96   :                 }
; 97   :                 (deviceInterfaceDetailData)->cbSize = sizeof(SP_DEVICE_INTERFACE_DETAIL_DATA);

	mov         w8,#8
	str         w8,[x20]

; 98   : 
; 99   :                 if (SetupDiGetDeviceInterfaceDetail(deviceInfo, &deviceInterfaceData, deviceInterfaceDetailData, deviceInterfaceDetailDataSize, nullptr, nullptr))

	ldr         w3,[sp,#8]
	mov         x5,#0
	mov         x4,#0
	mov         x2,x20
	add         x1,sp,#0x18
	mov         x0,x19
	bl          |#SetupDiGetDeviceInterfaceDetailA|
	cbz         w0,|$LN21@OpenUsbDev|

; 100  :                 {
; 101  :                     info_print_("compare %s, %s\n", deviceInterfaceDetailData->DevicePath, referenceString);
; 102  :                     if (StrStrI(deviceInterfaceDetailData->DevicePath, referenceString) != nullptr)

	adrp        x8,|??_C@_0O@LGMBKNOO@RenderDevice0@|
	add         x1,x8,|??_C@_0O@LGMBKNOO@RenderDevice0@|
	add         x0,x20,#4
	bl          |#StrStrIA|
	cbz         x0,|$LN21@OpenUsbDev|

; 103  :                     {
; 104  :                         if ((desiredPath == nullptr) || ((desiredPath != nullptr && _tcsicmp(deviceInterfaceDetailData->DevicePath, desiredPath) == 0)))

	ldr         x1,[sp]
	cbz         x1,|$LN18@OpenUsbDev|
	add         x0,x20,#4
	bl          |#_stricmp|
	cbnz        w0,|$LN21@OpenUsbDev|
|$LN18@OpenUsbDev|

; 105  :                         {
; 106  :                             HANDLE targetHandle = CreateFile(deviceInterfaceDetailData->DevicePath, GENERIC_READ, FILE_SHARE_READ | FILE_SHARE_WRITE, nullptr, OPEN_EXISTING, 0, nullptr);

	mov         x6,#0
	mov         w5,#0
	mov         w4,#3
	mov         x3,#0
	mov         w2,#3
	mov         w1,#0x80000000
	add         x0,x20,#4
	bl          |#CreateFileA|
	mov         x25,x0

; 107  : 
; 108  :                             if (targetHandle != INVALID_HANDLE_VALUE)

	cmn         x25,#1
	beq         |$LN21@OpenUsbDev|

; 177  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;

	ldr         q7,[x27]

; 178  :     privateProperty.Flags = KSPROPERTY_TYPE_GET;
; 179  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::GetAudioProperty);

	mov         x8,#0x100000000

; 180  : 
; 181  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), audioProperty, sizeof(UAC_AUDIO_PROPERTY), &bytesReturned, nullptr);

	mov         x7,#0
	str         wzr,[sp,#0x10]
	add         x6,sp,#0x10
	str         x8,[sp,#0x50]
	mov         w5,#0x198
	add         x4,sp,#0x80
	str         q7,[sp,#0x40]
	mov         w3,#0x18
	add         x2,sp,#0x40
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	bl          |#DeviceIoControl|

; 109  :                             {
; 110  :                                 UAC_AUDIO_PROPERTY audioProp;
; 111  :                                 result = GetAudioProperty(targetHandle, &audioProp);
; 112  :                                 if (result && (audioProp.OutputAsioChannels != 0))

	cbz         w0,|$LN20@OpenUsbDev|
	ldr         w8,[sp,#0x1DC]
	cbnz        w8,|$LN41@OpenUsbDev|
|$LN20@OpenUsbDev|

; 120  :                                 }
; 121  :                                 else
; 122  :                                 {
; 123  :                                     CloseHandle(targetHandle);

	mov         x0,x25
	bl          |#CloseHandle|
|$LN21@OpenUsbDev|

; 124  :                                     targetHandle = INVALID_HANDLE_VALUE;
; 125  :                                 }
; 126  :                             }
; 127  :                         }
; 128  :                     }
; 129  :                 }
; 130  :                 if (deviceInterfaceDetailData != nullptr)
; 131  :                 {
; 132  :                     delete[] (BYTE *)deviceInterfaceDetailData;

	mov         x0,x20
	bl          |??_V@$$hYAXPEAX@Z|
|$LN2@OpenUsbDev|

; 47   :     {
; 48   :         return INVALID_HANDLE_VALUE;
; 49   :     }
; 50   : 
; 51   :     for (DWORD index = 0;; index++)
; 52   :     {
; 53   :         SP_DEVICE_INTERFACE_DATA deviceInterfaceData;
; 54   :         deviceInterfaceData.cbSize = sizeof(SP_DEVICE_INTERFACE_DATA);

	add         w21,w21,#1
	str         w22,[sp,#0x18]

; 55   : 
; 56   :         result = SetupDiEnumDeviceInterfaces(deviceInfo, nullptr, classGuid, index, &deviceInterfaceData);

	mov         w3,w21
	add         x4,sp,#0x18
	add         x2,x26,_GUID_6994ad04_93ef_11d0_a3cc_00a0c9223196
	mov         x1,#0
	mov         x0,x19
	bl          |#SetupDiEnumDeviceInterfaces|

; 57   : 
; 58   :         if (!result)

	cbnz        w0,|$LL4@OpenUsbDev|
|$LN42@OpenUsbDev|

; 59   :         {
; 60   :             if (ERROR_NO_MORE_ITEMS != GetLastError())

	bl          |#GetLastError|
|$OpenUsbDeviceCore_Error$47|

; 133  :                     deviceInterfaceDetailData = nullptr;
; 134  :                 }
; 135  :             }
; 136  :         }
; 137  :     }
; 138  : 
; 139  : OpenUsbDeviceCore_Error:
; 140  :     if (deviceInfo != INVALID_HANDLE_VALUE)
; 141  :     {
; 142  :         SetupDiDestroyDeviceInfoList(deviceInfo);

	mov         x0,x19
	bl          |#SetupDiDestroyDeviceInfoList|
|$LN45@OpenUsbDev|

; 143  :         deviceInfo = INVALID_HANDLE_VALUE;
; 144  :     }
; 145  : 
; 146  :     return INVALID_HANDLE_VALUE;
; 147  : }

	mov         x0,#-1
|$LN1@OpenUsbDev|
	add         sp,sp,#0x290
	bl          |#__security_pop_cookie|
	ldr         x27,[sp,#0x40]
	ldp         x25,x26,[sp,#0x30]
	ldp         x21,x22,[sp,#0x20]
	ldp         x19,x20,[sp,#0x10]
	ldp         fp,lr,[sp],#0x50
	ret
|$LN41@OpenUsbDev|

; 113  :                                 {
; 114  :                                     info_print_("successfully opened %s\n", deviceInterfaceDetailData->DevicePath);
; 115  :                                     delete[] (BYTE *)deviceInterfaceDetailData;

	mov         x0,x20
	bl          |??_V@$$hYAXPEAX@Z|

; 116  :                                     deviceInterfaceDetailData = nullptr;
; 117  :                                     SetupDiDestroyDeviceInfoList(deviceInfo);

	mov         x0,x19
	bl          |#SetupDiDestroyDeviceInfoList|

; 118  :                                     deviceInfo = INVALID_HANDLE_VALUE;
; 119  :                                     return targetHandle;

	mov         x0,x25
	b           |$LN1@OpenUsbDev|
|$LN39@OpenUsbDev|

; 79   :         {
; 80   :             SetupDiDestroyDeviceInfoList(deviceInfo);

	bl          |#SetupDiDestroyDeviceInfoList|
	b           |$OpenUsbDeviceCore_Error$47|

	ENDP  ; |?OpenUsbDeviceCore@@$$hYAPEAXQEAU_GUID@@PEBD11@Z|, OpenUsbDeviceCore

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?GetAudioProperty@@$$hYAHPEAXPEAU_UAC_AUDIO_PROPERTY@@@Z| PROC ; GetAudioProperty

; 172  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          |#__security_push_cookie|
	sub         sp,sp,#0x30
	mov         x4,x1

; 173  :     BOOL       result = FALSE;
; 174  :     KSPROPERTY privateProperty{};
; 175  :     ULONG      bytesReturned = 0;

	str         wzr,[sp]

; 176  : 
; 177  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 178  :     privateProperty.Flags = KSPROPERTY_TYPE_GET;
; 179  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::GetAudioProperty);
; 180  : 
; 181  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), audioProperty, sizeof(UAC_AUDIO_PROPERTY), &bytesReturned, nullptr);

	mov         x7,#0
	mov         x6,sp
	mov         w5,#0x198
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q7,[x8]
	mov         x8,#0x100000000
	str         x8,[sp,#0x20]
	str         q7,[sp,#0x10]
	bl          |#DeviceIoControl|
	add         sp,sp,#0x30
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?GetAudioProperty@@$$hYAHPEAXPEAU_UAC_AUDIO_PROPERTY@@@Z|, GetAudioProperty

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?GetChannelInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z| PROC ; GetChannelInfo

; 191  : {

|$LN14|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	bl          |#__security_push_cookie|
	sub         sp,sp,#0x30

; 192  :     BOOL       result = FALSE;
; 193  :     KSPROPERTY privateProperty{};
; 194  :     ULONG      bytesReturned = 0;

	str         wzr,[sp]

; 195  : 
; 196  :     if (channelInfo == nullptr)

	cbnz        x1,|$LN11@GetChannel|

; 197  :     {
; 198  :         return result;

	mov         w0,#0
	add         sp,sp,#0x30
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x30
	ret
|$LN11@GetChannel|
	stp         x19,x20,[sp,#0x50]
	str         x21,[sp,#0x60]

; 195  : 
; 196  :     if (channelInfo == nullptr)

	mov         x21,x0
	mov         x20,x1

; 199  :     }
; 200  : 
; 201  :     *channelInfo = {};

	str         xzr,[x20]

; 202  : 
; 203  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;

	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q7,[x8]
	str         q7,[sp,#0x10]

; 204  :     privateProperty.Flags = KSPROPERTY_TYPE_GET;
; 205  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::GetChannelInfo);

	movi        x8,#0x100000001
	str         x8,[sp,#0x20]

; 206  : 
; 207  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	mov         x0,x21
	bl          |#DeviceIoControl|
	mov         w19,w0

; 208  : 
; 209  :     if (!result)

	cbnz        w19,|$LN7@GetChannel|

; 210  :     {
; 211  :         DWORD error = GetLastError();

	bl          |#GetLastError|
	mov         w8,#0x54

; 212  :         if ((error == ERROR_MORE_DATA) && (bytesReturned >= sizeof(UAC_GET_CHANNEL_INFO_CONTEXT)))

	cmp         w0,#0xEA
	ldr         w0,[sp]
	ccmpeq      w0,w8,#0
	blo         |$LN7@GetChannel|

; 213  :         {
; 214  :             *channelInfo = (PUAC_GET_CHANNEL_INFO_CONTEXT)(new BYTE[bytesReturned]);

	bl          |??_U@$$hYAPEAX_K@Z|

; 215  :             if (channelInfo != nullptr)
; 216  :             {
; 217  :                 result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), *channelInfo, bytesReturned, &bytesReturned, nullptr);

	ldr         w5,[sp]
	mov         x7,#0
	str         x0,[x20]
	mov         x4,x0
	mov         x6,sp
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	mov         x0,x21
	bl          |#DeviceIoControl|
	mov         w19,w0

; 218  :                 if (!result)

	cbnz        w19,|$LN7@GetChannel|

; 219  :                 {
; 220  :                     delete[] (BYTE *)(*channelInfo);

	ldr         x0,[x20]
	bl          |??_V@$$hYAXPEAX@Z|

; 221  :                     *channelInfo = nullptr;

	str         xzr,[x20]
|$LN7@GetChannel|

; 222  :                 }
; 223  :             }
; 224  :             else
; 225  :             {
; 226  :                 result = FALSE;
; 227  :             }
; 228  :         }
; 229  :     }
; 230  : 
; 231  :     return result;

	mov         w0,w19
	ldr         x21,[sp,#0x60]
	ldp         x19,x20,[sp,#0x50]
	add         sp,sp,#0x30
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |?GetChannelInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CHANNEL_INFO_CONTEXT_@@@Z|, GetChannelInfo

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?SetSampleFormat@@$$hYAHPEAXK@Z| PROC			; SetSampleFormat

; 331  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          |#__security_push_cookie|
	sub         sp,sp,#0x30

; 332  :     BOOL       result = FALSE;
; 333  :     KSPROPERTY privateProperty{};
; 334  :     ULONG      bytesReturned = 0;
; 335  : 
; 336  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 337  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 338  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::SetSampleFormat);
; 339  : 
; 340  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), &sampleFormat, sizeof(ULONG), &bytesReturned, nullptr);

	mov         x7,#0
	stp         wzr,w1,[sp]
	mov         x6,sp
	mov         w5,#4
	add         x4,sp,#4
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q7,[x8]
	mov         x8,#6
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	str         q7,[sp,#0x10]
	bl          |#DeviceIoControl|
	add         sp,sp,#0x30
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?SetSampleFormat@@$$hYAHPEAXK@Z|, SetSampleFormat

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?ReleaseAsioOwnership@@$$hYAHPEAX@Z| PROC		; ReleaseAsioOwnership

; 465  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          |#__security_push_cookie|
	sub         sp,sp,#0x30

; 466  :     BOOL       result = FALSE;
; 467  :     KSPROPERTY privateProperty{};
; 468  :     ULONG      bytesReturned = 0;
; 469  : 
; 470  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 471  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 472  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::ReleaseAsioOwnership);
; 473  : 
; 474  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	str         wzr,[sp]
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q7,[x8]
	mov         x8,#0xD
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	str         q7,[sp,#0x10]
	bl          |#DeviceIoControl|
	add         sp,sp,#0x30
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?ReleaseAsioOwnership@@$$hYAHPEAX@Z|, ReleaseAsioOwnership

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?UnsetAsioBuffer@@$$hYAHPEAX@Z| PROC			; UnsetAsioBuffer

; 447  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          |#__security_push_cookie|
	sub         sp,sp,#0x30

; 448  :     BOOL       result = FALSE;
; 449  :     KSPROPERTY privateProperty{};
; 450  :     ULONG      bytesReturned = 0;
; 451  : 
; 452  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 453  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 454  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::UnsetAsioBuffer);
; 455  : 
; 456  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	str         wzr,[sp]
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q7,[x8]
	mov         x8,#0xC
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	str         q7,[sp,#0x10]
	bl          |#DeviceIoControl|
	add         sp,sp,#0x30
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?UnsetAsioBuffer@@$$hYAHPEAX@Z|, UnsetAsioBuffer

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?StartAsioStream@@$$hYAHPEAX@Z| PROC			; StartAsioStream

; 386  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          |#__security_push_cookie|
	sub         sp,sp,#0x30

; 387  :     BOOL       result = FALSE;
; 388  :     KSPROPERTY privateProperty{};
; 389  :     ULONG      bytesReturned = 0;
; 390  : 
; 391  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 392  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 393  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::StartAsioStream);
; 394  : 
; 395  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	str         wzr,[sp]
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q7,[x8]
	mov         x8,#9
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	str         q7,[sp,#0x10]
	bl          |#DeviceIoControl|
	add         sp,sp,#0x30
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?StartAsioStream@@$$hYAHPEAX@Z|, StartAsioStream

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?SetFlags@@$$hYAHPEAXAEBUUAC_SET_FLAGS_CONTEXT_@@@Z| PROC ; SetFlags

; 311  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          |#__security_push_cookie|
	sub         sp,sp,#0x70

; 312  :     BOOL                  result = FALSE;
; 313  :     KSPROPERTY            privateProperty{};
; 314  :     ULONG                 bytesReturned = 0;
; 315  :     UAC_SET_FLAGS_CONTEXT setFlagsContext = flags;
; 316  : 
; 317  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 318  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 319  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::SetFlags);
; 320  : 
; 321  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), &setFlagsContext, sizeof(UAC_SET_FLAGS_CONTEXT), &bytesReturned, nullptr);

	mov         x7,#0
	ldr         x8,[x1,#0x30]
	str         wzr,[sp]
	mov         x6,sp
	ldp         q6,q7,[x1]
	mov         w5,#0x3C
	add         x4,sp,#0x30
	mov         w3,#0x18
	str         x8,[sp,#0x60]
	ldr         w8,[x1,#0x38]
	add         x2,sp,#0x10
	stp         q6,q7,[sp,#0x30]
	ldr         q7,[x1,#0x20]
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	str         w8,[sp,#0x68]
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	str         q7,[sp,#0x50]
	ldr         q7,[x8]
	mov         x8,#5
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	str         q7,[sp,#0x10]
	bl          |#DeviceIoControl|
	add         sp,sp,#0x70
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?SetFlags@@$$hYAHPEAXAEBUUAC_SET_FLAGS_CONTEXT_@@@Z|, SetFlags

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?GetClockInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z| PROC ; GetClockInfo

; 239  : {

|$LN15|
	stp         fp,lr,[sp,#-0x30]!
	mov         fp,sp
	bl          |#__security_push_cookie|
	sub         sp,sp,#0x30

; 240  :     BOOL       result = FALSE;
; 241  :     KSPROPERTY privateProperty{};
; 242  :     ULONG      bytesReturned = 0;

	str         wzr,[sp]

; 243  : 
; 244  :     if (clockInfo == nullptr)

	cbnz        x1,|$LN12@GetClockIn|

; 245  :     {
; 246  :         return result;

	mov         w0,#0
	add         sp,sp,#0x30
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x30
	ret
|$LN12@GetClockIn|
	stp         x19,x20,[sp,#0x50]
	str         x21,[sp,#0x60]

; 243  : 
; 244  :     if (clockInfo == nullptr)

	mov         x21,x0
	mov         x20,x1

; 247  :     }
; 248  : 
; 249  :     *clockInfo = {};

	str         xzr,[x20]

; 250  : 
; 251  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;

	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q7,[x8]
	str         q7,[sp,#0x10]

; 252  :     privateProperty.Flags = KSPROPERTY_TYPE_GET;
; 253  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::GetClockInfo);

	mov         x8,#2
	movk        x8,#1,lsl #0x20
	str         x8,[sp,#0x20]

; 254  : 
; 255  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	mov         x0,x21
	bl          |#DeviceIoControl|
	mov         w19,w0

; 256  : 
; 257  :     if (!result)

	cbnz        w19,|$LN5@GetClockIn|

; 258  :     {
; 259  :         DWORD error = GetLastError();

	bl          |#GetLastError|
	mov         w8,#0x58

; 260  :         if ((error == ERROR_MORE_DATA) && (bytesReturned >= sizeof(UAC_GET_CLOCK_INFO_CONTEXT)))

	cmp         w0,#0xEA
	ldr         w0,[sp]
	ccmpeq      w0,w8,#0
	blo         |$LN4@GetClockIn|

; 261  :         {
; 262  :             *clockInfo = (PUAC_GET_CLOCK_INFO_CONTEXT)(new BYTE[bytesReturned]);

	bl          |??_U@$$hYAPEAX_K@Z|

; 263  :             if (clockInfo != nullptr)
; 264  :             {
; 265  :                 result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), *clockInfo, bytesReturned, &bytesReturned, nullptr);

	ldr         w5,[sp]
	mov         x7,#0
	str         x0,[x20]
	mov         x4,x0
	mov         x6,sp
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	mov         x0,x21
	bl          |#DeviceIoControl|
	mov         w19,w0

; 266  :                 if (!result)

	cbnz        w19,|$LN5@GetClockIn|

; 267  :                 {
; 268  :                     delete[] (BYTE *)(*clockInfo);

	ldr         x0,[x20]
	bl          |??_V@$$hYAXPEAX@Z|

; 269  :                     *clockInfo = nullptr;

	str         xzr,[x20]

; 270  :                 }
; 271  :             }
; 272  :             else
; 273  :             {
; 274  :                 result = FALSE;
; 275  :             }
; 276  :         }

	b           |$LN5@GetClockIn|
|$LN4@GetClockIn|

; 277  :         else
; 278  :         {
; 279  :             result = FALSE;

	mov         w19,#0
|$LN5@GetClockIn|

; 280  :         }
; 281  :     }
; 282  : 
; 283  :     return result;

	mov         w0,w19
	ldr         x21,[sp,#0x60]
	ldp         x19,x20,[sp,#0x50]
	add         sp,sp,#0x30
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x30
	ret

	ENDP  ; |?GetClockInfo@@$$hYAHPEAXPEAPEAUUAC_GET_CLOCK_INFO_CONTEXT_@@@Z|, GetClockInfo

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?SetClockSource@@$$hYAHPEAXK@Z| PROC			; SetClockSource

; 291  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          |#__security_push_cookie|
	sub         sp,sp,#0x30

; 292  :     BOOL                         result = FALSE;
; 293  :     KSPROPERTY                   privateProperty{};
; 294  :     ULONG                        bytesReturned = 0;
; 295  :     UAC_SET_CLOCK_SOURCE_CONTEXT setClockSourceContext = {index};
; 296  : 
; 297  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 298  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 299  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::SetClockSource);
; 300  : 
; 301  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), &setClockSourceContext, sizeof(UAC_SET_CLOCK_SOURCE_CONTEXT), &bytesReturned, nullptr);

	mov         x7,#0
	stp         wzr,w1,[sp]
	mov         x6,sp
	mov         w5,#4
	add         x4,sp,#4
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q7,[x8]
	mov         x8,#4
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	str         q7,[sp,#0x10]
	bl          |#DeviceIoControl|
	add         sp,sp,#0x30
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?SetClockSource@@$$hYAHPEAXK@Z|, SetClockSource

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?StopAsioStream@@$$hYAHPEAX@Z| PROC			; StopAsioStream

; 404  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          |#__security_push_cookie|
	sub         sp,sp,#0x30

; 405  :     BOOL       result = FALSE;
; 406  :     KSPROPERTY privateProperty{};
; 407  :     ULONG      bytesReturned = 0;
; 408  : 
; 409  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 410  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 411  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::StopAsioStream);
; 412  : 
; 413  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	str         wzr,[sp]
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q7,[x8]
	mov         x8,#0xA
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	str         q7,[sp,#0x10]
	bl          |#DeviceIoControl|
	add         sp,sp,#0x30
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?StopAsioStream@@$$hYAHPEAX@Z|, StopAsioStream

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?GetAsioOwnership@@$$hYAHPEAX@Z| PROC			; GetAsioOwnership

; 368  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          |#__security_push_cookie|
	sub         sp,sp,#0x30

; 369  :     BOOL       result = FALSE;
; 370  :     KSPROPERTY privateProperty{};
; 371  :     ULONG      bytesReturned = 0;
; 372  : 
; 373  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 374  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 375  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::GetAsioOwnership);
; 376  : 
; 377  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), nullptr, 0, &bytesReturned, nullptr);

	mov         x7,#0
	str         wzr,[sp]
	mov         x6,sp
	mov         w5,#0
	mov         x4,#0
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q7,[x8]
	mov         x8,#8
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	str         q7,[sp,#0x10]
	bl          |#DeviceIoControl|
	add         sp,sp,#0x30
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?GetAsioOwnership@@$$hYAHPEAX@Z|, GetAsioOwnership

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?SetAsioBuffer@@$$hYAHPEAXPEAEK1K@Z| PROC		; SetAsioBuffer

; 426  : {

|$LN10|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          |#__security_push_cookie|
	mov         x8,x0

; 427  :     BOOL        result = FALSE;
; 428  :     PKSPROPERTY privateProperty = (PKSPROPERTY)driverPlayBufferWithKsProperty;
; 429  :     ULONG       bytesReturned = 0;

	str         wzr,[sp]
	mov         w0,#0

; 430  : 
; 431  :     if (driverPlayBufferWithKsPropertySize > sizeof(KSPROPERTY))

	cmp         w2,#0x18
	bls         |$LN8@SetAsioBuf|
	mov         x0,x8

; 432  :     {
; 433  :         privateProperty->Set = KSPROPSETID_LowLatencyAudio;

	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q7,[x8]
	mov         w5,w4

; 434  :         privateProperty->Flags = KSPROPERTY_TYPE_SET;
; 435  :         privateProperty->Id = toInt(KsPropertyUACLowLatencyAudio::SetAsioBuffer);

	mov         x8,#0xB
	movk        x8,#2,lsl #0x20

; 436  : 
; 437  :         result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, privateProperty, driverPlayBufferWithKsPropertySize, driverRecBuffer, driverRecBufferSize, &bytesReturned, nullptr);

	mov         x4,x3
	mov         w3,w2
	str         x8,[x1,#0x10]
	str         q7,[x1]
	mov         x2,x1
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	mov         x7,#0
	mov         x6,sp
	bl          |#DeviceIoControl|
|$LN8@SetAsioBuf|
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?SetAsioBuffer@@$$hYAHPEAXPEAEK1K@Z|, SetAsioBuffer

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?ChangeSampleRate@@$$hYAHPEAXK@Z| PROC			; ChangeSampleRate

; 350  : {

|$LN6|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	bl          |#__security_push_cookie|
	sub         sp,sp,#0x30

; 351  :     BOOL       result = FALSE;
; 352  :     KSPROPERTY privateProperty{};
; 353  :     ULONG      bytesReturned = 0;
; 354  : 
; 355  :     privateProperty.Set = KSPROPSETID_LowLatencyAudio;
; 356  :     privateProperty.Flags = KSPROPERTY_TYPE_SET;
; 357  :     privateProperty.Id = toInt(KsPropertyUACLowLatencyAudio::ChangeSampleRate);
; 358  : 
; 359  :     result = DeviceIoControl(deviceHandle, IOCTL_KS_PROPERTY, &privateProperty, sizeof(KSPROPERTY), &sampleRate, sizeof(ULONG), &bytesReturned, nullptr);

	mov         x7,#0
	stp         wzr,w1,[sp]
	mov         x6,sp
	mov         w5,#4
	add         x4,sp,#4
	mov         w3,#0x18
	add         x2,sp,#0x10
	mov         w1,#3
	movk        w1,#0x2F,lsl #0x10
	adrp        x8,KSPROPSETID_LowLatencyAudio
	add         x8,x8,KSPROPSETID_LowLatencyAudio
	ldr         q7,[x8]
	mov         x8,#7
	movk        x8,#2,lsl #0x20
	str         x8,[sp,#0x20]
	str         q7,[sp,#0x10]
	bl          |#DeviceIoControl|
	add         sp,sp,#0x30
	bl          |#__security_pop_cookie|
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |?ChangeSampleRate@@$$hYAHPEAXK@Z|, ChangeSampleRate

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBDevice.cpp

	AREA	|.text$mn|, CODE, ARM64

|?OpenUsbDevice@@$$hYAPEAXQEAU_GUID@@PEBD11@Z| PROC	; OpenUsbDevice

; 156  : {

|$LN10|
	str         x19,[sp,#-0x10]!
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	mov         x19,x3

; 157  :     HANDLE targetHandle = OpenUsbDeviceCore(classGuid, serviceName, referenceString, desiredPath);

	bl          |?OpenUsbDeviceCore@@$$hYAPEAXQEAU_GUID@@PEBD11@Z|

; 158  : 
; 159  :     if ((targetHandle == INVALID_HANDLE_VALUE) && (desiredPath != nullptr))

	cmn         x0,#1
	ccmpeq      x19,#0,#4
	beq         |$LN8@OpenUsbDev|

; 160  :     {
; 161  :         // force open
; 162  :         targetHandle = OpenUsbDeviceCore(classGuid, serviceName, referenceString, nullptr);

	mov         x3,#0
	bl          |?OpenUsbDeviceCore@@$$hYAPEAXQEAU_GUID@@PEBD11@Z|
|$LN8@OpenUsbDev|
	ldp         fp,lr,[sp],#0x10
	ldr         x19,[sp],#0x10
	ret

	ENDP  ; |?OpenUsbDevice@@$$hYAPEAXQEAU_GUID@@PEBD11@Z|, OpenUsbDevice

; Function compile flags: /Ogtp
; File G:\Github\microsoft\low-latency-audio\src\shared\UAC_User.h

	AREA	|.text$mn|, CODE, ARM64

|?toInt@@$$hYAHW4KsPropertyUACLowLatencyAudio@@@Z| PROC	; toInt

; 125  : {

	ret

	ENDP  ; |?toInt@@$$hYAHW4KsPropertyUACLowLatencyAudio@@@Z|, toInt

; Function compile flags: /Odsp

	AREA	|.wowthk$aa|, CODE, ARM64

|#_stricmp$exit_thunk| PROC
|$LN1|
	pacibsp
	stp         fp,lr,[sp,#-0x10]!
	adrp        x9,__os_arm64x_dispatch_icall
	ldr         x9,[x9,__os_arm64x_dispatch_icall]
	adrp        x10,|$iexit_thunk$cdecl$i8$i8i8|
	add         x10,x10,|$iexit_thunk$cdecl$i8$i8i8|
	adrp        x11,_stricmp
	add         x11,x11,_stricmp
	blr         x9
	ldp         fp,lr,[sp],#0x10
	autibsp
	eor         x12,lr,x11
	xpaclri
	eor         x12,x12,lr
	br          x12

	ENDP  ; |#_stricmp$exit_thunk|

	END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.44.35216.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_R0?AUIClassFactory@@@8			; IClassFactory `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	?s_Locked@CClassFactory@@0JA			; CClassFactory::s_Locked
PUBLIC	??_R2CClassFactory@@8				; CClassFactory::`RTTI Base Class Array'
PUBLIC	??_R3IClassFactory@@8				; IClassFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@IClassFactory@@8			; IClassFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CClassFactory@@8			; CClassFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R2IClassFactory@@8				; IClassFactory::`RTTI Base Class Array'
PUBLIC	??_R4CClassFactory@@6B@				; CClassFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCClassFactory@@@8			; CClassFactory `RTTI Type Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3CClassFactory@@8				; CClassFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7CClassFactory@@6B@				; CClassFactory::`vftable'
EXTRN	IID_IClassFactory:BYTE
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
?s_Locked@CClassFactory@@0JA DD 01H DUP (?)		; CClassFactory::s_Locked
_BSS	ENDS
;	COMDAT ??_7CClassFactory@@6B@
CONST	SEGMENT
??_7CClassFactory@@6B@ DQ FLAT:??_R4CClassFactory@@6B@	; CClassFactory::`vftable'
	DQ	FLAT:?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?AddRef@CClassFactory@@UEAAKXZ
	DQ	FLAT:?Release@CClassFactory@@UEAAKXZ
	DQ	FLAT:?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?LockServer@CClassFactory@@UEAAJH@Z
	DQ	FLAT:??_ECClassFactory@@UEAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R3CClassFactory@@8
rdata$r	SEGMENT
??_R3CClassFactory@@8 DD 00H				; CClassFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2CClassFactory@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD imagerel ??_R0?AUIUnknown@@@8 ; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD imagerel ??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AVCClassFactory@@@8
data$rs	SEGMENT
??_R0?AVCClassFactory@@@8 DQ FLAT:??_7type_info@@6B@	; CClassFactory `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCClassFactory@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CClassFactory@@6B@
rdata$r	SEGMENT
??_R4CClassFactory@@6B@ DD 01H				; CClassFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCClassFactory@@@8
	DD	imagerel ??_R3CClassFactory@@8
	DD	imagerel ??_R4CClassFactory@@6B@
rdata$r	ENDS
;	COMDAT ??_R2IClassFactory@@8
rdata$r	SEGMENT
??_R2IClassFactory@@8 DD imagerel ??_R1A@?0A@EA@IClassFactory@@8 ; IClassFactory::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CClassFactory@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CClassFactory@@8 DD imagerel ??_R0?AVCClassFactory@@@8 ; CClassFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CClassFactory@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IClassFactory@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IClassFactory@@8 DD imagerel ??_R0?AUIClassFactory@@@8 ; IClassFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IClassFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3IClassFactory@@8
rdata$r	SEGMENT
??_R3IClassFactory@@8 DD 00H				; IClassFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2IClassFactory@@8
rdata$r	ENDS
;	COMDAT ??_R2CClassFactory@@8
rdata$r	SEGMENT
??_R2CClassFactory@@8 DD imagerel ??_R1A@?0A@EA@CClassFactory@@8 ; CClassFactory::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IClassFactory@@8
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
data$rs	SEGMENT
??_R0?AUIUnknown@@@8 DQ FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIUnknown@@', 00H
data$rs	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIClassFactory@@@8
data$rs	SEGMENT
??_R0?AUIClassFactory@@@8 DQ FLAT:??_7type_info@@6B@	; IClassFactory `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIClassFactory@@', 00H
PUBLIC	DllUnregisterServer
PUBLIC	DllRegisterServer
PUBLIC	DllCanUnloadNow
PUBLIC	?__autoclassinit2@CClassFactory@@QEAAX_K@Z	; CClassFactory::__autoclassinit2
PUBLIC	DllGetClassObject
PUBLIC	DllMain
PUBLIC	?IsLocked@CClassFactory@@SAHXZ			; CClassFactory::IsLocked
PUBLIC	?LockServer@CClassFactory@@UEAAJH@Z		; CClassFactory::LockServer
PUBLIC	?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z ; CClassFactory::CreateInstance
PUBLIC	?Release@CClassFactory@@UEAAKXZ			; CClassFactory::Release
PUBLIC	?AddRef@CClassFactory@@UEAAKXZ			; CClassFactory::AddRef
PUBLIC	?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CClassFactory::QueryInterface
PUBLIC	??1CClassFactory@@UEAA@XZ			; CClassFactory::~CClassFactory
PUBLIC	??0IUnknown@@QEAA@XZ				; IUnknown::IUnknown
PUBLIC	??0IClassFactory@@QEAA@XZ			; IClassFactory::IClassFactory
PUBLIC	??_GCClassFactory@@UEAAPEAXI@Z			; CClassFactory::`scalar deleting destructor'
PUBLIC	??0CClassFactory@@QEAA@PEBVCFactoryTemplate@@@Z	; CClassFactory::CClassFactory
PUBLIC	?CreateInstance@CFactoryTemplate@@QEBAPEAVCUnknown@@PEAUIUnknown@@PEAJ@Z ; CFactoryTemplate::CreateInstance
PUBLIC	?IsClassID@CFactoryTemplate@@QEBAHAEBU_GUID@@@Z	; CFactoryTemplate::IsClassID
PUBLIC	?ObjectsActive@CBaseObject@@SAJXZ		; CBaseObject::ObjectsActive
PUBLIC	!=
EXTRN	??_ECClassFactory@@UEAAPEAXI@Z:PROC		; CClassFactory::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$DllUnregisterServer DD imagerel $LN9
	DD	imagerel $LN9+182
	DD	imagerel $unwind$DllUnregisterServer
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$DllRegisterServer DD imagerel $LN9
	DD	imagerel $LN9+185
	DD	imagerel $unwind$DllRegisterServer
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$DllGetClassObject DD imagerel $LN48
	DD	imagerel $LN48+70
	DD	imagerel $unwind$DllGetClassObject
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$DllGetClassObject DD imagerel $LN48+70
	DD	imagerel $LN48+143
	DD	imagerel $chain$0$DllGetClassObject
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$DllGetClassObject DD imagerel $LN48+143
	DD	imagerel $LN48+201
	DD	imagerel $chain$2$DllGetClassObject
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$DllGetClassObject DD imagerel $LN48+201
	DD	imagerel $LN48+212
	DD	imagerel $chain$3$DllGetClassObject
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z DD imagerel $LN23
	DD	imagerel $LN23+103
	DD	imagerel $unwind$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z DD imagerel $LN23+103
	DD	imagerel $LN23+192
	DD	imagerel $chain$0$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z DD imagerel $LN23+192
	DD	imagerel $LN23+212
	DD	imagerel $chain$1$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Release@CClassFactory@@UEAAKXZ DD imagerel $LN8
	DD	imagerel $LN8+33
	DD	imagerel $unwind$?Release@CClassFactory@@UEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN16
	DD	imagerel $LN16+87
	DD	imagerel $unwind$?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCClassFactory@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_GCClassFactory@@UEAAPEAXI@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCClassFactory@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Release@CClassFactory@@UEAAKXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z DD 021H
	DD	imagerel $LN23
	DD	imagerel $LN23+103
	DD	imagerel $unwind$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z DD 020521H
	DD	063405H
	DD	imagerel $LN23
	DD	imagerel $LN23+103
	DD	imagerel $unwind$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z DD 031619H
	DD	070036207H
	DD	06002H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$DllGetClassObject DD 021H
	DD	imagerel $LN48
	DD	imagerel $LN48+70
	DD	imagerel $unwind$DllGetClassObject
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$DllGetClassObject DD 020021H
	DD	063400H
	DD	imagerel $LN48
	DD	imagerel $LN48+70
	DD	imagerel $unwind$DllGetClassObject
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$DllGetClassObject DD 020521H
	DD	063405H
	DD	imagerel $LN48
	DD	imagerel $LN48+70
	DD	imagerel $unwind$DllGetClassObject
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DllGetClassObject DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DllRegisterServer DD 031b19H
	DD	01a0109H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0c0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DllUnregisterServer DD 031b19H
	DD	0180109H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0b0H
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h
;	COMDAT !=
_TEXT	SEGMENT
guidOne$ = 8
guidOther$ = 16
!=	PROC						; COMDAT

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	rax, QWORD PTR [rcx]
	sub	rax, QWORD PTR [rdx]
	jne	SHORT $LN7@
	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rdx+8]
$LN7@:
	test	rax, rax
	sete	al

; 199  :     return !(guidOne == guidOther);

	xor	al, 1

; 200  : }

	ret	0
!=	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.h
;	COMDAT ?ObjectsActive@CBaseObject@@SAJXZ
_TEXT	SEGMENT
?ObjectsActive@CBaseObject@@SAJXZ PROC			; CBaseObject::ObjectsActive, COMDAT

; 170  :         return m_cObjects;

	mov	eax, DWORD PTR ?m_cObjects@CBaseObject@@0JA ; CBaseObject::m_cObjects

; 171  :     };

	ret	0
?ObjectsActive@CBaseObject@@SAJXZ ENDP			; CBaseObject::ObjectsActive
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.h
;	COMDAT ?IsClassID@CFactoryTemplate@@QEBAHAEBU_GUID@@@Z
_TEXT	SEGMENT
this$ = 8
rclsid$ = 16
?IsClassID@CFactoryTemplate@@QEBAHAEBU_GUID@@@Z PROC	; CFactoryTemplate::IsClassID, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	rax, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR [rax]
	sub	rcx, QWORD PTR [rdx]
	jne	SHORT $LN5@IsClassID
	mov	rcx, QWORD PTR [rax+8]
	sub	rcx, QWORD PTR [rdx+8]
$LN5@IsClassID:
	xor	eax, eax
	test	rcx, rcx
	sete	al
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.h

; 259  :     };

	ret	0
?IsClassID@CFactoryTemplate@@QEBAHAEBU_GUID@@@Z ENDP	; CFactoryTemplate::IsClassID
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.h
;	COMDAT ?CreateInstance@CFactoryTemplate@@QEBAPEAVCUnknown@@PEAUIUnknown@@PEAJ@Z
_TEXT	SEGMENT
this$ = 8
pUnk$ = 16
phr$ = 24
?CreateInstance@CFactoryTemplate@@QEBAPEAVCUnknown@@PEAUIUnknown@@PEAJ@Z PROC ; CFactoryTemplate::CreateInstance, COMDAT

; 262  :         return m_lpfnNew(pUnk, phr);

	mov	rax, QWORD PTR [rcx+16]
	mov	r9, rdx
	mov	rcx, r9
	mov	rdx, r8
	rex_jmp	rax
?CreateInstance@CFactoryTemplate@@QEBAPEAVCUnknown@@PEAUIUnknown@@PEAJ@Z ENDP ; CFactoryTemplate::CreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
;	COMDAT ??0CClassFactory@@QEAA@PEBVCFactoryTemplate@@@Z
_TEXT	SEGMENT
this$ = 8
factoryTemplate$ = 16
??0CClassFactory@@QEAA@PEBVCFactoryTemplate@@@Z PROC	; CClassFactory::CClassFactory, COMDAT

; 80   : {

	lea	rax, OFFSET FLAT:??_7CClassFactory@@6B@

; 79   :     : m_Template(factoryTemplate), m_Ref(0)

	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx], rax

; 81   : }

	mov	rax, rcx
	mov	DWORD PTR [rcx+16], 0
	ret	0
??0CClassFactory@@QEAA@PEBVCFactoryTemplate@@@Z ENDP	; CClassFactory::CClassFactory
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GCClassFactory@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCClassFactory@@UEAAPEAXI@Z PROC			; CClassFactory::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CClassFactory@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN5@scalar
	mov	edx, 24
	call	??3@YAXPEAX_K@Z				; operator delete
$LN5@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GCClassFactory@@UEAAPEAXI@Z ENDP			; CClassFactory::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0IClassFactory@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0IClassFactory@@QEAA@XZ PROC				; IClassFactory::IClassFactory, COMDAT
	mov	rax, rcx
	ret	0
??0IClassFactory@@QEAA@XZ ENDP				; IClassFactory::IClassFactory
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0IUnknown@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0IUnknown@@QEAA@XZ PROC				; IUnknown::IUnknown, COMDAT
	mov	rax, rcx
	ret	0
??0IUnknown@@QEAA@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
;	COMDAT ??1CClassFactory@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1CClassFactory@@UEAA@XZ PROC				; CClassFactory::~CClassFactory, COMDAT

; 84   : {

	lea	rax, OFFSET FLAT:??_7CClassFactory@@6B@
	mov	QWORD PTR [rcx], rax

; 85   : }

	ret	0
??1CClassFactory@@UEAA@XZ ENDP				; CClassFactory::~CClassFactory
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
;	COMDAT ?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
riid$ = 56
ppv$ = 64
?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CClassFactory::QueryInterface, COMDAT

; 91   : {

$LN16:
	sub	rsp, 40					; 00000028H

; 92   :     // CheckPointer(ppv, E_POINTER);
; 93   :     // ValidateReadWritePtr(ppv, sizeof(PVOID));
; 94   :     *ppv = nullptr;

	mov	QWORD PTR [r8], 0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	rax, QWORD PTR [rdx]
	cmp	rax, QWORD PTR IID_IUnknown
	jne	SHORT $LN14@QueryInter
	mov	rax, QWORD PTR [rdx+8]
	cmp	rax, QWORD PTR IID_IUnknown+8
	je	SHORT $LN3@QueryInter
$LN14@QueryInter:
	mov	rax, QWORD PTR [rdx]
	cmp	rax, QWORD PTR IID_IClassFactory
	jne	SHORT $LN13@QueryInter
	mov	rax, QWORD PTR [rdx+8]
	cmp	rax, QWORD PTR IID_IClassFactory+8
	jne	SHORT $LN13@QueryInter
$LN3@QueryInter:
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp

; 98   :         *ppv = (LPVOID)this;

	mov	QWORD PTR [r8], rcx

; 99   :         ((LPUNKNOWN)*ppv)->AddRef();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]

; 100  :         return NOERROR;

	xor	eax, eax

; 104  : }

	add	rsp, 40					; 00000028H
	ret	0
$LN13@QueryInter:

; 101  :     }
; 102  : 
; 103  :     return ResultFromScode(E_NOINTERFACE);

	mov	eax, -2147467262			; ffffffff80004002H

; 104  : }

	add	rsp, 40					; 00000028H
	ret	0
?QueryInterface@CClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CClassFactory::QueryInterface
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
;	COMDAT ?AddRef@CClassFactory@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?AddRef@CClassFactory@@UEAAKXZ PROC			; CClassFactory::AddRef, COMDAT

; 109  :     return ++m_Ref;

	inc	DWORD PTR [rcx+16]
	mov	eax, DWORD PTR [rcx+16]

; 110  : }

	ret	0
?AddRef@CClassFactory@@UEAAKXZ ENDP			; CClassFactory::AddRef
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
;	COMDAT ?Release@CClassFactory@@UEAAKXZ
_TEXT	SEGMENT
this$ = 48
?Release@CClassFactory@@UEAAKXZ PROC			; CClassFactory::Release, COMDAT

; 113  : {

$LN8:
	sub	rsp, 40					; 00000028H

; 114  :     LONG result = 0;
; 115  : 
; 116  :     if (--m_Ref == 0)

	mov	eax, DWORD PTR [rcx+16]
	sub	eax, 1
	mov	DWORD PTR [rcx+16], eax
	jne	SHORT $LN2@Release

; 117  :     {
; 118  :         delete this;

	mov	rax, QWORD PTR [rcx]
	mov	edx, 1
	call	QWORD PTR [rax+40]

; 119  :         result = 0;
; 120  :     }
; 121  :     else
; 122  :     {
; 123  :         result = m_Ref;
; 124  :     }
; 125  : 
; 126  :     return result;

	xor	eax, eax
$LN2@Release:

; 127  : }

	add	rsp, 40					; 00000028H
	ret	0
?Release@CClassFactory@@UEAAKXZ ENDP			; CClassFactory::Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
;	COMDAT ?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
result$ = 32
__$ArrayPad$ = 40
this$ = 80
unknown$ = 88
riid$ = 96
object$ = 104
?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z PROC ; CClassFactory::CreateInstance, COMDAT

; 134  : {

$LN23:
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rsi, r9

; 135  :     HRESULT result = NOERROR;

	mov	DWORD PTR result$[rsp], 0
	mov	rdi, r8
	mov	r9, rdx

; 136  : 
; 137  :     CheckPointer(object, E_POINTER);

	test	rsi, rsi
	jne	SHORT $LN2@CreateInst
	mov	eax, -2147467261			; ffffffff80004003H
	jmp	$LN1@CreateInst
$LN2@CreateInst:

; 138  :     ValidateReadWritePtr(object, sizeof(void *));
; 139  : 
; 140  :     if (unknown != nullptr)

	test	r9, r9
	je	SHORT $LN4@CreateInst
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	rax, QWORD PTR [r8]
	cmp	rax, QWORD PTR IID_IUnknown
	jne	SHORT $LN15@CreateInst
	mov	rax, QWORD PTR [r8+8]
	cmp	rax, QWORD PTR IID_IUnknown+8
	je	SHORT $LN4@CreateInst
$LN15@CreateInst:
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp

; 144  :             return ResultFromScode(E_NOINTERFACE);

	mov	eax, -2147467262			; ffffffff80004002H
	jmp	SHORT $LN1@CreateInst
$LN4@CreateInst:
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.h

; 262  :         return m_lpfnNew(pUnk, phr);

	mov	rax, QWORD PTR [rcx+8]
	lea	rdx, QWORD PTR result$[rsp]
	mov	rcx, r9
	mov	QWORD PTR [rsp+48], rbx
	mov	r8, QWORD PTR [rax+16]
	call	r8
	mov	rbx, rax
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp

; 150  :     if (newObject == nullptr)

	test	rax, rax
	jne	SHORT $LN5@CreateInst

; 151  :     {
; 152  :         return E_OUTOFMEMORY;

	mov	eax, -2147024882			; ffffffff8007000eH
	jmp	SHORT $LN21@CreateInst
$LN5@CreateInst:

; 153  :     }
; 154  : 
; 155  :     if (FAILED(result))

	cmp	DWORD PTR result$[rsp], 0
	mov	rcx, rbx
	mov	rax, QWORD PTR [rax]
	jge	SHORT $LN6@CreateInst

; 156  :     {
; 157  :         delete newObject;

	mov	edx, 1
	call	QWORD PTR [rax+24]

; 158  :     }

	jmp	SHORT $LN7@CreateInst
$LN6@CreateInst:

; 159  :     else
; 160  :     {
; 161  :         newObject->NonDelegatingAddRef();

	call	QWORD PTR [rax+8]

; 162  :         result = newObject->NonDelegatingQueryInterface(riid, object);

	mov	rax, QWORD PTR [rbx]
	mov	r8, rsi
	mov	rdx, rdi
	mov	rcx, rbx
	call	QWORD PTR [rax]
	mov	DWORD PTR result$[rsp], eax

; 163  :         newObject->NonDelegatingRelease();

	mov	rcx, rbx
	mov	rax, QWORD PTR [rbx]
	call	QWORD PTR [rax+16]
$LN7@CreateInst:

; 164  :         // if (SUCCEEDED(result)) {
; 165  :         // 	ASSERT(*object);
; 166  :         // }
; 167  :     }
; 168  :     return result;

	mov	eax, DWORD PTR result$[rsp]
$LN21@CreateInst:
	mov	rbx, QWORD PTR [rsp+48]
$LN1@CreateInst:

; 169  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
?CreateInstance@CClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z ENDP ; CClassFactory::CreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
;	COMDAT ?LockServer@CClassFactory@@UEAAJH@Z
_TEXT	SEGMENT
this$ = 8
fLock$ = 16
?LockServer@CClassFactory@@UEAAJH@Z PROC		; CClassFactory::LockServer, COMDAT

; 175  :     if (fLock)

	test	edx, edx
	je	SHORT $LN2@LockServer

; 176  :     {
; 177  :         InterlockedIncrement(&s_Locked);

	lock inc DWORD PTR ?s_Locked@CClassFactory@@0JA	; CClassFactory::s_Locked

; 182  :     }
; 183  :     return NOERROR;
; 184  : }

	xor	eax, eax
	ret	0
$LN2@LockServer:

; 178  :     }
; 179  :     else
; 180  :     {
; 181  :         InterlockedDecrement(&s_Locked);

	lock dec DWORD PTR ?s_Locked@CClassFactory@@0JA	; CClassFactory::s_Locked

; 182  :     }
; 183  :     return NOERROR;
; 184  : }

	xor	eax, eax
	ret	0
?LockServer@CClassFactory@@UEAAJH@Z ENDP		; CClassFactory::LockServer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
;	COMDAT ?IsLocked@CClassFactory@@SAHXZ
_TEXT	SEGMENT
?IsLocked@CClassFactory@@SAHXZ PROC			; CClassFactory::IsLocked, COMDAT

; 188  :     return (s_Locked > 0);

	xor	eax, eax
	cmp	DWORD PTR ?s_Locked@CClassFactory@@0JA, eax ; CClassFactory::s_Locked
	setg	al

; 189  : }

	ret	0
?IsLocked@CClassFactory@@SAHXZ ENDP			; CClassFactory::IsLocked
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
;	COMDAT DllMain
_TEXT	SEGMENT
__formal$ = 8
ul_reason_for_call$ = 16
__formal$ = 24
DllMain	PROC						; COMDAT

; 193  :     switch (ul_reason_for_call)
; 194  :     {
; 195  :     case DLL_PROCESS_ATTACH:
; 196  :     case DLL_THREAD_ATTACH:
; 197  :     case DLL_THREAD_DETACH:
; 198  :     case DLL_PROCESS_DETACH:
; 199  :         break;
; 200  :     }
; 201  :     return TRUE;

	mov	eax, 1

; 202  : }

	ret	0
DllMain	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
;	COMDAT DllGetClassObject
_TEXT	SEGMENT
rclsid$ = 48
riid$ = 56
ppv$ = 64
DllGetClassObject PROC					; COMDAT

; 210  : {

$LN48:
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	rax, QWORD PTR [rdx]
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp

; 210  : {

	mov	rdi, r8
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	cmp	rax, QWORD PTR IID_IUnknown
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp

; 210  : {

	mov	r9, rcx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	jne	SHORT $LN40@DllGetClas
	mov	rax, QWORD PTR [rdx+8]
	cmp	rax, QWORD PTR IID_IUnknown+8
	je	SHORT $LN5@DllGetClas
$LN40@DllGetClas:
	mov	rax, QWORD PTR [rdx]
	cmp	rax, QWORD PTR IID_IClassFactory
	jne	$LN39@DllGetClas
	mov	rax, QWORD PTR [rdx+8]
	cmp	rax, QWORD PTR IID_IClassFactory+8
	jne	$LN39@DllGetClas
$LN5@DllGetClas:
	mov	QWORD PTR [rsp+48], rbx
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp

; 216  :     for (int index = 0; index < g_NumOfTemplates; index++)

	lea	rdx, OFFSET FLAT:?g_Templates@@3PAVCFactoryTemplate@@A+32
	lea	rbx, OFFSET FLAT:?g_Templates@@3PAVCFactoryTemplate@@A ; g_Templates
	npad	7
$LL4@DllGetClas:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	rcx, QWORD PTR [rbx+8]
	mov	rax, QWORD PTR [rcx]
	cmp	rax, QWORD PTR [r9]
	jne	SHORT $LN38@DllGetClas
	mov	rax, QWORD PTR [rcx+8]
	cmp	rax, QWORD PTR [r9+8]
	je	SHORT $LN33@DllGetClas
$LN38@DllGetClas:
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp

; 216  :     for (int index = 0; index < g_NumOfTemplates; index++)

	add	rbx, 32					; 00000020H
	cmp	rbx, rdx
	jl	SHORT $LL4@DllGetClas

; 228  :         }
; 229  :     }
; 230  :     return CLASS_E_CLASSNOTAVAILABLE;

	mov	rbx, QWORD PTR [rsp+48]
	mov	eax, -2147221231			; ffffffff80040111H

; 231  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN33@DllGetClas:

; 217  :     {
; 218  :         const CFactoryTemplate * factoryTemplate = &g_Templates[index];
; 219  :         if (factoryTemplate->IsClassID(rclsid))
; 220  :         {
; 221  :             *ppv = (LPVOID)(LPUNKNOWN) new CClassFactory(factoryTemplate);

	mov	ecx, 24
	call	??2@YAPEAX_K@Z				; operator new
	xor	edx, edx

; 80   : {

	lea	rcx, OFFSET FLAT:??_7CClassFactory@@6B@

; 79   :     : m_Template(factoryTemplate), m_Ref(0)

	mov	QWORD PTR [rax+16], rdx
	mov	QWORD PTR [rax], rcx
	mov	QWORD PTR [rax+8], rbx

; 217  :     {
; 218  :         const CFactoryTemplate * factoryTemplate = &g_Templates[index];
; 219  :         if (factoryTemplate->IsClassID(rclsid))
; 220  :         {
; 221  :             *ppv = (LPVOID)(LPUNKNOWN) new CClassFactory(factoryTemplate);

	mov	QWORD PTR [rdi], rax

; 222  :             if (*ppv == nullptr)
; 223  :             {
; 224  :                 return E_OUTOFMEMORY;
; 225  :             }
; 226  :             ((LPUNKNOWN)*ppv)->AddRef();

	mov	rcx, QWORD PTR [rax]
	mov	rdx, QWORD PTR [rcx+8]
	mov	rcx, rax
	call	rdx
	mov	rbx, QWORD PTR [rsp+48]

; 227  :             return NOERROR;

	xor	eax, eax

; 231  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN39@DllGetClas:

; 211  :     if ((riid != IID_IUnknown) && (riid != IID_IClassFactory))
; 212  :     {
; 213  :         return E_NOINTERFACE;

	mov	eax, -2147467262			; ffffffff80004002H

; 231  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
DllGetClassObject ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@CClassFactory@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@CClassFactory@@QEAAX_K@Z PROC		; CClassFactory::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@CClassFactory@@QEAAX_K@Z ENDP		; CClassFactory::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
;	COMDAT DllCanUnloadNow
_TEXT	SEGMENT
DllCanUnloadNow PROC					; COMDAT

; 236  :     if (CClassFactory::IsLocked() || CBaseObject::ObjectsActive())

	cmp	DWORD PTR ?s_Locked@CClassFactory@@0JA, 0 ; CClassFactory::s_Locked
	jg	SHORT $LN4@DllCanUnlo
	xor	eax, eax
	cmp	DWORD PTR ?m_cObjects@CBaseObject@@0JA, eax ; CBaseObject::m_cObjects
	setne	al

; 239  :     }
; 240  :     else
; 241  :     {
; 242  :         return S_OK;
; 243  :     }
; 244  : }

	ret	0
$LN4@DllCanUnlo:

; 237  :     {
; 238  :         return S_FALSE;

	mov	eax, 1

; 239  :     }
; 240  :     else
; 241  :     {
; 242  :         return S_OK;
; 243  :     }
; 244  : }

	ret	0
DllCanUnloadNow ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBAsio.cpp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
;	COMDAT DllRegisterServer
_TEXT	SEGMENT
$T1 = 48
message$3 = 64
__$ArrayPad$ = 192
DllRegisterServer PROC					; COMDAT

; 247  : {

$LN9:
	push	rbx
	sub	rsp, 208				; 000000d0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBAsio.cpp

; 127  :     HRESULT result = RegisterAsioDriver(IID_ASIO_DRIVER, ASIODRV_NAME, DRIVER_NAME, DRIVER_NAME, TEXT("Apartment"));

	movups	xmm0, XMMWORD PTR ?IID_ASIO_DRIVER@@3U_GUID@@A
	lea	rcx, QWORD PTR $T1[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	call	?RegisterAsioDriver@@YAJU_GUID@@PEBD111@Z ; RegisterAsioDriver
	mov	ebx, eax

; 128  : 
; 129  :     if (!SUCCEEDED(result))

	test	eax, eax
	jns	SHORT $LN4@DllRegiste
	xorps	xmm0, xmm0

; 130  :     {
; 131  :         TCHAR message[ERROR_MESSAGE_LENGTH] = {0};
; 132  :         _stprintf_s(message, ERROR_MESSAGE_LENGTH, TEXT("Register Server failed ! (%d)"), result);

	lea	r8, OFFSET FLAT:??_C@_0BO@KGBEPONM@Register?5Server?5failed?5?$CB?5?$CI?$CFd?$CJ@
	mov	r9d, eax
	lea	rcx, QWORD PTR message$3[rsp]
	mov	edx, 128				; 00000080H
	movups	XMMWORD PTR message$3[rsp], xmm0
	movups	XMMWORD PTR message$3[rsp+16], xmm0
	movups	XMMWORD PTR message$3[rsp+32], xmm0
	movups	XMMWORD PTR message$3[rsp+48], xmm0
	movups	XMMWORD PTR message$3[rsp+64], xmm0
	movups	XMMWORD PTR message$3[rsp+80], xmm0
	movups	XMMWORD PTR message$3[rsp+96], xmm0
	movups	XMMWORD PTR message$3[rsp+112], xmm0
	call	sprintf_s

; 133  :         MessageBox(nullptr, message, DRIVER_NAME, MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_08JKCDEOBL@USB?5ASIO@
	lea	rdx, QWORD PTR message$3[rsp]
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp

; 248  :     return RegisterAsioDriver();

	mov	eax, ebx
$LN4@DllRegiste:

; 249  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 208				; 000000d0H
	pop	rbx
	ret	0
DllRegisterServer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBAsio.cpp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp
;	COMDAT DllUnregisterServer
_TEXT	SEGMENT
$T1 = 32
message$3 = 48
__$ArrayPad$ = 176
DllUnregisterServer PROC				; COMDAT

; 252  : {

$LN9:
	push	rbx
	sub	rsp, 192				; 000000c0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\USBAsio.cpp

; 141  :     HRESULT result = UnregisterAsioDriver(IID_ASIO_DRIVER, ASIODRV_NAME, DRIVER_NAME);

	movups	xmm0, XMMWORD PTR ?IID_ASIO_DRIVER@@3U_GUID@@A
	lea	rcx, QWORD PTR $T1[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	call	?UnregisterAsioDriver@@YAJU_GUID@@PEBD1@Z ; UnregisterAsioDriver
	mov	ebx, eax

; 142  : 
; 143  :     if (!SUCCEEDED(result))

	test	eax, eax
	jns	SHORT $LN4@DllUnregis
	xorps	xmm0, xmm0

; 144  :     {
; 145  :         TCHAR message[ERROR_MESSAGE_LENGTH] = {0};
; 146  :         _stprintf_s(message, ERROR_MESSAGE_LENGTH, TEXT("Unregister Server failed ! (%d)"), result);

	lea	r8, OFFSET FLAT:??_C@_0CA@OPFFDHMA@Unregister?5Server?5failed?5?$CB?5?$CI?$CFd?$CJ@
	mov	r9d, eax
	lea	rcx, QWORD PTR message$3[rsp]
	mov	edx, 128				; 00000080H
	movups	XMMWORD PTR message$3[rsp], xmm0
	movups	XMMWORD PTR message$3[rsp+16], xmm0
	movups	XMMWORD PTR message$3[rsp+32], xmm0
	movups	XMMWORD PTR message$3[rsp+48], xmm0
	movups	XMMWORD PTR message$3[rsp+64], xmm0
	movups	XMMWORD PTR message$3[rsp+80], xmm0
	movups	XMMWORD PTR message$3[rsp+96], xmm0
	movups	XMMWORD PTR message$3[rsp+112], xmm0
	call	sprintf_s

; 147  :         MessageBox(nullptr, message, DRIVER_NAME, MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_08JKCDEOBL@USB?5ASIO@
	lea	rdx, QWORD PTR message$3[rsp]
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\dllmain.cpp

; 253  :     return UnregisterAsioDriver();

	mov	eax, ebx
$LN4@DllUnregis:

; 254  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 192				; 000000c0H
	pop	rbx
	ret	0
DllUnregisterServer ENDP
_TEXT	ENDS
END

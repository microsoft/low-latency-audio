; Listing generated by Microsoft (R) Optimizing Compiler Version 19.44.35216.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_R3INonDelegatingUnknown@@8			; INonDelegatingUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7CUnknown@@6B@				; CUnknown::`vftable'
PUBLIC	??_R0?AVCBaseObject@@@8				; CBaseObject `RTTI Type Descriptor'
PUBLIC	?m_cObjects@CBaseObject@@0JA			; CBaseObject::m_cObjects
PUBLIC	??_R0?AUINonDelegatingUnknown@@@8		; INonDelegatingUnknown `RTTI Type Descriptor'
PUBLIC	??_R2CBaseObject@@8				; CBaseObject::`RTTI Base Class Array'
PUBLIC	??_R2INonDelegatingUnknown@@8			; INonDelegatingUnknown::`RTTI Base Class Array'
PUBLIC	??_R0?AVCUnknown@@@8				; CUnknown `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@INonDelegatingUnknown@@8		; INonDelegatingUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R2CUnknown@@8				; CUnknown::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CUnknown@@8			; CUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CUnknown@@6B@				; CUnknown::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3CBaseObject@@8				; CBaseObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3CUnknown@@8				; CUnknown::`RTTI Class Hierarchy Descriptor'
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__std_terminate:PROC
EXTRN	IID_IUnknown:BYTE
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__security_check_cookie:PROC
EXTRN	__CxxFrameHandler4:PROC
?m_cObjects@CBaseObject@@0JA DD 01H DUP (?)		; CBaseObject::m_cObjects
_BSS	ENDS
;	COMDAT ??_R3CUnknown@@8
rdata$r	SEGMENT
??_R3CUnknown@@8 DD 00H					; CUnknown::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	imagerel ??_R2CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CBaseObject@@8
rdata$r	SEGMENT
??_R3CBaseObject@@8 DD 00H				; CBaseObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseObject@@8 DD imagerel ??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R4CUnknown@@6B@
rdata$r	SEGMENT
??_R4CUnknown@@6B@ DD 01H				; CUnknown::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCUnknown@@@8
	DD	imagerel ??_R3CUnknown@@8
	DD	imagerel ??_R4CUnknown@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CUnknown@@8 DD imagerel ??_R0?AVCUnknown@@@8 ; CUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R17?0A@EA@CBaseObject@@8 DD imagerel ??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CUnknown@@8
rdata$r	SEGMENT
??_R2CUnknown@@8 DD imagerel ??_R1A@?0A@EA@CUnknown@@8	; CUnknown::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	imagerel ??_R17?0A@EA@CBaseObject@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@INonDelegatingUnknown@@8 DD imagerel ??_R0?AUINonDelegatingUnknown@@@8 ; INonDelegatingUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3INonDelegatingUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCUnknown@@@8
data$rs	SEGMENT
??_R0?AVCUnknown@@@8 DQ FLAT:??_7type_info@@6B@		; CUnknown `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCUnknown@@', 00H
data$rs	ENDS
;	COMDAT ??_R2INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R2INonDelegatingUnknown@@8 DD imagerel ??_R1A@?0A@EA@INonDelegatingUnknown@@8 ; INonDelegatingUnknown::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2CBaseObject@@8
rdata$r	SEGMENT
??_R2CBaseObject@@8 DD imagerel ??_R1A@?0A@EA@CBaseObject@@8 ; CBaseObject::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AUINonDelegatingUnknown@@@8
data$rs	SEGMENT
??_R0?AUINonDelegatingUnknown@@@8 DQ FLAT:??_7type_info@@6B@ ; INonDelegatingUnknown `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUINonDelegatingUnknown@@', 00H
data$rs	ENDS
;	COMDAT ??_R0?AVCBaseObject@@@8
data$rs	SEGMENT
??_R0?AVCBaseObject@@@8 DQ FLAT:??_7type_info@@6B@	; CBaseObject `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCBaseObject@@', 00H
data$rs	ENDS
;	COMDAT ??_7CUnknown@@6B@
CONST	SEGMENT
??_7CUnknown@@6B@ DQ FLAT:??_R4CUnknown@@6B@		; CUnknown::`vftable'
	DQ	FLAT:?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?NonDelegatingAddRef@CUnknown@@UEAAKXZ
	DQ	FLAT:?NonDelegatingRelease@CUnknown@@UEAAKXZ
	DQ	FLAT:??_ECUnknown@@UEAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R3INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R3INonDelegatingUnknown@@8 DD 00H			; INonDelegatingUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2INonDelegatingUnknown@@8
rdata$r	ENDS
PUBLIC	?GetInterface@CUnknown@@QEAAJPEAUIUnknown@@PEAPEAX@Z ; CUnknown::GetInterface
PUBLIC	?NonDelegatingRelease@CUnknown@@UEAAKXZ		; CUnknown::NonDelegatingRelease
PUBLIC	?NonDelegatingAddRef@CUnknown@@UEAAKXZ		; CUnknown::NonDelegatingAddRef
PUBLIC	?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CUnknown::NonDelegatingQueryInterface
PUBLIC	??0INonDelegatingUnknown@@QEAA@XZ		; INonDelegatingUnknown::INonDelegatingUnknown
PUBLIC	??0CUnknown@@QEAA@PEADPEAUIUnknown@@PEAJ@Z	; CUnknown::CUnknown
PUBLIC	??1CBaseObject@@QEAA@XZ				; CBaseObject::~CBaseObject
PUBLIC	??0CBaseObject@@QEAA@PEAD@Z			; CBaseObject::CBaseObject
PUBLIC	??_GCUnknown@@UEAAPEAXI@Z			; CUnknown::`scalar deleting destructor'
PUBLIC	??1CUnknown@@UEAA@XZ				; CUnknown::~CUnknown
PUBLIC	==
PUBLIC	IsEqualGUID
PUBLIC	__real@3df0000000000000
PUBLIC	__real@412e848000000000
PUBLIC	__real@41f0000000000000
EXTRN	??_ECUnknown@@UEAAPEAXI@Z:PROC			; CUnknown::`vector deleting destructor'
EXTRN	_CxxThrowException:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__chkstk:PROC
EXTRN	memcpy:PROC
EXTRN	memset:PROC
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetInterface@CUnknown@@QEAAJPEAUIUnknown@@PEAPEAX@Z DD imagerel $LN5
	DD	imagerel $LN5+38
	DD	imagerel $unwind$?GetInterface@CUnknown@@QEAAJPEAUIUnknown@@PEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NonDelegatingRelease@CUnknown@@UEAAKXZ DD imagerel $LN12
	DD	imagerel $LN12+63
	DD	imagerel $unwind$?NonDelegatingRelease@CUnknown@@UEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN14
	DD	imagerel $LN14+77
	DD	imagerel $unwind$?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCUnknown@@UEAAPEAXI@Z DD imagerel $LN17
	DD	imagerel $LN17+50
	DD	imagerel $unwind$??_GCUnknown@@UEAAPEAXI@Z
;	COMDAT __real@41f0000000000000
CONST	SEGMENT
__real@41f0000000000000 DQ 041f0000000000000r	; 4.29497e+09
CONST	ENDS
;	COMDAT __real@412e848000000000
CONST	SEGMENT
__real@412e848000000000 DQ 0412e848000000000r	; 1e+06
CONST	ENDS
;	COMDAT __real@3df0000000000000
CONST	SEGMENT
__real@3df0000000000000 DQ 03df0000000000000r	; 2.32831e-10
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCUnknown@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NonDelegatingRelease@CUnknown@@UEAAKXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetInterface@CUnknown@@QEAAJPEAUIUnknown@@PEAPEAX@Z DD 010401H
	DD	04204H
xdata	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h
;	COMDAT IsEqualGUID
_TEXT	SEGMENT
rguid1$ = 8
rguid2$ = 16
IsEqualGUID PROC					; COMDAT

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	r8, QWORD PTR [rcx]
	sub	r8, QWORD PTR [rdx]
	jne	SHORT $LN3@IsEqualGUI
	mov	r8, QWORD PTR [rcx+8]
	sub	r8, QWORD PTR [rdx+8]
$LN3@IsEqualGUI:
	xor	eax, eax
	test	r8, r8
	sete	al

; 162  : }

	ret	0
IsEqualGUID ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h
;	COMDAT ==
_TEXT	SEGMENT
guidOne$ = 8
guidOther$ = 16
==	PROC						; COMDAT

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	rax, QWORD PTR [rcx]
	sub	rax, QWORD PTR [rdx]
	jne	SHORT $LN5@
	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rdx+8]
$LN5@:
	test	rax, rax

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

	sete	al

; 195  : }

	ret	0
==	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.h
;	COMDAT ??1CUnknown@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1CUnknown@@UEAA@XZ PROC				; CUnknown::~CUnknown, COMDAT

; 192  :     virtual ~CUnknown() {};

	lea	rax, OFFSET FLAT:??_7CUnknown@@6B@
	mov	QWORD PTR [rcx], rax
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp

; 43   :     InterlockedDecrement(&m_cObjects);

	lock dec DWORD PTR ?m_cObjects@CBaseObject@@0JA	; CBaseObject::m_cObjects
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.h

; 192  :     virtual ~CUnknown() {};

	ret	0
??1CUnknown@@UEAA@XZ ENDP				; CUnknown::~CUnknown
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp
;	COMDAT ??_GCUnknown@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCUnknown@@UEAAPEAXI@Z PROC				; CUnknown::`scalar deleting destructor', COMDAT
$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.h

; 192  :     virtual ~CUnknown() {};

	lea	rax, OFFSET FLAT:??_7CUnknown@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp

; 43   :     InterlockedDecrement(&m_cObjects);

	lock dec DWORD PTR ?m_cObjects@CBaseObject@@0JA	; CBaseObject::m_cObjects
	test	dl, 1
	je	SHORT $LN13@scalar
	mov	edx, 24
	call	??3@YAXPEAX_K@Z				; operator delete
$LN13@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GCUnknown@@UEAAPEAXI@Z ENDP				; CUnknown::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp
;	COMDAT ??0CBaseObject@@QEAA@PEAD@Z
_TEXT	SEGMENT
this$ = 8
pName$dead$ = 16
??0CBaseObject@@QEAA@PEAD@Z PROC			; CBaseObject::CBaseObject, COMDAT

; 29   :     /* Increment the number of active objects */
; 30   :     InterlockedIncrement(&m_cObjects);

	lock inc DWORD PTR ?m_cObjects@CBaseObject@@0JA	; CBaseObject::m_cObjects

; 31   : 
; 32   : #ifdef DEBUG
; 33   :     m_dwCookie = DbgRegisterObjectCreation(pName);
; 34   : #endif
; 35   : }

	mov	rax, rcx
	ret	0
??0CBaseObject@@QEAA@PEAD@Z ENDP			; CBaseObject::CBaseObject
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp
;	COMDAT ??1CBaseObject@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1CBaseObject@@QEAA@XZ PROC				; CBaseObject::~CBaseObject, COMDAT

; 42   :     /* Decrement the number of objects active */
; 43   :     InterlockedDecrement(&m_cObjects);

	lock dec DWORD PTR ?m_cObjects@CBaseObject@@0JA	; CBaseObject::m_cObjects

; 44   : 
; 45   : #ifdef DEBUG
; 46   :     DbgRegisterObjectDestruction(m_dwCookie);
; 47   : #endif
; 48   : }

	ret	0
??1CBaseObject@@QEAA@XZ ENDP				; CBaseObject::~CBaseObject
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp
;	COMDAT ??0CUnknown@@QEAA@PEADPEAUIUnknown@@PEAJ@Z
_TEXT	SEGMENT
this$ = 8
pName$dead$ = 16
pUnk$ = 24
phr$dead$ = 32
??0CUnknown@@QEAA@PEADPEAUIUnknown@@PEAJ@Z PROC		; CUnknown::CUnknown, COMDAT

; 30   :     InterlockedIncrement(&m_cObjects);

	lock inc DWORD PTR ?m_cObjects@CBaseObject@@0JA	; CBaseObject::m_cObjects

; 31   : 
; 32   : #ifdef DEBUG
; 33   :     m_dwCookie = DbgRegisterObjectCreation(pName);
; 34   : #endif
; 35   : }
; 36   : 
; 37   : 
; 38   : /* Destructor */
; 39   : 
; 40   : CBaseObject::~CBaseObject()
; 41   : {
; 42   :     /* Decrement the number of objects active */
; 43   :     InterlockedDecrement(&m_cObjects);
; 44   : 
; 45   : #ifdef DEBUG
; 46   :     DbgRegisterObjectDestruction(m_dwCookie);
; 47   : #endif
; 48   : }
; 49   : 
; 50   : 
; 51   : /* Constructor */
; 52   : 
; 53   : // We know we use "this" in the initialization list, we also know we don't modify *phr.
; 54   : #pragma warning( disable : 4355 4100 ) 
; 55   : CUnknown::CUnknown(TCHAR *pName, LPUNKNOWN pUnk, HRESULT *phr) 
; 56   : : CBaseObject(pName)
; 57   : /* Start the object with a reference count of zero - when the      */
; 58   : /* object is queried for it's first interface this may be          */
; 59   : /* incremented depending on whether or not this object is          */
; 60   : /* currently being aggregated upon                                 */
; 61   : , m_cRef(0)
; 62   : /* Set our pointer to our IUnknown interface.                      */
; 63   : /* If we have an outer, use its, otherwise use ours.               */
; 64   : /* This pointer effectivly points to the owner of                  */
; 65   : /* this object and can be accessed by the GetOwner() method.       */
; 66   : , m_pUnknown( pUnk != 0 ? pUnk : reinterpret_cast<LPUNKNOWN>( static_cast<PNDUNKNOWN>(this) ) )

	lea	rax, OFFSET FLAT:??_7CUnknown@@6B@
	test	r8, r8
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	cmovne	rax, r8
	mov	QWORD PTR [rcx+8], rax

; 72   :     // Everything we need to do has been done in the initializer list
; 73   : }

	mov	rax, rcx
	mov	DWORD PTR [rcx+16], 0
	ret	0
??0CUnknown@@QEAA@PEADPEAUIUnknown@@PEAJ@Z ENDP		; CUnknown::CUnknown
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0INonDelegatingUnknown@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0INonDelegatingUnknown@@QEAA@XZ PROC			; INonDelegatingUnknown::INonDelegatingUnknown, COMDAT
	mov	rax, rcx
	ret	0
??0INonDelegatingUnknown@@QEAA@XZ ENDP			; INonDelegatingUnknown::INonDelegatingUnknown
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp
;	COMDAT ?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
riid$ = 56
ppv$ = 64
?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CUnknown::NonDelegatingQueryInterface, COMDAT

; 79   : {

$LN14:
	sub	rsp, 40					; 00000028H

; 80   :     CheckPointer(ppv,E_POINTER);

	test	r8, r8
	jne	SHORT $LN2@NonDelegat
	mov	eax, -2147467261			; ffffffff80004003H

; 91   :     }
; 92   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN2@NonDelegat:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	rax, QWORD PTR [rdx]
	cmp	rax, QWORD PTR IID_IUnknown
	jne	SHORT $LN3@NonDelegat
	mov	rax, QWORD PTR [rdx+8]
	cmp	rax, QWORD PTR IID_IUnknown+8
	jne	SHORT $LN3@NonDelegat
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp

; 161  :     *ppv = pUnk;

	mov	QWORD PTR [r8], rcx

; 162  :     pUnk->AddRef();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]

; 81   :     ValidateReadWritePtr(ppv,sizeof(PVOID));
; 82   : 
; 83   :     /* We know only about IUnknown */
; 84   : 
; 85   :     if (riid == IID_IUnknown) {
; 86   :         GetInterface((LPUNKNOWN) (PNDUNKNOWN) this, ppv);
; 87   :         return NOERROR;

	xor	eax, eax

; 91   :     }
; 92   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN3@NonDelegat:

; 88   :     } else {
; 89   :         *ppv = NULL;

	mov	QWORD PTR [r8], 0

; 90   :         return E_NOINTERFACE;

	mov	eax, -2147467262			; ffffffff80004002H

; 91   :     }
; 92   : }

	add	rsp, 40					; 00000028H
	ret	0
?NonDelegatingQueryInterface@CUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CUnknown::NonDelegatingQueryInterface
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp
;	COMDAT ?NonDelegatingAddRef@CUnknown@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?NonDelegatingAddRef@CUnknown@@UEAAKXZ PROC		; CUnknown::NonDelegatingAddRef, COMDAT

; 111  :     LONG lRef = InterlockedIncrement( &m_cRef );

	lock inc DWORD PTR [rcx+16]

; 112  :     ASSERT(lRef > 0);
; 113  :     DbgLog((LOG_MEMORY,3,TEXT("    Obj %d ref++ = %d"),
; 114  :            m_dwCookie, m_cRef));
; 115  :     return max(ULONG(m_cRef), 1ul);

	mov	edx, DWORD PTR [rcx+16]

; 104  :     return a > b ? a : b;

	mov	eax, 1
	cmp	edx, eax
	cmova	eax, edx

; 116  : }

	ret	0
?NonDelegatingAddRef@CUnknown@@UEAAKXZ ENDP		; CUnknown::NonDelegatingAddRef
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp
;	COMDAT ?NonDelegatingRelease@CUnknown@@UEAAKXZ
_TEXT	SEGMENT
this$ = 48
?NonDelegatingRelease@CUnknown@@UEAAKXZ PROC		; CUnknown::NonDelegatingRelease, COMDAT

; 123  : {

$LN12:
	sub	rsp, 40					; 00000028H

; 124  :     /* If the reference count drops to zero delete ourselves */
; 125  : 
; 126  :     LONG lRef = InterlockedDecrement( &m_cRef );

	mov	eax, -1
	lock xadd DWORD PTR [rcx+16], eax
	cmp	eax, 1

; 127  :     ASSERT(lRef >= 0);
; 128  : 
; 129  :     DbgLog((LOG_MEMORY,3,TEXT("    Object %d ref-- = %d"),
; 130  : 	    m_dwCookie, m_cRef));
; 131  :     if (lRef == 0) {

	jne	SHORT $LN2@NonDelegat

; 132  : 
; 133  :         // COM rules say we must protect against re-entrancy.
; 134  :         // If we are an aggregator and we hold our own interfaces
; 135  :         // on the aggregatee, the QI for these interfaces will
; 136  :         // addref ourselves. So after doing the QI we must release
; 137  :         // a ref count on ourselves. Then, before releasing the
; 138  :         // private interface, we must addref ourselves. When we do
; 139  :         // this from the destructor here it will result in the ref
; 140  :         // count going to 1 and then back to 0 causing us to
; 141  :         // re-enter the destructor. Hence we add an extra refcount here
; 142  :         // once we know we will delete the object.
; 143  :         // for an example aggregator see filgraph\distrib.cpp.
; 144  : 
; 145  :         m_cRef++;

	mov	eax, DWORD PTR [rcx+16]

; 146  : 
; 147  :         delete this;

	mov	edx, 1
	inc	eax
	mov	DWORD PTR [rcx+16], eax
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]

; 148  :         return ULONG(0);

	xor	eax, eax

; 151  :     }
; 152  : }

	add	rsp, 40					; 00000028H
	ret	0
$LN2@NonDelegat:

; 149  :     } else {
; 150  :         return max(ULONG(m_cRef), 1ul);

	mov	ecx, DWORD PTR [rcx+16]

; 104  :     return a > b ? a : b;

	mov	eax, 1
	cmp	ecx, eax
	cmova	eax, ecx

; 151  :     }
; 152  : }

	add	rsp, 40					; 00000028H
	ret	0
?NonDelegatingRelease@CUnknown@@UEAAKXZ ENDP		; CUnknown::NonDelegatingRelease
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp
;	COMDAT ?GetInterface@CUnknown@@QEAAJPEAUIUnknown@@PEAPEAX@Z
_TEXT	SEGMENT
this$dead$ = 48
pUnk$ = 56
ppv$ = 64
?GetInterface@CUnknown@@QEAAJPEAUIUnknown@@PEAPEAX@Z PROC ; CUnknown::GetInterface, COMDAT

; 159  : {

$LN5:
	sub	rsp, 40					; 00000028H

; 160  :     CheckPointer(ppv, E_POINTER);

	test	r8, r8
	jne	SHORT $LN2@GetInterfa
	mov	eax, -2147467261			; ffffffff80004003H

; 164  : }

	add	rsp, 40					; 00000028H
	ret	0
$LN2@GetInterfa:

; 161  :     *ppv = pUnk;

	mov	QWORD PTR [r8], rdx

; 162  :     pUnk->AddRef();

	mov	rcx, rdx
	mov	rax, QWORD PTR [rdx]
	call	QWORD PTR [rax+8]

; 163  :     return NOERROR;

	xor	eax, eax

; 164  : }

	add	rsp, 40					; 00000028H
	ret	0
?GetInterface@CUnknown@@QEAAJPEAUIUnknown@@PEAPEAX@Z ENDP ; CUnknown::GetInterface
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File G:\Github\microsoft\low-latency-audio\src\uac2-asio\asio\combase.cpp
;	COMDAT ??$max@K@@YAKAEBK0@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
??$max@K@@YAKAEBK0@Z PROC				; max<unsigned long>, COMDAT

; 104  :     return a > b ? a : b;

	mov	eax, DWORD PTR [rcx]
	cmp	eax, DWORD PTR [rdx]
	cmovbe	eax, DWORD PTR [rdx]

; 105  : }

	ret	0
??$max@K@@YAKAEBK0@Z ENDP				; max<unsigned long>
_TEXT	ENDS
END
